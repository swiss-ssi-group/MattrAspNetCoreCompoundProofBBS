{
  "openapi": "3.0.2",
  "info": {
    "title": "Platform Core API",
    "version": "v1.1.0",
    "description": "# Introduction\nThe Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\nThe API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n# Pagination\nMost list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters.\n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://{tenant-subdomain}.vii.mattr.global/core/v1/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n* The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\nRequesting a page after the last value in the list will return an empty `data` object.\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n\n# Authorization\nAccess to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\nThis token is then used in an `authorization` header on all calls identified as requiring `bearerAuth` (this is required for the majority of management operations).\n\n<SecurityDefinitions />\n",
    "contact": {
      "email": "support@mattr.global"
    }
  },
  "tags": [
    {
      "name": "Security"
    },
    {
      "name": "Custom Domain"
    },
    {
      "name": "DIDs"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Revocation"
    },
    {
      "name": "Presentations"
    },
    {
      "name": "Messaging"
    },
    {
      "name": "OIDC Issuer Auth"
    },
    {
      "name": "OIDC Issuers"
    },
    {
      "name": "OIDC Issuer Client"
    },
    {
      "name": "OIDC Verifier Auth"
    },
    {
      "name": "OIDC Verifiers"
    },
    {
      "name": "OIDC Verifier Client"
    },
    {
      "name": "DCC Document Signers"
    },
    {
      "name": "DCC Trusted Document Signers"
    },
    {
      "name": "DCC Sign"
    },
    {
      "name": "DCC Verify"
    },
    {
      "name": "DCC Format Extensions"
    },
    {
      "name": "NZVP Verify"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Setup",
      "tags": [
        "Security",
        "Custom Domain"
      ]
    },
    {
      "name": "Platform Core",
      "tags": [
        "DIDs",
        "Credentials",
        "Revocation",
        "Presentations",
        "Messaging"
      ]
    },
    {
      "name": "OIDC Bridge",
      "tags": [
        "OIDC Issuer Auth",
        "OIDC Issuers",
        "OIDC Issuer Client",
        "OIDC Verifier Auth",
        "OIDC Verifiers",
        "OIDC Verifier Client"
      ]
    },
    {
      "name": "DCC Extension",
      "tags": [
        "DCC Document Signers",
        "DCC Trusted Document Signers",
        "DCC Sign",
        "DCC Verify",
        "DCC Format Extensions"
      ]
    },
    {
      "name": "NZCP Extension",
      "tags": [
        "NZCP Verify"
      ]
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/core/v1/config/domain": {
      "post": {
        "operationId": "createCustomDomain",
        "tags": [
          "Custom Domain"
        ],
        "summary": "Create custom domain",
        "description": "A custom domain allows the display of your credentials or presentation requests to be rendered under the domain your preference as a tenant on the Mattr VII platform.\n\nThe verifiable custom domain can be mapped with that of the issuer or verifier stated in a credential or presentation and allow for the following attributes to be defined and returned:\n- Organisation Name\n- Domain Name\n- Logo\n- Home Page\n\n\n## Returns\nOn Success, the response from the endpoint always include the Custom Domain\n",
        "requestBody": {
          "description": "The custom domain payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "CreateCustomDomain",
                "description": "",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the custom domain"
                  },
                  "logoUrl": {
                    "type": "string",
                    "description": "Url for the domain logo"
                  },
                  "domain": {
                    "type": "string",
                    "description": "New domain"
                  },
                  "homepage": {
                    "type": "string",
                    "description": "Homepage for the url"
                  }
                },
                "required": [
                  "name",
                  "logoUrl",
                  "domain",
                  "homepage"
                ]
              },
              "examples": {
                "Create a Custom Domain": {
                  "value": {
                    "name": "Site Worker Cert",
                    "logoUrl": "https://s3.siteworkercert.com/logo.jpg",
                    "domain": "ssi.siteworkercert.com",
                    "homepage": "https://siteworkercert.com"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "title": "CreateCustomDomain",
                "description": "",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the custom domain"
                  },
                  "logoUrl": {
                    "type": "string",
                    "description": "Url for the domain logo"
                  },
                  "domain": {
                    "type": "string",
                    "description": "New domain"
                  },
                  "homepage": {
                    "type": "string",
                    "description": "Homepage for the url"
                  }
                },
                "required": [
                  "name",
                  "logoUrl",
                  "domain",
                  "homepage"
                ]
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Custom domain created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Site Worker Cert"
                    },
                    "logoUrl": {
                      "type": "string",
                      "example": "https://s3.siteworkercert.com/logo.icon"
                    },
                    "domain": {
                      "type": "string",
                      "example": "ssi.siteworkercert.com"
                    },
                    "homepage": {
                      "type": "string",
                      "example": "https://siteworkercert.com"
                    },
                    "verificationToken": {
                      "type": "string",
                      "example": "SdsswaSADasdASdasdasdsa"
                    },
                    "isVerified": {
                      "type": "boolean",
                      "example": false
                    },
                    "verifiedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "name",
                    "logoUrl",
                    "domain",
                    "homepage",
                    "verificationToken",
                    "isVerified"
                  ],
                  "title": "CustomDomainResponse"
                },
                "examples": {
                  "Created": {
                    "value": {
                      "name": "Site Worker Cert",
                      "logoUrl": "https://s3.siteworkercert.com/logo.jpg",
                      "domain": "ssi.sitesafe.org.nz",
                      "homepage": "https://siteworkercert.com",
                      "verificationToken": "SdsswaSADasdASdasdasdsa",
                      "isVerified": false,
                      "verifiedAt": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "retrieveCustomDomain",
        "tags": [
          "Custom Domain"
        ],
        "summary": "Retrieve custom domain",
        "description": "Retrieve the custom domain information and it's verification status for your Mattr VII tenant.",
        "responses": {
          "200": {
            "description": "Custom domain returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Site Worker Cert"
                    },
                    "logoUrl": {
                      "type": "string",
                      "example": "https://s3.siteworkercert.com/logo.icon"
                    },
                    "domain": {
                      "type": "string",
                      "example": "ssi.siteworkercert.com"
                    },
                    "homepage": {
                      "type": "string",
                      "example": "https://siteworkercert.com"
                    },
                    "verificationToken": {
                      "type": "string",
                      "example": "SdsswaSADasdASdasdasdsa"
                    },
                    "isVerified": {
                      "type": "boolean",
                      "example": false
                    },
                    "verifiedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "name",
                    "logoUrl",
                    "domain",
                    "homepage",
                    "verificationToken",
                    "isVerified"
                  ],
                  "title": "CustomDomainResponse"
                },
                "examples": {
                  "Retrieve Domain": {
                    "value": {
                      "name": "Site Worker Cert",
                      "logoUrl": "https://s3.siteworkercert.com/logo.icon",
                      "domain": "ssi.siteworkercert.com",
                      "homepage": "https://siteworkercert.com",
                      "verificationToken": "SdsswaSADasdASdasdasdsa",
                      "isVerified": false,
                      "verifiedAt": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "removeCustomDomain",
        "tags": [
          "Custom Domain"
        ],
        "summary": "Delete custom domain",
        "description": "Delete the custom domain.  \n\nBy deleting your existing custom domain it will break the linkage with any credentials issued under the custom domain, in turn causing issues when holders of those credentials go to present them.",
        "responses": {
          "204": {
            "description": "Custom domain deleted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update custom domain",
        "operationId": "updateCustomDomain",
        "tags": [
          "Custom Domain"
        ],
        "responses": {
          "200": {
            "description": "Custom Domain updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Site Worker Cert"
                    },
                    "logoUrl": {
                      "type": "string",
                      "example": "https://s3.siteworkercert.com/logo.icon"
                    },
                    "domain": {
                      "type": "string",
                      "example": "ssi.siteworkercert.com"
                    },
                    "homepage": {
                      "type": "string",
                      "example": "https://siteworkercert.com"
                    },
                    "verificationToken": {
                      "type": "string",
                      "example": "SdsswaSADasdASdasdasdsa"
                    },
                    "isVerified": {
                      "type": "boolean",
                      "example": false
                    },
                    "verifiedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "name",
                    "logoUrl",
                    "domain",
                    "homepage",
                    "verificationToken",
                    "isVerified"
                  ],
                  "title": "CustomDomainResponse"
                },
                "examples": {
                  "Updated": {
                    "value": {
                      "name": "Site Worker Cert",
                      "logoUrl": "https://s3.siteworkercert.com/logo.icon",
                      "domain": "ssi.siteworkercert.com",
                      "homepage": "https://siteworkercert.com",
                      "verificationToken": "SdsswaSADasdASdasdasdsa",
                      "isVerified": true,
                      "verifiedAt": "2021-04-15T07:37:25.008Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Update the custom domain.\n\nFollows the same structure as the Create a Custom Domain endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateCustomDomain",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "CreateCustomDomain",
                    "description": "",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the custom domain"
                      },
                      "logoUrl": {
                        "type": "string",
                        "description": "Url for the domain logo"
                      },
                      "domain": {
                        "type": "string",
                        "description": "New domain"
                      },
                      "homepage": {
                        "type": "string",
                        "description": "Homepage for the url"
                      }
                    },
                    "required": [
                      "name",
                      "logoUrl",
                      "domain",
                      "homepage"
                    ]
                  }
                ]
              },
              "examples": {
                "Update a Custom Domain": {
                  "value": {
                    "name": "Site Worker Cert",
                    "logoUrl": "https://s3.siteworkercert.com/logo.jpg",
                    "domain": "ssi.siteworkercert.com",
                    "homepage": "https://siteworkercert.com"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/core/v1/config/domain/verify": {
      "post": {
        "operationId": "verifyCustomDomain",
        "tags": [
          "Custom Domain"
        ],
        "summary": "Verify custom domain",
        "description": "Verifies that you have control of the custom domain by examining the TXT record of the domain.",
        "responses": {
          "204": {
            "description": "Custom domain verified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/.well-known/did-configuration": {
      "get": {
        "security": [],
        "tags": [
          "DIDs"
        ],
        "summary": "Well known DID configuration",
        "description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant.\n\nSee https://identity.foundation/.well-known/resources/did-configuration/\n\nThese entries are automatically configured for **all** DIDs created by the tenant and is used for any party wanting to establish the relationship between domain ownership and the DIDs by exposing cryptographic proofs.\n\nThis endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party wishing to discover the domain to DID relationship.\n",
        "responses": {
          "200": {
            "description": "List of DID Configuration entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@context": {
                            "type": "array",
                            "example": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://www.w3.org/2018/credentials/examples/v1"
                            ],
                            "items": {
                              "type": "string",
                              "minLength": 1,
                              "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                            }
                          },
                          "type": {
                            "type": "array",
                            "example": [
                              "VerifiableCredential",
                              "AlumniCredential"
                            ],
                            "items": {
                              "type": "string",
                              "minLength": 1,
                              "example": "\"AlumniCredential\", \"VerifiableCredential\""
                            }
                          },
                          "issuer": {
                            "description": "Includes issuer id (did) and its domain (inside name parameter)",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Example University"
                                  }
                                }
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "issuanceDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-05-02T12:06:29.156Z"
                          },
                          "credentialStatus": {
                            "type": "object",
                            "description": "Credential status location information",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique ID for the credential status",
                                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                              },
                              "type": {
                                "type": "string",
                                "description": "Indicates that the status contains revocation information",
                                "example": "RevocationList2020Status"
                              },
                              "revocationListIndex": {
                                "type": "integer",
                                "example": 1,
                                "description": "The location within the revocation list for the credential"
                              },
                              "revocationListCredential": {
                                "type": "string",
                                "description": "The location of the revocation list",
                                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                              }
                            },
                            "title": "CredentialStatus"
                          },
                          "credentialSubject": {
                            "type": "object",
                            "example": {
                              "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                              "givenName": "Jamie",
                              "familyName": "Doe"
                            },
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                              },
                              "givenName": {
                                "type": "string",
                                "example": "Jamie"
                              },
                              "familyName": {
                                "type": "string",
                                "example": "Doe"
                              },
                              "alumniOf": {
                                "type": "string",
                                "example": "Example University"
                              }
                            }
                          },
                          "proof": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "Ed25519Signature2018"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-05-02T12:06:29Z"
                              },
                              "jws": {
                                "type": "string",
                                "description": "Compact form of JWS",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                              },
                              "proofPurpose": {
                                "type": "string",
                                "example": "assertionMethod"
                              },
                              "verificationMethod": {
                                "type": "string",
                                "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                              }
                            },
                            "title": "ED25519Signature2018"
                          },
                          "name": {
                            "type": "string",
                            "example": "Course credential",
                            "description": "Name of the credential (requires v2 data model)"
                          },
                          "description": {
                            "type": "string",
                            "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                            "description": "Description of the credential (requires v2 data model)"
                          }
                        },
                        "required": [
                          "@context",
                          "type",
                          "issuanceDate",
                          "credentialSubject",
                          "proof"
                        ],
                        "title": "VerifiableCredential"
                      }
                    }
                  },
                  "title": "GetDidConfigJsonldResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "entries": [
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld"
                          ],
                          "type": [
                            "VerifiableCredential",
                            "DomainLinkageCredential"
                          ],
                          "issuer": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                          "issuanceDate": "2020-11-01T21:33:38.398Z",
                          "credentialSubject": {
                            "id": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                            "origin": "tenant.vii.mattr.global"
                          },
                          "proof": {
                            "jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..sOuFZV7lrUdxzOaRrCYoD9bbgxp3oEX1fceFFwxekjvJBzbI_ZzKL8-vPWOoFY200KTPwLYcEPhto0GQfM0iDg",
                            "type": "Ed25519Signature2018",
                            "created": "2020-11-01T21:33:38Z",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                          }
                        },
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://w3c-ccg.github.io/ldp-bbs2020/context/v1",
                            "https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld"
                          ],
                          "type": [
                            "VerifiableCredential",
                            "DomainLinkageCredential"
                          ],
                          "issuer": "did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v",
                          "issuanceDate": "2020-11-01T21:33:38.427Z",
                          "credentialSubject": {
                            "id": "did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v",
                            "origin": "product-team.platform.staging.mattrlabs.io"
                          },
                          "proof": {
                            "type": "BbsBlsSignature2020",
                            "created": "2020-11-01T21:33:38Z",
                            "proofValue": "itoN9nPf6ut0/IxkNp+qesJOju9hV1BYxFMkP4VynqUxFalmQV4PQ6wJhqz5KJppC39+VL+19CxVjPXUXaIDVGRs7WPDGbLaGeViu1Mm4nZCgJbptdw8HOkkpZZ21SCaTN+bok2IG5XRH+QsBWH/cA==",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v#zUC75v2eWSVhTC9XtyYci1cdrHNze4Wwzgv92GUDXeYQEkfZuu2CavRBVFkk9mnpToxiUMacjgYAx9JBmuoJXWc7YCRDDjTD5ocunta9DJrdmgCdAmuFCUfBPTo4GAnTY7x4582"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "wellKnownDidConfig"
      }
    },
    "/core/v1/dids/{id}": {
      "get": {
        "tags": [
          "DIDs"
        ],
        "summary": "Resolve a DID",
        "description": "When the DID is retrieved by the DID provided in the path, the DID Document is also attempted to be resolved by using the DID method and method identifier, this may involve a network call depending on the method involved.\n\nExample:\n\n`did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9` - the public key is encapsulated in the DID\n`did:ion:EiBbvWpBHPql_2W9sObr4vPFl9k9InEDYOEDXvPPRDRyBg` -  will be resolved on the ION network\n`did:web:mattr.global` - will be resolved by accessing the `/.well-known/did.json` of the domain\n\n#### Returns\n\nIf the DID Document is publicly resolvable it is returned along with meta-data already held about the DID by the tenant;\n- `didDocument`: See our [tutorials on MATTR Learn](/tutorials/dids/use-did) to understand more about the anatomy of the DID Document for each method.\n- `registrationStatus`: Ledger-based DIDs may incur a lag in processing to the ledger. Also for DIDs that require additional actions (e.g. `did:web`) this status will be update from `PROCESSING` to `COMPLETED` once publicly resolvable.\n- `localMetadata`: This includes the initial DID document that the platform expects to find publicly resolvable.",
        "responses": {
          "200": {
            "description": "A DID Document and meta-data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "didDocument": {
                      "type": "object",
                      "title": "DidDocument"
                    },
                    "registrationStatus": {
                      "type": "string"
                    },
                    "localMetadata": {
                      "type": "object",
                      "required": [
                        "keys"
                      ],
                      "properties": {
                        "registered": {
                          "type": "number",
                          "description": "Timestamp of when the DID was registered",
                          "example": 1583233799656
                        },
                        "keys": {
                          "type": "array",
                          "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kmsKeyId": {
                                "type": "string",
                                "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                              },
                              "didDocumentKeyId": {
                                "type": "string",
                                "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                              }
                            },
                            "title": "DidMetadataKey"
                          }
                        },
                        "initialDidDocument": {
                          "type": "object",
                          "description": "The DID document that was created for the DID",
                          "items": {
                            "type": "object",
                            "title": "DidDocument"
                          }
                        }
                      },
                      "title": "DidMetadata"
                    }
                  },
                  "title": "GetDidResponse"
                },
                "examples": {
                  "Example did:key": {
                    "value": {
                      "didDocument": {
                        "@context": "https://w3.org/ns/did/v1",
                        "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                        "publicKey": [
                          {
                            "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                            "type": "Ed25519VerificationKey2018",
                            "controller": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                            "publicKeyBase58": "6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm"
                          }
                        ],
                        "authentication": [
                          "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                        ],
                        "assertionMethod": [
                          "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                        ],
                        "capabilityDelegation": [
                          "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                        ],
                        "capabilityInvocation": [
                          "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                        ],
                        "keyAgreement": [
                          {
                            "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G",
                            "type": "X25519KeyAgreementKey2019",
                            "controller": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                            "publicKeyBase58": "CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW"
                          }
                        ]
                      },
                      "registrationStatus": "COMPLETED",
                      "localMetadata": {
                        "keys": [
                          {
                            "kmsKeyId": "6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm",
                            "didDocumentKeyId": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                          }
                        ],
                        "registered": 1588562204304
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "404": {
                    "value": {
                      "code": "NotFound",
                      "message": "Resource Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "resolveDid"
      },
      "delete": {
        "description": "Deletes a DID and all associated metadata including the Private keys from the platform and KMS. \nFor ledger-based DIDs the public DID Document will still be available.\nFor `did:web` you can remove the `did.json` from your hosted domain.",
        "tags": [
          "DIDs"
        ],
        "summary": "Delete a DID",
        "responses": {
          "204": {
            "description": "DID successfully deleted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "404": {
                    "value": {
                      "code": "NotFound",
                      "message": "Resource Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteDid"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "DID",
          "schema": {
            "type": "string",
            "format": "did",
            "example": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
          },
          "required": true
        }
      ]
    },
    "/core/v1/dids": {
      "get": {
        "tags": [
          "DIDs"
        ],
        "summary": "Retrieve a list of DIDs",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of the list, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the list"
          }
        ],
        "description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n",
        "responses": {
          "200": {
            "description": "A list of DIDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "did",
                          "localMetadata"
                        ],
                        "properties": {
                          "did": {
                            "type": "string",
                            "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
                          },
                          "localMetadata": {
                            "type": "object",
                            "required": [
                              "keys"
                            ],
                            "properties": {
                              "registered": {
                                "type": "number",
                                "description": "Timestamp of when the DID was registered",
                                "example": 1583233799656
                              },
                              "keys": {
                                "type": "array",
                                "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "kmsKeyId": {
                                      "type": "string",
                                      "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                                    },
                                    "didDocumentKeyId": {
                                      "type": "string",
                                      "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                                    }
                                  },
                                  "title": "DidMetadataKey"
                                }
                              },
                              "initialDidDocument": {
                                "type": "object",
                                "description": "The DID document that was created for the DID",
                                "items": {
                                  "type": "object",
                                  "title": "DidDocument"
                                }
                              }
                            },
                            "title": "DidMetadata"
                          }
                        }
                      }
                    }
                  },
                  "title": "GetDidsResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "nextCursor": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "data": [
                        {
                          "did": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                          "localMetadata": {
                            "keys": [
                              {
                                "kmsKeyId": "5jFLoKmMPgqWaV1Ler5yaECr6XjDX6DPymZhYpVnLDVh",
                                "didDocumentKeyId": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                              }
                            ],
                            "registered": 1586312761694
                          }
                        },
                        {
                          "did": "did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT",
                          "localMetadata": {
                            "keys": [
                              {
                                "kmsKeyId": "2ezhxiEP6mgmMoWwaa3KJqS6GhPfYHpQTKvCAtPYCib5",
                                "didDocumentKeyId": "did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT#z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT"
                              }
                            ],
                            "registered": 1586841097944
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveListOfDids"
      },
      "post": {
        "tags": [
          "DIDs"
        ],
        "summary": "Create a DID",
        "description": "Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\nMethods supported:\n- key\n- web\n- ion\n\n**Options:**\nThe options parameter is used to define further configuration when creating the DID, the available options vary between methods.\n\n> Note: W3C DIDs are an emerging standard at the W3C, DIDs issued during a trial on the MATTR VII platform may be subject to change, as you move into production workloads please get in touch to discuss your needs.\n\n### **Creating did:key**\nA DID with a DID method of key can be created.\n\nIf no options are provided, a DID will be created with an ed25519 key type.\n\nIf the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n\n> A DID Key created with an experimental `bls12381g2` key type can only be used for issuing credentials.  \n\n### **Creating did:web**\nA DID with a DID method of web can be created by specifying the `domain` where the DID document is going to be hosted in the `options` body.\n\n\nThe returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\nWhen the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\nOnce the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\nNote that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.vii.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n\n### **Creating did:ion**\nA DID with a DID method of ion can be created.  \n\nPublic DID Document is anchored by batching using the ION network, due to the lag incurred in registering the DID Document, which may take between 20-120 minutes, the `registrationStatus` will remain as `PROCESSING` until the DID Document can be retrieved from the public nodes.\n\n> Note: The creation of ION DIDs during a trial of the MATTR VII platform may be subject to change, as you move into production workloads please get in touch to discuss your needs.\n\n\n#### Returns\nThe DID, associated metadata and registration status.\n\nUnsupported Methods result in a 400 response with an \"Invalid value\" message.",
        "requestBody": {
          "description": "Options for creating the decentralized identifier",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "enum": [
                      "key",
                      "web",
                      "ion"
                    ]
                  },
                  "options": {
                    "type": "object",
                    "description": "To define a key type for a did:key or to define a domain for did:web",
                    "minItems": 1,
                    "example": {
                      "keyType": "bls12381g2"
                    }
                  }
                },
                "required": [
                  "method"
                ],
                "description": "",
                "title": "CreateDidDocument"
              },
              "examples": {
                "Create did:key": {
                  "value": {
                    "method": "key",
                    "options": {
                      "keyType": "ed25519"
                    }
                  }
                },
                "Create did:web": {
                  "value": {
                    "method": "web",
                    "options": {
                      "domain": "mattr.global"
                    }
                  }
                },
                "Create did:ion": {
                  "value": {
                    "method": "ion",
                    "options": {
                      "keyType": "bls12381g2"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DID document created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "registrationStatus": {
                      "type": "string"
                    },
                    "did": {
                      "type": "string",
                      "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
                    },
                    "metadata": {
                      "type": "object",
                      "required": [
                        "keys"
                      ],
                      "properties": {
                        "registered": {
                          "type": "number",
                          "description": "Timestamp of when the DID was registered",
                          "example": 1583233799656
                        },
                        "keys": {
                          "type": "array",
                          "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kmsKeyId": {
                                "type": "string",
                                "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                              },
                              "didDocumentKeyId": {
                                "type": "string",
                                "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                              }
                            },
                            "title": "DidMetadataKey"
                          }
                        },
                        "initialDidDocument": {
                          "type": "object",
                          "description": "The DID document that was created for the DID",
                          "items": {
                            "type": "object",
                            "title": "DidDocument"
                          }
                        }
                      },
                      "title": "DidMetadata"
                    }
                  },
                  "title": "CreateDidResponse"
                },
                "examples": {
                  "did:key": {
                    "value": {
                      "did": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq",
                      "registrationStatus": "COMPLETED",
                      "localMetadata": {
                        "keys": [
                          {
                            "kmsKeyId": "D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT",
                            "didDocumentKeyId": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                          }
                        ],
                        "registered": 1588741969938,
                        "initialDidDocument": {
                          "@context": "https://w3.org/ns/did/v1",
                          "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                          "publicKey": [
                            {
                              "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                              "type": "Ed25519VerificationKey2018",
                              "controller": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                              "publicKeyBase58": "6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm"
                            }
                          ],
                          "authentication": [
                            "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                          ],
                          "assertionMethod": [
                            "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                          ],
                          "capabilityDelegation": [
                            "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                          ],
                          "capabilityInvocation": [
                            "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9"
                          ],
                          "keyAgreement": [
                            {
                              "id": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G",
                              "type": "X25519KeyAgreementKey2019",
                              "controller": "did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9",
                              "publicKeyBase58": "CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Unsupported method": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Bad Request",
                      "details": [
                        {
                          "value": "xxx",
                          "msg": "Invalid value",
                          "param": "method",
                          "location": "body"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "createDid"
      },
      "parameters": []
    },
    "/core/v1/credentials": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Create a verifiable credential",
        "requestBody": {
          "description": "The credential payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "type": "array",
                    "description": "Additional to any JSON-LD contexts 'https://www.w3.org/2018/credentials/v1' is always required.",
                    "minLength": 1,
                    "example": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://schema.org"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "subjectId": {
                    "type": "string",
                    "description": "Generally a DID, identifier of who/what the subject is",
                    "example": "did:example:abcdb1f712ebc6f1c276e12ec21",
                    "minLength": 1
                  },
                  "tag": {
                    "type": "string",
                    "description": "An optional tag to filter by, will not be part of the issued credential",
                    "example": "identifier123",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "type": {
                    "description": "Type for the Credential, VerifiableCredential must be presented",
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "VerifiableCredential",
                        "description": "Describes the additional specific types of the claimed data, resulting credential will only include VerifiableCredential"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "example": "[VerifiableCredential, AlumniCredential]",
                          "description": "Describes the additional specific types of the claimed data, must be within the scope of @context, resulting credential will always include VerifiableCredential"
                        }
                      }
                    ]
                  },
                  "claims": {
                    "type": "object",
                    "description": "Each value is a claim that is defined by one of the JSON-LD schemas.",
                    "minItems": 1,
                    "example": {
                      "givenName": "Jamie",
                      "familyName": "Doe",
                      "alumniOf": "<span lang=\"en\">Example University</span>"
                    }
                  },
                  "issuer": {
                    "type": "object",
                    "description": "Includes Issuer id (DID) and domain name",
                    "required": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                      },
                      "name": {
                        "type": "string",
                        "example": "https://example.edu/issuers/565049"
                      }
                    }
                  },
                  "persist": {
                    "type": "boolean",
                    "description": "Flag to indicate whether the full credential should be stored in platform"
                  },
                  "revocable": {
                    "type": "boolean",
                    "description": "Flag to indicate if the credential needs to support revocation"
                  },
                  "name": {
                    "type": "string",
                    "example": "Course credential",
                    "description": "Name of the credential (requires v2 data model)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the credential (requires v2 data model)",
                    "example": "This credential shows that the person has attended the mention course and attained the relevant awards."
                  }
                },
                "required": [
                  "@context",
                  "type",
                  "claims",
                  "issuer"
                ],
                "title": "CreateCredentialRequest"
              },
              "examples": {
                "Create a Credential": {
                  "value": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://schema.org"
                    ],
                    "subjectId": "did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y",
                    "type": [
                      "VerifiableCredential",
                      "AlumniCredential"
                    ],
                    "claims": {
                      "givenName": "Jamie",
                      "familyName": "Doe",
                      "alumniOf": "Example University"
                    },
                    "issuer": {
                      "id": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                      "name": "Example University"
                    },
                    "persist": true,
                    "tag": "identifier123",
                    "revocable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Credential created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {},
                  "title": "CreateCredentialResponse",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "873277c0-a162-11ea-8a1d-a111119347e6"
                    },
                    "credential": {
                      "type": "object",
                      "properties": {
                        "@context": {
                          "type": "array",
                          "example": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://www.w3.org/2018/credentials/examples/v1"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                          }
                        },
                        "type": {
                          "type": "array",
                          "example": [
                            "VerifiableCredential",
                            "AlumniCredential"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"AlumniCredential\", \"VerifiableCredential\""
                          }
                        },
                        "issuer": {
                          "description": "Includes issuer id (did) and its domain (inside name parameter)",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Example University"
                                }
                              }
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "issuanceDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29.156Z"
                        },
                        "credentialStatus": {
                          "type": "object",
                          "description": "Credential status location information",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique ID for the credential status",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                            },
                            "type": {
                              "type": "string",
                              "description": "Indicates that the status contains revocation information",
                              "example": "RevocationList2020Status"
                            },
                            "revocationListIndex": {
                              "type": "integer",
                              "example": 1,
                              "description": "The location within the revocation list for the credential"
                            },
                            "revocationListCredential": {
                              "type": "string",
                              "description": "The location of the revocation list",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                            }
                          },
                          "title": "CredentialStatus"
                        },
                        "credentialSubject": {
                          "type": "object",
                          "example": {
                            "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                            "givenName": "Jamie",
                            "familyName": "Doe"
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                            },
                            "givenName": {
                              "type": "string",
                              "example": "Jamie"
                            },
                            "familyName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "alumniOf": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        "proof": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "Ed25519Signature2018"
                            },
                            "created": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-05-02T12:06:29Z"
                            },
                            "jws": {
                              "type": "string",
                              "description": "Compact form of JWS",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                            },
                            "proofPurpose": {
                              "type": "string",
                              "example": "assertionMethod"
                            },
                            "verificationMethod": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            }
                          },
                          "title": "ED25519Signature2018"
                        },
                        "name": {
                          "type": "string",
                          "example": "Course credential",
                          "description": "Name of the credential (requires v2 data model)"
                        },
                        "description": {
                          "type": "string",
                          "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                          "description": "Description of the credential (requires v2 data model)"
                        }
                      },
                      "required": [
                        "@context",
                        "type",
                        "issuanceDate",
                        "credentialSubject",
                        "proof"
                      ],
                      "title": "VerifiableCredential"
                    },
                    "tag": {
                      "type": "string",
                      "example": "identifier123"
                    },
                    "credentialStatus": {
                      "type": "object",
                      "description": "Credential status location information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique ID for the credential status",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates that the status contains revocation information",
                          "example": "RevocationList2020Status"
                        },
                        "revocationListIndex": {
                          "type": "integer",
                          "example": 1,
                          "description": "The location within the revocation list for the credential"
                        },
                        "revocationListCredential": {
                          "type": "string",
                          "description": "The location of the revocation list",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                        }
                      },
                      "title": "CredentialStatus"
                    },
                    "issuanceDate": {
                      "type": "string",
                      "example": "2020-05-02T12:06:29.156Z"
                    }
                  },
                  "required": [
                    "id",
                    "credential",
                    "issuanceDate"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Creates a Verifiable Credential (VC or just Credential) in a JSON-LD format adhering to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n\n**Creating the Payload:**\n\nThe values required by the operation are validated where available and used to construct the Verifiable Credential.\n\nThe Credential is issued using JSON-LD with linked data proofs, the `type` values of the Credential and the Subject Claims must be represented by a schema in `@context`.\n> The schema `https://www3.org/2018/credentials/v1` is always required in addition any `@context` values, so that the Credential can be referenced.\n\n> The `type` value of `VerifiableCredential` must be used as the *first* value in the array to conform to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n**Subject Identifiers**\n\nIn general, the Subject identifier in the `subjectId` field should have been authentically bound to the subject and authenticated against the information used in the claims, for example by using an OpenID Connect authentication flow or another mechanism including out-of-band processes.\n\nCredentials may be issued without subject identifiers, this covers uses-cases, where the credential cannot or does not need to be adequately bound to a Subject DID and may be treated as a bearer credential or reissued at a later time once the credential can be bound.\n\n**ZKP-enabled BBS+ credential:**\n\nIf you wish to issue a ZKP-enabled Verifiable Credential, the provided `issuer` `id` must be a did:key with a key type of `bls12381g2`. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential. Note that the schema `https://w3c-ccg.github.io/ldp-bbs2020/context/v1` will automatically be added to the `@context` in the credential.\n\n> During Preview this feature is experimental. It may change over time and may require credentials to be reissued.\n\n**Credential meta-data:**\n\nSetting the `persist` value to `true` will store the entire credential contents as well as the meta-data on the platform. If set to `false` only the credential meta-data is held on the platform:\n- `id`\n- `tag` (optional)\n- `credentialStatus` (optional)\n- `issuanceDate`\n\nThe optional `tag` value can be used to externally reference the issued credential.\n\n#### Returns\nOn success, the Verifiable Credential is always provided in the response along with meta-data.\nSubject bound credential should be delivered to the intended subject.\n",
        "operationId": "createCredential"
      },
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Retrieve list of credential data",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "identifier123"
            },
            "in": "query",
            "name": "tag",
            "description": "The optional external reference to filter on"
          },
          {
            "schema": {
              "type": "string",
              "example": "AlumniCredential"
            },
            "in": "query",
            "name": "type",
            "description": "The optional credential type to filter on"
          },
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of returned credential entries, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the range of credential entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-examples": {},
                        "title": "WebManifestResponse",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "873277c0-a162-11ea-8a1d-a111119347e6"
                          },
                          "credential": {
                            "type": "object",
                            "properties": {
                              "@context": {
                                "type": "array",
                                "example": [
                                  "https://www.w3.org/2018/credentials/v1",
                                  "https://www.w3.org/2018/credentials/examples/v1"
                                ],
                                "items": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                                }
                              },
                              "type": {
                                "type": "array",
                                "example": [
                                  "VerifiableCredential",
                                  "AlumniCredential"
                                ],
                                "items": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "\"AlumniCredential\", \"VerifiableCredential\""
                                }
                              },
                              "issuer": {
                                "description": "Includes issuer id (did) and its domain (inside name parameter)",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Example University"
                                      }
                                    }
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "issuanceDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-05-02T12:06:29.156Z"
                              },
                              "credentialStatus": {
                                "type": "object",
                                "description": "Credential status location information",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique ID for the credential status",
                                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates that the status contains revocation information",
                                    "example": "RevocationList2020Status"
                                  },
                                  "revocationListIndex": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The location within the revocation list for the credential"
                                  },
                                  "revocationListCredential": {
                                    "type": "string",
                                    "description": "The location of the revocation list",
                                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                                  }
                                },
                                "title": "CredentialStatus"
                              },
                              "credentialSubject": {
                                "type": "object",
                                "example": {
                                  "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                                  "givenName": "Jamie",
                                  "familyName": "Doe"
                                },
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                                  },
                                  "givenName": {
                                    "type": "string",
                                    "example": "Jamie"
                                  },
                                  "familyName": {
                                    "type": "string",
                                    "example": "Doe"
                                  },
                                  "alumniOf": {
                                    "type": "string",
                                    "example": "Example University"
                                  }
                                }
                              },
                              "proof": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "Ed25519Signature2018"
                                  },
                                  "created": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2020-05-02T12:06:29Z"
                                  },
                                  "jws": {
                                    "type": "string",
                                    "description": "Compact form of JWS",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                  },
                                  "proofPurpose": {
                                    "type": "string",
                                    "example": "assertionMethod"
                                  },
                                  "verificationMethod": {
                                    "type": "string",
                                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                  }
                                },
                                "title": "ED25519Signature2018"
                              },
                              "name": {
                                "type": "string",
                                "example": "Course credential",
                                "description": "Name of the credential (requires v2 data model)"
                              },
                              "description": {
                                "type": "string",
                                "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                                "description": "Description of the credential (requires v2 data model)"
                              }
                            },
                            "required": [
                              "@context",
                              "type",
                              "issuanceDate",
                              "credentialSubject",
                              "proof"
                            ],
                            "title": "VerifiableCredential"
                          },
                          "tag": {
                            "type": "string",
                            "example": "identifier123"
                          },
                          "credentialStatus": {
                            "type": "object",
                            "description": "Credential status location information",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique ID for the credential status",
                                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                              },
                              "type": {
                                "type": "string",
                                "description": "Indicates that the status contains revocation information",
                                "example": "RevocationList2020Status"
                              },
                              "revocationListIndex": {
                                "type": "integer",
                                "example": 1,
                                "description": "The location within the revocation list for the credential"
                              },
                              "revocationListCredential": {
                                "type": "string",
                                "description": "The location of the revocation list",
                                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                              }
                            },
                            "title": "CredentialStatus"
                          },
                          "issuanceDate": {
                            "type": "string",
                            "example": "2020-05-02T12:06:29.156Z"
                          }
                        },
                        "required": [
                          "id",
                          "issuanceDate"
                        ]
                      }
                    }
                  },
                  "title": "GetCredentialsResponse"
                },
                "examples": {
                  "List of credential data": {
                    "value": {
                      "nextCursor": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "data": [
                        {
                          "id": "873277c0-a162-11ea-8a1d-a111119347e6",
                          "credential": {
                            "@context": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://schema.org"
                            ],
                            "type": [
                              "VerifiableCredential",
                              "AlumniCredential"
                            ],
                            "issuer": {
                              "id": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                              "name": "https://tenant.vii.mattr.global"
                            },
                            "issuanceDate": "2020-05-02T12:06:29.156Z",
                            "credentialSubject": {
                              "id": "did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y",
                              "givenName": "Jamie",
                              "familyName": "Doe"
                            },
                            "proof": {
                              "type": "Ed25519Signature2018",
                              "created": "2020-05-02T12:06:29Z",
                              "jws": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                              "proofPurpose": "assertionMethod",
                              "verificationMethod": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y"
                            }
                          },
                          "tag": "identifier123",
                          "issuanceDate": "2020-05-02T12:06:29.156Z"
                        },
                        {
                          "id": "9043aa74-eb08-11ea-adc1-0242ac120002",
                          "tag": "identifier124",
                          "credentialStatus": {
                            "id": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1",
                            "type": "RevocationList2020Status",
                            "revocationListCredential": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3",
                            "revocationListIndex": 1
                          },
                          "issuanceDate": "2020-10-06T03:21:02.397Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad query parameters in request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Cursor not found": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "xxxx",
                          "msg": "id and createdAt is missing",
                          "param": "cursor",
                          "location": "query"
                        }
                      ]
                    }
                  },
                  "Limit exceeded": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "1001",
                          "msg": "Invalid value",
                          "param": "limit",
                          "location": "query"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveListCreds",
        "description": "Returns a list of all credential data stored in the tenant.\n\n**In the list**\n\nInside the `data` array, there is an body for each credential issued on the platform, in addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge are set not to be persisted.\n\n**Pagination**\n\nPagination can be controlled by a cursor method using the `cursor`and `limit` query parameters. The `nextCursor` is found at the start of each returned range of credential entries and the `limit` determines how many entries are returned in that request, with a maximum value of `1000`.\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n> The optional `tag` filter or the Credential `type` can be used to retrieve credential data.\n"
      },
      "parameters": []
    },
    "/core/v1/credentials/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Credential ID"
        }
      ],
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Retrieve credential data",
        "responses": {
          "200": {
            "description": "Credential returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {},
                  "title": "WebManifestResponse",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "873277c0-a162-11ea-8a1d-a111119347e6"
                    },
                    "credential": {
                      "type": "object",
                      "properties": {
                        "@context": {
                          "type": "array",
                          "example": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://www.w3.org/2018/credentials/examples/v1"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                          }
                        },
                        "type": {
                          "type": "array",
                          "example": [
                            "VerifiableCredential",
                            "AlumniCredential"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"AlumniCredential\", \"VerifiableCredential\""
                          }
                        },
                        "issuer": {
                          "description": "Includes issuer id (did) and its domain (inside name parameter)",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Example University"
                                }
                              }
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "issuanceDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29.156Z"
                        },
                        "credentialStatus": {
                          "type": "object",
                          "description": "Credential status location information",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique ID for the credential status",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                            },
                            "type": {
                              "type": "string",
                              "description": "Indicates that the status contains revocation information",
                              "example": "RevocationList2020Status"
                            },
                            "revocationListIndex": {
                              "type": "integer",
                              "example": 1,
                              "description": "The location within the revocation list for the credential"
                            },
                            "revocationListCredential": {
                              "type": "string",
                              "description": "The location of the revocation list",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                            }
                          },
                          "title": "CredentialStatus"
                        },
                        "credentialSubject": {
                          "type": "object",
                          "example": {
                            "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                            "givenName": "Jamie",
                            "familyName": "Doe"
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                            },
                            "givenName": {
                              "type": "string",
                              "example": "Jamie"
                            },
                            "familyName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "alumniOf": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        "proof": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "Ed25519Signature2018"
                            },
                            "created": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-05-02T12:06:29Z"
                            },
                            "jws": {
                              "type": "string",
                              "description": "Compact form of JWS",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                            },
                            "proofPurpose": {
                              "type": "string",
                              "example": "assertionMethod"
                            },
                            "verificationMethod": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            }
                          },
                          "title": "ED25519Signature2018"
                        },
                        "name": {
                          "type": "string",
                          "example": "Course credential",
                          "description": "Name of the credential (requires v2 data model)"
                        },
                        "description": {
                          "type": "string",
                          "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                          "description": "Description of the credential (requires v2 data model)"
                        }
                      },
                      "required": [
                        "@context",
                        "type",
                        "issuanceDate",
                        "credentialSubject",
                        "proof"
                      ],
                      "title": "VerifiableCredential"
                    },
                    "tag": {
                      "type": "string",
                      "example": "identifier123"
                    },
                    "credentialStatus": {
                      "type": "object",
                      "description": "Credential status location information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique ID for the credential status",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates that the status contains revocation information",
                          "example": "RevocationList2020Status"
                        },
                        "revocationListIndex": {
                          "type": "integer",
                          "example": 1,
                          "description": "The location within the revocation list for the credential"
                        },
                        "revocationListCredential": {
                          "type": "string",
                          "description": "The location of the revocation list",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                        }
                      },
                      "title": "CredentialStatus"
                    },
                    "issuanceDate": {
                      "type": "string",
                      "example": "2020-05-02T12:06:29.156Z"
                    }
                  },
                  "required": [
                    "id",
                    "issuanceDate"
                  ]
                },
                "examples": {
                  "With persisted credential": {
                    "value": {
                      "id": "873277c0-a162-11ea-8a1d-a111119347e6",
                      "credential": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://schema.org"
                        ],
                        "type": [
                          "VerifiableCredential",
                          "AlumniCredential"
                        ],
                        "issuer": {
                          "id": "did:issuer:abcdb1f712ebc6f1c276e12ec21",
                          "name": "https://tenant.vii.mattr.global"
                        },
                        "issuanceDate": "2020-05-02T12:06:29.156Z",
                        "credentialStatus": {
                          "id": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1",
                          "type": "RevocationList2020Status",
                          "revocationListCredential": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3",
                          "revocationListIndex": 4
                        },
                        "credentialSubject": {
                          "id": "did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y",
                          "givenName": "Jamie",
                          "familyName": "Doe"
                        },
                        "proof": {
                          "type": "Ed25519Signature2018",
                          "created": "2020-05-02T12:06:29Z",
                          "jws": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                          "proofPurpose": "assertionMethod",
                          "verificationMethod": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        }
                      },
                      "tag": "identifier123",
                      "credentialStatus": {
                        "id": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1",
                        "type": "RevocationList2020Status",
                        "revocationListCredential": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3",
                        "revocationListIndex": 4
                      },
                      "issuanceDate": "2020-05-02T12:06:29.156Z"
                    }
                  },
                  "No persisted credential": {
                    "value": {
                      "id": "9043aa74-eb08-11ea-adc1-0242ac120002",
                      "tag": "identifier124",
                      "issuanceDate": "2020-05-02T12:06:29.156Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Credential ID not in a UUID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "retrieveCredential",
        "description": "Get data for a previously created credential using its ID.\n\nIn addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge do not have their contents persisted."
      },
      "delete": {
        "tags": [
          "Credentials"
        ],
        "summary": "Remove credential data",
        "responses": {
          "204": {
            "description": "Credential deleted"
          },
          "400": {
            "description": "Invalid id parameter format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Credential ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "removeCredential",
        "description": "Remove all stored credential data from the tenant using its ID.\n\n> The entire entry including meta-data and the credential contents is removed from the system and cannot be recovered."
      }
    },
    "/core/v1/credentials/verify": {
      "post": {
        "operationId": "verify-credential",
        "tags": [
          "Credentials"
        ],
        "summary": "Verify a credential",
        "description": "Send any JSON-LD Verifiable Credential that conforms to the [W3C Verifiable Credentials data model](https://www.w3.org/TR/vc-data-model/) to perform verification checks and return a response:\n- Issuer DID can be resolved\n- JSON-LD context is valid for subject claims\n- Proof is valid & the credential has not been tampered with\n- Is not in a revoked status on a RevocationList2020\nThis endpoint can be used to check any Credential issued by any service provider.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "VerifyCredentialRequest",
                "type": "object",
                "properties": {
                  "credential": {
                    "type": "object",
                    "properties": {
                      "@context": {
                        "type": "array",
                        "example": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://www.w3.org/2018/credentials/examples/v1"
                        ],
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                        }
                      },
                      "type": {
                        "type": "array",
                        "example": [
                          "VerifiableCredential",
                          "AlumniCredential"
                        ],
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "example": "\"AlumniCredential\", \"VerifiableCredential\""
                        }
                      },
                      "issuer": {
                        "description": "Includes issuer id (did) and its domain (inside name parameter)",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                              },
                              "name": {
                                "type": "string",
                                "example": "Example University"
                              }
                            }
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "issuanceDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-05-02T12:06:29.156Z"
                      },
                      "credentialStatus": {
                        "type": "object",
                        "description": "Credential status location information",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique ID for the credential status",
                            "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                          },
                          "type": {
                            "type": "string",
                            "description": "Indicates that the status contains revocation information",
                            "example": "RevocationList2020Status"
                          },
                          "revocationListIndex": {
                            "type": "integer",
                            "example": 1,
                            "description": "The location within the revocation list for the credential"
                          },
                          "revocationListCredential": {
                            "type": "string",
                            "description": "The location of the revocation list",
                            "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                          }
                        },
                        "title": "CredentialStatus"
                      },
                      "credentialSubject": {
                        "type": "object",
                        "example": {
                          "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                          "givenName": "Jamie",
                          "familyName": "Doe"
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                          },
                          "givenName": {
                            "type": "string",
                            "example": "Jamie"
                          },
                          "familyName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "alumniOf": {
                            "type": "string",
                            "example": "Example University"
                          }
                        }
                      },
                      "proof": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Ed25519Signature2018"
                          },
                          "created": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-05-02T12:06:29Z"
                          },
                          "jws": {
                            "type": "string",
                            "description": "Compact form of JWS",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                          },
                          "proofPurpose": {
                            "type": "string",
                            "example": "assertionMethod"
                          },
                          "verificationMethod": {
                            "type": "string",
                            "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                          }
                        },
                        "title": "ED25519Signature2018"
                      },
                      "name": {
                        "type": "string",
                        "example": "Course credential",
                        "description": "Name of the credential (requires v2 data model)"
                      },
                      "description": {
                        "type": "string",
                        "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                        "description": "Description of the credential (requires v2 data model)"
                      }
                    },
                    "required": [
                      "@context",
                      "type",
                      "issuanceDate",
                      "credentialSubject",
                      "proof"
                    ],
                    "title": "VerifiableCredential"
                  }
                }
              },
              "examples": {
                "Verify a Credential": {
                  "value": {
                    "credential": {
                      "@context": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://www.w3.org/2018/credentials/examples/v1"
                      ],
                      "type": [
                        "VerifiableCredential",
                        "AlumniCredential"
                      ],
                      "issuer": {
                        "id": "did:issuer:abcdb1f712ebc6f1c276e12ec21",
                        "name": "Example University"
                      },
                      "issuanceDate": "2020-05-02T12:06:29.156Z",
                      "credentialStatus": {
                        "id": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1",
                        "type": "RevocationList2020Status",
                        "revocationListIndex": 1,
                        "revocationListCredential": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                      },
                      "credentialSubject": {
                        "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                        "givenName": "Jamie",
                        "familyName": "Doe"
                      },
                      "proof": {
                        "type": "Ed25519Signature2018",
                        "created": "2020-05-02T12:06:29Z",
                        "jws": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                        "proofPurpose": "assertionMethod",
                        "verificationMethod": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                      },
                      "name": "Course credential",
                      "description": "This credential shows that the person has attended the mention course and attained the relevant awards."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential has been processed",
            "content": {
              "application/json": {
                "schema": {
                  "title": "VerifyCredentialResponse",
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string",
                      "example": "Credential has been revoked",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "verified"
                  ]
                },
                "examples": {
                  "Credential Pass": {
                    "value": {
                      "verified": true
                    }
                  },
                  "Credential Revoked": {
                    "value": {
                      "verified": false,
                      "reason": "Credential has been revoked"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/core/v1/credentials/{id}/revocation-status": {
      "post": {
        "tags": [
          "Revocation"
        ],
        "summary": "Set credential revocation status",
        "description": "A credential can be revoked by setting the revocation status.\n",
        "requestBody": {
          "description": "Setting the revocation status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isRevoked": {
                    "type": "boolean",
                    "description": "true if the credential is revoked, false otherwise",
                    "example": false
                  }
                },
                "required": [
                  "isRevoked"
                ],
                "description": "",
                "title": "SetRevocationStatus"
              },
              "examples": {
                "Example": {
                  "value": {
                    "isRevoked": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The revocation status has been set"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Credential not revocable": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "path",
                          "msg": "credential not revocable",
                          "param": "id",
                          "value": "a80a5e7e-1972-4be6-8a4e-2adf09badf24"
                        }
                      ]
                    }
                  },
                  "Credential does not exist": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "path",
                          "msg": "not found",
                          "param": "id",
                          "value": "a80a5e7e-1972-4be6-8a4e-2adf09badf24"
                        }
                      ]
                    }
                  },
                  "Revocation list is not found": {
                    "value": {
                      "code": "string",
                      "message": "string",
                      "details": [
                        {}
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "setRevocationStatus"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "a80a5e7e-1972-4be6-8a4e-2adf09badf24"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Credential ID"
        }
      ],
      "get": {
        "tags": [
          "Revocation"
        ],
        "summary": "Retrieve credential revocation status",
        "responses": {
          "200": {
            "description": "Credential status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isRevoked": {
                      "type": "boolean",
                      "description": "true if the credential is revoked, false otherwise",
                      "example": false
                    }
                  },
                  "required": [
                    "isRevoked"
                  ],
                  "description": "",
                  "title": "RevocationStatusResponse"
                },
                "examples": {
                  "Revocation Status": {
                    "value": {
                      "isRevoked": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Credential not revocable": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "path",
                          "msg": "credential not revocable",
                          "param": "id",
                          "value": "a80a5e7e-1972-4be6-8a4e-2adf09badf24"
                        }
                      ]
                    }
                  },
                  "Credential does not exist": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "path",
                          "msg": "not found",
                          "param": "id",
                          "value": "a80a5e7e-1972-4be6-8a4e-2adf09badf24"
                        }
                      ]
                    }
                  },
                  "Revocation list is not found": {
                    "value": {
                      "code": "string",
                      "message": "string",
                      "details": [
                        {}
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getRevocationStatus",
        "description": "Retrieve the revocation status of a certain credential.\n\n\n#### Returns\nThe revocation status of the credential"
      }
    },
    "/core/v1/revocation-lists/{id}": {
      "get": {
        "tags": [
          "Revocation"
        ],
        "summary": "Retrieve revocation list",
        "responses": {
          "200": {
            "description": "The revocation list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "array",
                      "example": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://www.w3.org/2018/credentials/examples/v1"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                      }
                    },
                    "type": {
                      "type": "array",
                      "example": [
                        "VerifiableCredential",
                        "AlumniCredential"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"AlumniCredential\", \"VerifiableCredential\""
                      }
                    },
                    "issuer": {
                      "description": "Includes issuer id (did) and its domain (inside name parameter)",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            },
                            "name": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "issuanceDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-05-02T12:06:29.156Z"
                    },
                    "credentialStatus": {
                      "type": "object",
                      "description": "Credential status location information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique ID for the credential status",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates that the status contains revocation information",
                          "example": "RevocationList2020Status"
                        },
                        "revocationListIndex": {
                          "type": "integer",
                          "example": 1,
                          "description": "The location within the revocation list for the credential"
                        },
                        "revocationListCredential": {
                          "type": "string",
                          "description": "The location of the revocation list",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                        }
                      },
                      "title": "CredentialStatus"
                    },
                    "credentialSubject": {
                      "type": "object",
                      "example": {
                        "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                        "givenName": "Jamie",
                        "familyName": "Doe"
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                        },
                        "givenName": {
                          "type": "string",
                          "example": "Jamie"
                        },
                        "familyName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "alumniOf": {
                          "type": "string",
                          "example": "Example University"
                        }
                      }
                    },
                    "proof": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2018"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29Z"
                        },
                        "jws": {
                          "type": "string",
                          "description": "Compact form of JWS",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "assertionMethod"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        }
                      },
                      "title": "ED25519Signature2018"
                    },
                    "name": {
                      "type": "string",
                      "example": "Course credential",
                      "description": "Name of the credential (requires v2 data model)"
                    },
                    "description": {
                      "type": "string",
                      "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                      "description": "Description of the credential (requires v2 data model)"
                    }
                  },
                  "required": [
                    "@context",
                    "type",
                    "issuanceDate",
                    "credentialSubject",
                    "proof"
                  ],
                  "title": "VerifiableCredential"
                },
                "examples": {
                  "Revocation List": {
                    "value": {
                      "id": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3",
                      "@context": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://w3id.org/vc-revocation-list-2020/v1"
                      ],
                      "type": [
                        "VerifiableCredential",
                        "RevocationList2020Credential"
                      ],
                      "issuer": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5",
                      "issuanceDate": "2020-05-02T12:06:29.156Z",
                      "credentialSubject": {
                        "type": "RevocationList2020",
                        "encodedList": "H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA"
                      },
                      "proof": {
                        "type": "Ed25519Signature2018",
                        "created": "2020-05-02T12:06:29Z",
                        "jws": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                        "proofPurpose": "assertionMethod",
                        "verificationMethod": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Revocation list is not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Resource Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveRevocationList",
        "security": [],
        "description": "Retrieve the revocation list that contains the revocation status of a number of credentials.\n\n\n#### Returns\nThe revocation list"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "cc641396-3750-43c8-b8b8-f30d74eb3fb3"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Revocation list ID"
        }
      ]
    },
    "/core/v1/credentials/{id}/revocation-status/notification": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "873277c0-a162-11ea-8a1d-a111119347e6"
          },
          "description": "Credential ID"
        }
      ],
      "post": {
        "summary": "Create a revocation message payload",
        "operationId": "createRevNotification",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RevocationStatusNotification",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "to": {
                      "type": "array",
                      "items": {
                        "required": [
                          "string"
                        ],
                        "properties": {}
                      }
                    },
                    "from": {
                      "type": "string",
                      "minLength": 1
                    },
                    "created_time": {
                      "type": "number"
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "revocationListCredential": {
                          "type": "string",
                          "minLength": 1
                        },
                        "revocationListIndex": {
                          "type": "string",
                          "minLength": 1
                        },
                        "isRevoked": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "revocationListCredential",
                        "revocationListIndex",
                        "isRevoked"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "to",
                    "from",
                    "created_time",
                    "body"
                  ]
                }
              }
            }
          }
        },
        "description": "Create a payload that can form a message in the JWM format that can be used in sending notifications to subjects based on the revocation status of their issued credentials.\n\n- Use a DID setup on the tenant as the `from` value, this should be a DID with a key type suitable for messaging (not a BLS key type)\n- Include a SubjectDID as the `to` value - this value is only used in the message construction, it should be the same value as the intended recipient.\n\n\nTo send a notification to the Subject DID holder, use the payload with the /messaging/encrypt and /messaging/send endpoints.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a payload",
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "minLength": 1,
                    "description": "DID on the tenant used in a message"
                  },
                  "to": {
                    "type": "array",
                    "description": "List of SubjectDIDs",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "from",
                  "to"
                ],
                "title": "CreatePayloadRequest"
              }
            }
          },
          "description": "Create a JWM message payload"
        },
        "tags": [
          "Revocation"
        ]
      }
    },
    "/core/v1/messaging/sign": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Sign a message",
        "requestBody": {
          "description": "Sign message request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "didUrl",
                  "payload"
                ],
                "properties": {
                  "didUrl": {
                    "type": "string",
                    "description": "The did keyId that will be used to sign the message with.",
                    "example": "did:example:abcdefghijkl#key1"
                  },
                  "payload": {
                    "type": "object",
                    "description": "A JSON Object plaintext message",
                    "example": {
                      "msg": "this is a message"
                    },
                    "title": "JSONObjectMessage"
                  }
                },
                "title": "SignMessageRequest"
              },
              "examples": {
                "Sign a Message": {
                  "value": {
                    "didUrl": "did:example:abcdefghijkl#key1",
                    "payload": {
                      "msg": "this is a message"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message signed",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SignMessageResponse",
                  "type": "string",
                  "description": "Signed message in a response",
                  "example": "eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg",
                  "required": [
                    "ciphertext"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error signing message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Creates a signed message in the form of a JWS (JSON Web Signature) using the a specific Key from the DID (Decentralized Identifier) supplied in the request.\n\n`didUrl` must be a reference to a key that supports signing. \nUse the `authentication` key value from the DID Document.\n\n```\n{\n  \"didDocument\": {\n    \"@context\": \"https://w3.org/ns/did/v1\",\n    \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n    \"authentication\": [\n      \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n    ]\n  }}\n```\n\n#### Returns\n\nA JWS in compact serialization form signed by the did supplied in the request",
        "operationId": "signMessage"
      },
      "parameters": []
    },
    "/core/v1/messaging/verify": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Verify a message",
        "requestBody": {
          "description": "JWS to verify",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jws": {
                    "type": "string",
                    "description": "Compact form of JWS",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  }
                },
                "title": "VerifyRequest"
              },
              "examples": {
                "Request": {
                  "value": {
                    "jws": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification has been performed, see response body for result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "didUrl": {
                      "type": "string",
                      "description": "The didUrl included on the jws object",
                      "example": "did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri#z6MkiKdPk7cYsCySi8BgPnjsZpUkb3aoHsBN4NQKQCSDKEdU"
                    },
                    "did": {
                      "type": "string",
                      "description": "The did parsed from the didUrl",
                      "example": "did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri"
                    },
                    "verified": {
                      "type": "boolean",
                      "description": "Result of jws verification",
                      "example": true
                    },
                    "payload": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object"
                        }
                      ],
                      "description": "The payload of the verified message"
                    }
                  },
                  "title": "VerifyMessageResponse"
                },
                "examples": {
                  "Verified": {
                    "value": {
                      "payload": "payload",
                      "didUrl": "did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE",
                      "did": "did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE",
                      "verified": true
                    }
                  },
                  "Verified false": {
                    "value": {
                      "payload": "payload",
                      "didUrl": "did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE",
                      "did": "did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE",
                      "verified": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JWS",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Verification failed": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Verification failed"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n#### Returns\n\nIndicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\nThe DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation.",
        "operationId": "verifyJws"
      },
      "parameters": []
    },
    "/core/v1/messaging/encrypt": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Encrypt a message",
        "operationId": "encryptMessage",
        "requestBody": {
          "description": "Encryption params",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "EncryptMessageRequest",
                "type": "object",
                "properties": {
                  "senderDidUrl": {
                    "type": "string"
                  },
                  "recipientDidUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "payload": {
                    "type": "object"
                  }
                },
                "required": [
                  "senderDidUrl",
                  "recipientDidUrls",
                  "payload"
                ]
              },
              "examples": {
                "Encrypt message": {
                  "value": {
                    "senderDidUrl": "did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy",
                    "recipientDidUrls": [
                      "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d",
                      "did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN"
                    ],
                    "payload": {
                      "id": "731961f2-bdc3-4f1e-8d59-cc308fd60ec8",
                      "type": "https://mattr.global/schemas/verifiable-credential/offer/OidcCredentialProvider",
                      "from": "did:key:z6MkndAHigYrXNpape7jgaC7jHiWwxzB3chuKUGXJg2b5RSj",
                      "created_time": "1616466734",
                      "body": {
                        "uri": "openid://discovery?issuer=https://tenant.vii.mattr.global/ext/oidc/v1/issuers/0dceeddd-f717-4bf2-b520-b3ddcd104a60"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message encrypted",
            "content": {
              "application/json": {
                "schema": {
                  "title": "EncryptedMessage",
                  "type": "object",
                  "properties": {
                    "jwe": {
                      "type": "object",
                      "properties": {
                        "protected": {
                          "type": "string",
                          "minLength": 1
                        },
                        "recipients": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "required": [
                              "encryption_key"
                            ],
                            "properties": {
                              "header": {
                                "type": "object",
                                "properties": {
                                  "alg": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "kid": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "epk": {
                                    "type": "object",
                                    "properties": {
                                      "kty": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "crv": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "x": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "required": [
                                      "kty",
                                      "crv",
                                      "x"
                                    ]
                                  },
                                  "skid": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                },
                                "required": [
                                  "alg",
                                  "kid",
                                  "epk",
                                  "skid"
                                ]
                              },
                              "encryption_key": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "ciphertext": {
                          "type": "string",
                          "minLength": 1
                        },
                        "iv": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tag": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "protected",
                        "recipients",
                        "ciphertext",
                        "iv",
                        "tag"
                      ]
                    }
                  },
                  "required": [
                    "jwe"
                  ]
                },
                "examples": {
                  "Encrypted message": {
                    "value": {
                      "jwe": {
                        "protected": "eyJhbGciOiJYQzIwUCJ9",
                        "recipients": [
                          {
                            "header": {
                              "alg": "ECDH-1PU+A256KW",
                              "kid": "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d#z6LSsvqSJkBvVEsDC8cxMHuQ3sKoLRMXB1MdtoLrMUq6A8Rg",
                              "epk": {
                                "kty": "OKP",
                                "crv": "x25519",
                                "x": "JOLnYaD7L-Rszz7fczPhn6MkNre25PUsztzB1RHoz14"
                              },
                              "skid": "did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v#z6LScyz3YLToyoKwZE6Tfq65hgZUkZdHrC4ZqohcUH9X6Twx"
                            },
                            "encryption_key": "ag5iKzjJOth9Wa68dCVKJW_vnO_Ga0zSJgQp5rIUg69HCzIjuNYhDg"
                          },
                          {
                            "header": {
                              "alg": "ECDH-1PU+A256KW",
                              "kid": "did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN#z6LSgDiT1CkducmcSPaq9E1Uj1qdSXBjsUNqqLQLrUu8EHWd",
                              "epk": {
                                "kty": "OKP",
                                "crv": "x25519",
                                "x": "gDYW7rhG3cBqFp9trFETtlut6QJxYVVSoVWL7eN1bzE"
                              },
                              "skid": "did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v#z6LScyz3YLToyoKwZE6Tfq65hgZUkZdHrC4ZqohcUH9X6Twx"
                            },
                            "encryption_key": "F5R5ZW7Yk7_iWT5kUWqv3w_tLI7V86tLRthjy_SSbGQ2pFyXKni_gA"
                          }
                        ],
                        "ciphertext": "xpW-D6sDPpWc_jk87nEyxPX7JQV8_OZpaQft7ySQ5XmNhoj-lQyDkXDncOCyhB7yMSdZrRBNQjKxlEbpY_WLk1hBoWfsTeszVSAuFbX_VKUSJ7GR6rcnWGVNgDfKS8GsyC_owtswXatkF_65_mzFOygctkUmd2eI5bcpQpWjhw2vqnvnWkb7l2J27aWFF_c9cu52dB559j8lwLYyYC9oSMgV5piB6ppfrWBGo_DigjxvJcAYcjFYqFcT6A1nphPhwVTQ2HNfJodbQoseHub8UQdG4qAOcggq5DI84tbqor1SU9rdPH03jPkLgoO_aeXyJg5meITXoFSiu_tRfvf8QQ6vKq6pkTTXs8zKXcBCGhGIyKBNBG4R4RIY1UffTMnJQQQGBble3P06pGOnsnSop0BtygelB9M0ZEwnAUSAQqN1RR4AQwWcn9nH6hHEu1pMhSvhCuFNAPWS-hg24JGGw8Xe3EEZlLH0PM8qpUAfksPq",
                        "iv": "FJq5zKvuPiUQIdRcMtiChHCJByuY8XK9",
                        "tag": "u8kT0VAAtTswjGXxNpuX0g=="
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Sender DID not found": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Resource Not Found",
                          "param": "senderDidUrl",
                          "value": "did:key:z6MkopLiuMudqeRm1KvQ24jyUfn6pciePNomKqpsiMgeg4nT#z6LSmWEcPwNbxCgbuSMGTz1Gddnf9MsVSMJCfgPtksgThLvi"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Encrypts a payload using a JWM format.\n\nThe `senderDidUrl` must be a reference to a key that supports key agreement. \nUse the `id` value from the `keyAgreement` list in the DID Document.\n\n```\n\"keyAgreement\": [\n        {\n          \"id\": \"did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy\",\n          \"type\": \"X25519KeyAgreementKey2019\",\n          \"controller\": \"did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua\",\n          \"publicKeyBase58\": \"9eZxm1JBe5wjK2oWzPthGQxD4tcinm5dEoJiEyHD71rD\"\n          }\n      ]\n```\n\n### Returns\n"
      },
      "parameters": []
    },
    "/core/v1/messaging/decrypt": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Decrypt a message",
        "operationId": "decryptMessage",
        "requestBody": {
          "description": "Decryption params",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "DecryptMessageRequest",
                "type": "object",
                "properties": {
                  "jwe": {
                    "type": "string"
                  }
                },
                "required": [
                  "jwe"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message Decrypted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payload": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object"
                        }
                      ]
                    },
                    "senderDidUrl": {
                      "type": "string"
                    },
                    "senderPublicJwk": {
                      "type": "object"
                    },
                    "recipientDidUrl": {
                      "type": "string"
                    }
                  },
                  "title": "DecryptMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Recipient DID not found": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Decrypt a message where the tenant manages the Keys for the `recipientDidUrl`"
      },
      "parameters": []
    },
    "/core/v1/messaging/send": {
      "post": {
        "summary": "Send a message",
        "operationId": "sendMessage",
        "description": "Send an encrypted JWM format DIDComm message to a DID service endpoint.\n\nIn order to successfully route messages to their intended recipients the endpoint will resolve a public DID Document and look-up the service endpoint.\n\nThis endpoint only accepts Encrypted JWM payloads to ensure that messages sent for recipients are encrypted-at-rest whilst in messaging inboxes. \nThe JWM should be encrypted for the recipient based on a key available in the DID Document.",
        "tags": [
          "Messaging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "string",
                    "description": "recipient DID"
                  },
                  "message": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object"
                      }
                    ],
                    "description": "JWE message"
                  }
                },
                "title": "SendMessageRequest"
              },
              "examples": {
                "Send message": {
                  "value": {
                    "to": "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d",
                    "message": {
                      "protected": "eyJhbGciOiJYQzIwUCJ9",
                      "recipients": [
                        {
                          "header": {
                            "alg": "ECDH-1PU+A256KW",
                            "kid": "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d#z6LSsvqSJkBvVEsDC8cxMHuQ3sKoLRMXB1MdtoLrMUq6A8Rg",
                            "epk": {
                              "kty": "OKP",
                              "crv": "x25519",
                              "x": "kYsO02jWHATTJel6OpePqlkdDmKlE5VOr18UblgL8W0"
                            },
                            "skid": "did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy"
                          },
                          "encryption_key": "n1VUf5SQdSFNtb8DHzYfJJ_lFhJcGDAPJWG8Y1W3d2qYyPzyxMhyaA"
                        },
                        {
                          "header": {
                            "alg": "ECDH-1PU+A256KW",
                            "kid": "did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN#z6LSgDiT1CkducmcSPaq9E1Uj1qdSXBjsUNqqLQLrUu8EHWd",
                            "epk": {
                              "kty": "OKP",
                              "crv": "x25519",
                              "x": "P3jcIMPGK8thxyHxUsWB5fEsLnltJqRDWMNywtexk24"
                            },
                            "skid": "did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy"
                          },
                          "encryption_key": "5ZOTqwj8NredkXEOp4ZDLL1ohRQqNTS508BTkLlUVCkDoYvizCIdrg"
                        }
                      ],
                      "ciphertext": "Dl4zBqMeEDwcnyyc17nYvSQ048fcsha_Lm0dfer1nqfo5y8oHvD2VGNTp_lawNJMWCzQF3NDZxxKFz__wTUeHCqisCE_DWbjo_W-R3avzW9S-JFajv9NRtjlfd5yp-1TtD2N5d-8oTtMGdAxq3dftN2Od1xRe4stubJBebl3nf8-lG99DIVGdL8Y-D98kFDxnMxgCKn4RXyHnMowFWlhQCooLeYqo8aWjqVFkzuJzn-p47W7rV9BCuoVThhVuNkjQm_dhBrqu0QMpjJucz7OvOHp0mojdYNKwvWT6dfOVNXetMlKjWCGtCTNFaDTGLc4agdcTjAlaF1iedcVXDOLqVvEugXWGlusE3a68y6gmPnqHjXR6CsEfPwkb5hKKtsyrh1eHu_9UUang5o6N76mummVw4UZkDF6tP1PVGPvyctz82tthnOcjO5mZQG41xfMEMNxWtF8P8wCh4LotpdexXtYigzBgkI1Qoa_FK1czYWAUovysAJCTOZtmg==",
                      "iv": "jSd3E-ElCHE-QhSDxrQ-Jv4eQhkxOj0s",
                      "tag": "dbDolGVDdvYsYdn-vVrICw=="
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "responses": {
          "200": {
            "description": "Message sent"
          },
          "400": {
            "description": "Error sending message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ext/oidc/v1/issuers": {
      "post": {
        "operationId": "createOidcIssuer",
        "tags": [
          "OIDC Issuers"
        ],
        "summary": "Create an OIDC Issuer",
        "description": "Create a new OIDC Credential Issuer for this tenant.\n\nThe Credential information defines a descriptive name for the Credential to be issued as well as the `issuerDid` and `type` that the issued Credential will contain. The `context` is used to define the JSON-LD schema for the JSON-LD terms.\n\nThe Federated Provider details are used to obtain the values for the new credential. The OIDC provider will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `url`, `scope`, `clientId` and `clientSecret` attributes. If no `scope` is provided, the default value `openid profile email` will be used.\n\n> The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\nClaim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n**ZKP-enabled BBS+ credential:**\nIf you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a DID with an `assertionMethod` using a key type of `bls12381g2`. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n> ZKP-enabled BBS+ credentials are an experimental feature, as the standard evolves credentials issued using the current BBS+ signature may cease to be able to be verified.\n",
        "requestBody": {
          "description": "The issuer payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credential": {
                    "type": "object",
                    "description": "Credential information",
                    "required": [
                      "issuerDid",
                      "name",
                      "context",
                      "type"
                    ],
                    "properties": {
                      "issuerDid": {
                        "type": "string",
                        "description": "The Issuer DID",
                        "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                      },
                      "name": {
                        "type": "string",
                        "description": "Meaningful name for the Credential",
                        "example": "University Attendance Credential"
                      },
                      "description": {
                        "type": "string",
                        "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                        "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                      },
                      "context": {
                        "type": "array",
                        "description": "JSON-LD schema where the term is referenced",
                        "example": [
                          "https://schema.org"
                        ],
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "type": {
                        "description": "The Credential Type",
                        "oneOf": [
                          {
                            "type": "string",
                            "example": "AlumniCredential"
                          },
                          {
                            "type": "array",
                            "example": [
                              "AlumniCredential"
                            ],
                            "items": {
                              "type": "string",
                              "description": "The Credential Type"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "federatedProvider": {
                    "type": "object",
                    "description": "Federated OIDC Provider details",
                    "required": [
                      "url",
                      "clientId",
                      "clientSecret"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Base url for provider well-known endpoint",
                        "example": "https://example-university.au.auth0.com"
                      },
                      "scope": {
                        "type": "array",
                        "description": "OIDC scope associated with claims in the provider",
                        "example": [
                          "openid",
                          "profile",
                          "email"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Client ID configured in the provider",
                        "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Client secret configured in the provider",
                        "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                      }
                    }
                  },
                  "claimMappings": {
                    "type": "array",
                    "description": "Map OpenID Connect terms to JSON-LD terms",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jsonLdTerm": {
                          "type": "string",
                          "description": "The credential claim name in JSON-LD terms",
                          "example": "alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      },
                      "required": [
                        "jsonLdTerm",
                        "oidcClaim"
                      ]
                    }
                  }
                },
                "required": [
                  "credential",
                  "federatedProvider",
                  "claimMappings"
                ],
                "title": "CreateOidcIssuerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issuer created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Issuer id",
                          "example": "983c0a86-204f-4431-9371-f5a22e506599"
                        },
                        "federatedProvider": {
                          "type": "object",
                          "properties": {
                            "callbackUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL where the authorization code gets sent",
                              "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "credential": {
                          "type": "object",
                          "description": "Credential information",
                          "required": [
                            "issuerDid",
                            "name",
                            "context",
                            "type"
                          ],
                          "properties": {
                            "issuerDid": {
                              "type": "string",
                              "description": "The Issuer DID",
                              "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                            },
                            "name": {
                              "type": "string",
                              "description": "Meaningful name for the Credential",
                              "example": "University Attendance Credential"
                            },
                            "description": {
                              "type": "string",
                              "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                              "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                            },
                            "context": {
                              "type": "array",
                              "description": "JSON-LD schema where the term is referenced",
                              "example": [
                                "https://schema.org"
                              ],
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "type": {
                              "description": "The Credential Type",
                              "oneOf": [
                                {
                                  "type": "string",
                                  "example": "AlumniCredential"
                                },
                                {
                                  "type": "array",
                                  "example": [
                                    "AlumniCredential"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "description": "The Credential Type"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "federatedProvider": {
                          "type": "object",
                          "description": "Federated OIDC Provider details",
                          "required": [
                            "url",
                            "clientId",
                            "clientSecret"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "Base url for provider well-known endpoint",
                              "example": "https://example-university.au.auth0.com"
                            },
                            "scope": {
                              "type": "array",
                              "description": "OIDC scope associated with claims in the provider",
                              "example": [
                                "openid",
                                "profile",
                                "email"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientId": {
                              "type": "string",
                              "description": "Client ID configured in the provider",
                              "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                            },
                            "clientSecret": {
                              "type": "string",
                              "description": "Client secret configured in the provider",
                              "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                            }
                          }
                        },
                        "claimMappings": {
                          "type": "array",
                          "description": "Map OpenID Connect terms to JSON-LD terms",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jsonLdTerm": {
                                "type": "string",
                                "description": "The credential claim name in JSON-LD terms",
                                "example": "alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            },
                            "required": [
                              "jsonLdTerm",
                              "oidcClaim"
                            ]
                          }
                        }
                      },
                      "required": [
                        "credential",
                        "federatedProvider",
                        "claimMappings"
                      ],
                      "title": "CreateOidcIssuerRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Invalid value",
                          "param": "url"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOidcIssuers",
        "tags": [
          "OIDC Issuers"
        ],
        "summary": "Retrieve list of OIDC Issuers",
        "description": "Returns a list of all OIDC Issuers in the Tenant.\n",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of returned issuer entries, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the range of issuer entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of issuers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Issuer id",
                              "example": "983c0a86-204f-4431-9371-f5a22e506599"
                            },
                            "federatedProvider": {
                              "type": "object",
                              "properties": {
                                "callbackUrl": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL where the authorization code gets sent",
                                  "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "credential": {
                              "type": "object",
                              "description": "Credential information",
                              "required": [
                                "issuerDid",
                                "name",
                                "context",
                                "type"
                              ],
                              "properties": {
                                "issuerDid": {
                                  "type": "string",
                                  "description": "The Issuer DID",
                                  "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Meaningful name for the Credential",
                                  "example": "University Attendance Credential"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                                  "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                                },
                                "context": {
                                  "type": "array",
                                  "description": "JSON-LD schema where the term is referenced",
                                  "example": [
                                    "https://schema.org"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "type": {
                                  "description": "The Credential Type",
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "example": "AlumniCredential"
                                    },
                                    {
                                      "type": "array",
                                      "example": [
                                        "AlumniCredential"
                                      ],
                                      "items": {
                                        "type": "string",
                                        "description": "The Credential Type"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "federatedProvider": {
                              "type": "object",
                              "description": "Federated OIDC Provider details",
                              "required": [
                                "url",
                                "clientId",
                                "clientSecret"
                              ],
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Base url for provider well-known endpoint",
                                  "example": "https://example-university.au.auth0.com"
                                },
                                "scope": {
                                  "type": "array",
                                  "description": "OIDC scope associated with claims in the provider",
                                  "example": [
                                    "openid",
                                    "profile",
                                    "email"
                                  ],
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID configured in the provider",
                                  "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                                },
                                "clientSecret": {
                                  "type": "string",
                                  "description": "Client secret configured in the provider",
                                  "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                                }
                              }
                            },
                            "claimMappings": {
                              "type": "array",
                              "description": "Map OpenID Connect terms to JSON-LD terms",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "jsonLdTerm": {
                                    "type": "string",
                                    "description": "The credential claim name in JSON-LD terms",
                                    "example": "alumniOf"
                                  },
                                  "oidcClaim": {
                                    "type": "string",
                                    "description": "The credential claim name in OIDC terms",
                                    "example": "alumni_of"
                                  }
                                },
                                "required": [
                                  "jsonLdTerm",
                                  "oidcClaim"
                                ]
                              }
                            }
                          },
                          "required": [
                            "credential",
                            "federatedProvider",
                            "claimMappings"
                          ],
                          "title": "CreateOidcIssuerRequest"
                        }
                      ],
                      "title": "CreateOidcIssuerResponse"
                    }
                  },
                  "title": "GetOidcIssuersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "query",
                          "msg": "Failed to decode base64url data",
                          "param": "cursor",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ext/oidc/v1/issuers/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "getOidcIssuer",
        "tags": [
          "OIDC Issuers"
        ],
        "summary": "Retrieve an OIDC Issuer",
        "description": "Retrieve an OIDC Issuer by providing an Issuer ID.",
        "responses": {
          "200": {
            "description": "Retrieved Issuer",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Issuer id",
                          "example": "983c0a86-204f-4431-9371-f5a22e506599"
                        },
                        "federatedProvider": {
                          "type": "object",
                          "properties": {
                            "callbackUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL where the authorization code gets sent",
                              "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "credential": {
                          "type": "object",
                          "description": "Credential information",
                          "required": [
                            "issuerDid",
                            "name",
                            "context",
                            "type"
                          ],
                          "properties": {
                            "issuerDid": {
                              "type": "string",
                              "description": "The Issuer DID",
                              "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                            },
                            "name": {
                              "type": "string",
                              "description": "Meaningful name for the Credential",
                              "example": "University Attendance Credential"
                            },
                            "description": {
                              "type": "string",
                              "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                              "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                            },
                            "context": {
                              "type": "array",
                              "description": "JSON-LD schema where the term is referenced",
                              "example": [
                                "https://schema.org"
                              ],
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "type": {
                              "description": "The Credential Type",
                              "oneOf": [
                                {
                                  "type": "string",
                                  "example": "AlumniCredential"
                                },
                                {
                                  "type": "array",
                                  "example": [
                                    "AlumniCredential"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "description": "The Credential Type"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "federatedProvider": {
                          "type": "object",
                          "description": "Federated OIDC Provider details",
                          "required": [
                            "url",
                            "clientId",
                            "clientSecret"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "Base url for provider well-known endpoint",
                              "example": "https://example-university.au.auth0.com"
                            },
                            "scope": {
                              "type": "array",
                              "description": "OIDC scope associated with claims in the provider",
                              "example": [
                                "openid",
                                "profile",
                                "email"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientId": {
                              "type": "string",
                              "description": "Client ID configured in the provider",
                              "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                            },
                            "clientSecret": {
                              "type": "string",
                              "description": "Client secret configured in the provider",
                              "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                            }
                          }
                        },
                        "claimMappings": {
                          "type": "array",
                          "description": "Map OpenID Connect terms to JSON-LD terms",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jsonLdTerm": {
                                "type": "string",
                                "description": "The credential claim name in JSON-LD terms",
                                "example": "alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            },
                            "required": [
                              "jsonLdTerm",
                              "oidcClaim"
                            ]
                          }
                        }
                      },
                      "required": [
                        "credential",
                        "federatedProvider",
                        "claimMappings"
                      ],
                      "title": "CreateOidcIssuerRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "issuerId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Issuer is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Issuer not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "issuerId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateOidcIssuer",
        "tags": [
          "OIDC Issuers"
        ],
        "summary": "Update an OIDC Issuer",
        "description": "Update an OIDC Credential Issuer.\n\nThe `issuerDid` is the Issuer DID that will be used in the issued Credential.\n\nThe `credentialName` describes the Credential and `credentialTypes` defines the Credential Types for the issued Credential.\n\nIn order for the tenant to issue a new credential, the OIDC bridge will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `federatedProviderUrl`, `federatedProviderScope`, `federatedProviderClientId` and `federatedProviderClientSecret` attributes. If no `federatedProviderScope` is provided, the default value `openid profile email` will be used.\n\n> The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported` which needs to contain `openid` and `profile`.\n\nClaim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n**ZKP-enabled BBS+ credential:**\nIf you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a DID with an `assertionMethod` using a key type of `bls12381g2`. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n> ZKP-enabled BBS+ credentials are an experimental feature, as the standard evolves credentials issued using the current BBS+ signature may cease to be able to be verified.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credential": {
                    "type": "object",
                    "description": "Credential information",
                    "required": [
                      "issuerDid",
                      "name",
                      "context",
                      "type"
                    ],
                    "properties": {
                      "issuerDid": {
                        "type": "string",
                        "description": "The Issuer DID",
                        "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                      },
                      "name": {
                        "type": "string",
                        "description": "Meaningful name for the Credential",
                        "example": "University Attendance Credential"
                      },
                      "description": {
                        "type": "string",
                        "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                        "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                      },
                      "context": {
                        "type": "array",
                        "description": "JSON-LD schema where the term is referenced",
                        "example": [
                          "https://schema.org"
                        ],
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "type": {
                        "description": "The Credential Type",
                        "oneOf": [
                          {
                            "type": "string",
                            "example": "AlumniCredential"
                          },
                          {
                            "type": "array",
                            "example": [
                              "AlumniCredential"
                            ],
                            "items": {
                              "type": "string",
                              "description": "The Credential Type"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "federatedProvider": {
                    "type": "object",
                    "description": "Federated OIDC Provider details",
                    "required": [
                      "url",
                      "clientId",
                      "clientSecret"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Base url for provider well-known endpoint",
                        "example": "https://example-university.au.auth0.com"
                      },
                      "scope": {
                        "type": "array",
                        "description": "OIDC scope associated with claims in the provider",
                        "example": [
                          "openid",
                          "profile",
                          "email"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Client ID configured in the provider",
                        "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Client secret configured in the provider",
                        "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                      }
                    }
                  },
                  "claimMappings": {
                    "type": "array",
                    "description": "Map OpenID Connect terms to JSON-LD terms",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jsonLdTerm": {
                          "type": "string",
                          "description": "The credential claim name in JSON-LD terms",
                          "example": "alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      },
                      "required": [
                        "jsonLdTerm",
                        "oidcClaim"
                      ]
                    }
                  }
                },
                "required": [
                  "credential",
                  "federatedProvider",
                  "claimMappings"
                ],
                "title": "CreateOidcIssuerRequest"
              }
            }
          },
          "description": "Update an Issuer"
        },
        "responses": {
          "200": {
            "description": "Successfully updated the Issuer",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Issuer id",
                          "example": "983c0a86-204f-4431-9371-f5a22e506599"
                        },
                        "federatedProvider": {
                          "type": "object",
                          "properties": {
                            "callbackUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL where the authorization code gets sent",
                              "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "credential": {
                          "type": "object",
                          "description": "Credential information",
                          "required": [
                            "issuerDid",
                            "name",
                            "context",
                            "type"
                          ],
                          "properties": {
                            "issuerDid": {
                              "type": "string",
                              "description": "The Issuer DID",
                              "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                            },
                            "name": {
                              "type": "string",
                              "description": "Meaningful name for the Credential",
                              "example": "University Attendance Credential"
                            },
                            "description": {
                              "type": "string",
                              "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                              "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                            },
                            "context": {
                              "type": "array",
                              "description": "JSON-LD schema where the term is referenced",
                              "example": [
                                "https://schema.org"
                              ],
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "type": {
                              "description": "The Credential Type",
                              "oneOf": [
                                {
                                  "type": "string",
                                  "example": "AlumniCredential"
                                },
                                {
                                  "type": "array",
                                  "example": [
                                    "AlumniCredential"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "description": "The Credential Type"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "federatedProvider": {
                          "type": "object",
                          "description": "Federated OIDC Provider details",
                          "required": [
                            "url",
                            "clientId",
                            "clientSecret"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "Base url for provider well-known endpoint",
                              "example": "https://example-university.au.auth0.com"
                            },
                            "scope": {
                              "type": "array",
                              "description": "OIDC scope associated with claims in the provider",
                              "example": [
                                "openid",
                                "profile",
                                "email"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientId": {
                              "type": "string",
                              "description": "Client ID configured in the provider",
                              "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                            },
                            "clientSecret": {
                              "type": "string",
                              "description": "Client secret configured in the provider",
                              "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                            }
                          }
                        },
                        "claimMappings": {
                          "type": "array",
                          "description": "Map OpenID Connect terms to JSON-LD terms",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jsonLdTerm": {
                                "type": "string",
                                "description": "The credential claim name in JSON-LD terms",
                                "example": "alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            },
                            "required": [
                              "jsonLdTerm",
                              "oidcClaim"
                            ]
                          }
                        }
                      },
                      "required": [
                        "credential",
                        "federatedProvider",
                        "claimMappings"
                      ],
                      "title": "CreateOidcIssuerRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Invalid value",
                          "param": "url"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Issuer is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Issuer not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "issuerId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOidcIssuer",
        "tags": [
          "OIDC Issuers"
        ],
        "summary": "Remove an OIDC Issuer",
        "description": "Removes an OIDC Issuer by providing an Issuer ID.\n",
        "responses": {
          "204": {
            "description": "Issuer deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "issuerId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Issuer is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Issuer not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "issuerId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/issuers/{id}/clients": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        }
      ],
      "post": {
        "operationId": "createOidcIssuerClient",
        "tags": [
          "OIDC Issuer Client"
        ],
        "summary": "Create a Client",
        "description": "Issuer clients are required to be created in the system for custom digital wallets and VC Issue flows that are enabled through the OIDC Credential Provider.\n\nThe Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n",
        "requestBody": {
          "description": "The client payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for Wallet"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcIssuerClientRequest"
              },
              "examples": {
                "Create a Client": {
                  "value": {
                    "name": "OIDC Client for Wallet",
                    "redirectUris": [
                      "https://example.com/callback"
                    ],
                    "responseTypes": [
                      "code"
                    ],
                    "grantTypes": [
                      "authorization_code"
                    ],
                    "tokenEndpointAuthMethod": "client_secret_post",
                    "idTokenSignedResponseAlg": "ES256",
                    "applicationType": "web"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for Wallet"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcIssuerClientRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "redirectUris is not array of strings",
                          "param": "redirectUris"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOidcIssuerClients",
        "tags": [
          "OIDC Issuer Client"
        ],
        "summary": "Retrieve list of Clients",
        "description": "Returns a list of all OIDC Issuer Clients in the Tenant.\n",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of returned client entries, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the range of client entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Client id",
                              "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
                            },
                            "secret": {
                              "type": "string",
                              "description": "Client secret",
                              "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Meaningful name for this Client",
                              "example": "OIDC Client for Wallet"
                            },
                            "redirectUris": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              },
                              "description": "Redirection URI to which the response will be sent",
                              "example": [
                                "https://example.com/callback"
                              ]
                            },
                            "responseTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Determines the authorization processing flow",
                              "example": [
                                "code"
                              ]
                            },
                            "grantTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "OAuth Grant Type",
                              "example": [
                                "authorization_code"
                              ]
                            },
                            "tokenEndpointAuthMethod": {
                              "type": "string",
                              "description": "OAuth Token Endpoint Authentication Method",
                              "example": "client_secret_post"
                            },
                            "idTokenSignedResponseAlg": {
                              "type": "string",
                              "description": "Algorithm must match configured jwks, defaults to RS256",
                              "example": "ES256"
                            },
                            "applicationType": {
                              "type": "string",
                              "example": "web"
                            }
                          },
                          "required": [
                            "name",
                            "redirectUris"
                          ],
                          "title": "CreateOidcIssuerClientRequest"
                        }
                      ],
                      "title": "CreateOidcIssuerClientResponse"
                    }
                  },
                  "title": "GetOidcIssuerClientsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "query",
                          "msg": "Failed to decode base64url data",
                          "param": "cursor",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/issuers/{id}/clients/{clientId}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
          },
          "name": "clientId",
          "in": "path",
          "required": true,
          "description": "Client ID"
        }
      ],
      "get": {
        "operationId": "getOidcIssuerClient",
        "tags": [
          "OIDC Issuer Client"
        ],
        "summary": "Retrieve a Client",
        "description": "Retrieve an OIDC Issuer Client by providing a Client ID.",
        "responses": {
          "200": {
            "description": "Retrieved Client",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for Wallet"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcIssuerClientRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "clientId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateOidcIssuerClient",
        "tags": [
          "OIDC Issuer Client"
        ],
        "summary": "Update a Client",
        "description": "Update an OIDC Issuer Client.\n\nThe Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for Wallet"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcIssuerClientRequest"
              },
              "examples": {
                "Update a Client": {
                  "value": {
                    "name": "OIDC Client for Wallet",
                    "redirectUris": [
                      "https://example.com/callback"
                    ],
                    "responseTypes": [
                      "code"
                    ],
                    "grantTypes": [
                      "authorization_code"
                    ],
                    "tokenEndpointAuthMethod": "client_secret_post",
                    "idTokenSignedResponseAlg": "ES256",
                    "applicationType": "web"
                  }
                }
              }
            }
          },
          "description": "Update a client"
        },
        "responses": {
          "200": {
            "description": "Successfully updated a Client",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for Wallet"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcIssuerClientRequest"
                    }
                  ],
                  "title": "CreateOidcIssuerClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "redirectUris is not array of strings",
                          "param": "redirectUris"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOidcIssuerClient",
        "tags": [
          "OIDC Issuer Client"
        ],
        "summary": "Remove a Client",
        "description": "Removes an OIDC Issuer Client by providing a Client ID.\n",
        "responses": {
          "204": {
            "description": "Client deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "clientId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/issuers/{id}/.well-known/openid-configuration": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "983c0a86-204f-4431-9371-f5a22e506599"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Issuer ID"
        }
      ],
      "get": {
        "operationId": "issuerWellKnownOidcConfig",
        "security": [],
        "tags": [
          "OIDC Issuer Auth"
        ],
        "summary": "Well Known OpenId Configuration",
        "description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n",
        "responses": {
          "200": {
            "description": "Returns OpenID configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorization_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize"
                    },
                    "claims_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "claims_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "sub",
                        "sid",
                        "auth_time",
                        "iss"
                      ]
                    },
                    "code_challenge_methods_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "S256"
                      ]
                    },
                    "end_session_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end"
                    },
                    "grant_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "implicit",
                        "authorization_code",
                        "refresh_token"
                      ]
                    },
                    "id_token_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "ES256"
                      ]
                    },
                    "issuer": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global"
                    },
                    "jwks_uri": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks"
                    },
                    "registration_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients"
                    },
                    "request_object_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "RS256",
                        "PS256",
                        "ES256",
                        "EdDSA"
                      ]
                    },
                    "request_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "request_uri_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "require_request_uri_registration": {
                      "type": "boolean",
                      "example": true
                    },
                    "response_modes_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "form_post",
                        "fragment",
                        "query"
                      ]
                    },
                    "response_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "code id_token",
                        "code",
                        "id_token",
                        "none"
                      ]
                    },
                    "scopes_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "openid",
                        "offline_access"
                      ]
                    },
                    "subject_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "public"
                      ]
                    },
                    "token_endpoint_auth_methods_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "none",
                        "client_secret_basic",
                        "client_secret_jwt",
                        "client_secret_post",
                        "private_key_jwt"
                      ]
                    },
                    "token_endpoint_auth_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "RS256",
                        "PS256",
                        "ES256",
                        "EdDSA"
                      ]
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token"
                    },
                    "userinfo_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me"
                    },
                    "userinfo_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "ES256"
                      ]
                    },
                    "claim_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "normal"
                      ]
                    }
                  },
                  "title": "OpenIdConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/issuers/{id}/token": {
      "post": {
        "summary": "IssuerToken",
        "operationId": "issuertoken",
        "description": "Internal only",
        "tags": [
          "Issuer Token"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "IssuerToken",
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        }
      ]
    },
    "/ext/oidc/v1/issuers/{id}/authorize": {
      "get": {
        "summary": "IssuerAuth",
        "operationId": "issuerAuth",
        "description": "Internal only",
        "tags": [
          "Issuer Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        }
      ]
    },
    "/ext/oidc/v1/issuers/{id}/offers": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Issuer ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "required": true
        }
      ],
      "post": {
        "summary": "Create an OpenId credential offer payload",
        "operationId": "CreateOidcOfferPayload",
        "tags": [
          "OIDC Issuers"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OidcCredentialOffer",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "to": {
                      "type": "array",
                      "items": {
                        "required": [
                          "string"
                        ],
                        "properties": {}
                      }
                    },
                    "from": {
                      "type": "string",
                      "minLength": 1
                    },
                    "created_time": {
                      "type": "number"
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "uri"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "to",
                    "from",
                    "created_time",
                    "body"
                  ]
                },
                "examples": {
                  "Message payload": {
                    "value": {
                      "id": "733d1de2-9286-447e-a701-29b1292089d0",
                      "type": "https://mattr.global/schemas/verifiable-credential/offer/OidcCredentialProvider",
                      "to": [
                        "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d"
                      ],
                      "from": "did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v",
                      "created_time": 1616052936783,
                      "body": {
                        "uri": "openid://discovery?issuer=https://tenant.vii.mattr.global/ext/oidc/v1/issuers/58ab2731-16a3-4c4c-a3b2-89fd242d1685"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a payload",
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "minLength": 1,
                    "description": "DID on the tenant used in a message"
                  },
                  "to": {
                    "type": "array",
                    "description": "List of SubjectDIDs",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "from",
                  "to"
                ],
                "title": "CreatePayloadRequest"
              },
              "examples": {
                "Create payload": {
                  "value": {
                    "from": "did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v",
                    "to": [
                      "did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d"
                    ]
                  }
                }
              }
            }
          },
          "description": "Create a message payload for an Offer"
        },
        "description": "Create a payload that can form a message in the JWM format that can be used in sending notifications to subjects to start an OIDC Issuer credential offer flow.\n\n- Use a DID setup on the tenant as the `from` value, this should be a DID with a key type suitable for messaging (not a BLS key type)\n- Include a SubjectDID as the `to` value - this value is only used in the message construction, it should be the same value as the intended recipient.\n\nTo send a notification to the Subject DID holder, use the payload with the /messaging/encrypt and /messaging/send endpoints."
      }
    },
    "/ext/oidc/v1/verifiers": {
      "post": {
        "operationId": "createOidcVerifier",
        "tags": [
          "OIDC Verifiers"
        ],
        "summary": "Create an OIDC Verifier",
        "description": "Create a new OIDC Credential Verifier for this tenant.\n\nThe `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\nThe `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\nClaim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.\n",
        "requestBody": {
          "description": "The verifier payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verifierDid": {
                    "type": "string",
                    "description": "The Verifier DID",
                    "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                  },
                  "presentationTemplateId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Presentation Template ID used to request certain credentials",
                    "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                  },
                  "claimMappings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "jsonLdFqn",
                        "oidcClaim"
                      ],
                      "properties": {
                        "jsonLdFqn": {
                          "type": "string",
                          "description": "Fully qualified JSON-LD term",
                          "example": "http://schema.org/alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      }
                    },
                    "description": "Map OpenID Connect terms to JSON-LD terms"
                  }
                },
                "required": [
                  "verifierDid",
                  "presentationTemplateId",
                  "claimMappings"
                ],
                "title": "CreateOidcVerifierRequest"
              },
              "examples": {
                "Create a Verifier": {
                  "value": {
                    "verifierDid": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq",
                    "presentationTemplateId": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3",
                    "claimMappings": [
                      {
                        "jsonLdFqn": "http://schema.org/alumniOf",
                        "oidcClaim": "alumni_of"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verifier created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Verifier id",
                          "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "verifierDid": {
                          "type": "string",
                          "description": "The Verifier DID",
                          "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                        },
                        "presentationTemplateId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Presentation Template ID used to request certain credentials",
                          "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                        },
                        "claimMappings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "jsonLdFqn",
                              "oidcClaim"
                            ],
                            "properties": {
                              "jsonLdFqn": {
                                "type": "string",
                                "description": "Fully qualified JSON-LD term",
                                "example": "http://schema.org/alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            }
                          },
                          "description": "Map OpenID Connect terms to JSON-LD terms"
                        }
                      },
                      "required": [
                        "verifierDid",
                        "presentationTemplateId",
                        "claimMappings"
                      ],
                      "title": "CreateOidcVerifierRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Invalid value",
                          "param": "presentationTemplateId"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOidcVerifiers",
        "tags": [
          "OIDC Verifiers"
        ],
        "summary": "Retrieve list of OIDC Verifiers",
        "description": "Returns a list of all OIDC Verifiers in the Tenant.\n",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of returned verifier entries, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the range of verifier entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of Verifiers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Verifier id",
                              "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "verifierDid": {
                              "type": "string",
                              "description": "The Verifier DID",
                              "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                            },
                            "presentationTemplateId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Presentation Template ID used to request certain credentials",
                              "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                            },
                            "claimMappings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "jsonLdFqn",
                                  "oidcClaim"
                                ],
                                "properties": {
                                  "jsonLdFqn": {
                                    "type": "string",
                                    "description": "Fully qualified JSON-LD term",
                                    "example": "http://schema.org/alumniOf"
                                  },
                                  "oidcClaim": {
                                    "type": "string",
                                    "description": "The credential claim name in OIDC terms",
                                    "example": "alumni_of"
                                  }
                                }
                              },
                              "description": "Map OpenID Connect terms to JSON-LD terms"
                            }
                          },
                          "required": [
                            "verifierDid",
                            "presentationTemplateId",
                            "claimMappings"
                          ],
                          "title": "CreateOidcVerifierRequest"
                        }
                      ],
                      "title": "CreateOidcVerifierResponse"
                    }
                  },
                  "title": "GetOidcVerifiersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "query",
                          "msg": "Failed to decode base64url data",
                          "param": "cursor",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ext/oidc/v1/verifiers/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Verifier ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          }
        }
      ],
      "get": {
        "operationId": "getOidcVerifier",
        "tags": [
          "OIDC Verifiers"
        ],
        "summary": "Retrieve an OIDC Verifier",
        "description": "Retrieve an OIDC Verifier by providing a Verifier ID.",
        "responses": {
          "200": {
            "description": "Retrieved Verifier",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Verifier id",
                          "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "verifierDid": {
                          "type": "string",
                          "description": "The Verifier DID",
                          "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                        },
                        "presentationTemplateId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Presentation Template ID used to request certain credentials",
                          "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                        },
                        "claimMappings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "jsonLdFqn",
                              "oidcClaim"
                            ],
                            "properties": {
                              "jsonLdFqn": {
                                "type": "string",
                                "description": "Fully qualified JSON-LD term",
                                "example": "http://schema.org/alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            }
                          },
                          "description": "Map OpenID Connect terms to JSON-LD terms"
                        }
                      },
                      "required": [
                        "verifierDid",
                        "presentationTemplateId",
                        "claimMappings"
                      ],
                      "title": "CreateOidcVerifierRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "verifierId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Verifier is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Verifier not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "verifierId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateOidcVerifier",
        "tags": [
          "OIDC Verifiers"
        ],
        "summary": "Update an OIDC Verifier",
        "description": "Update an OIDC Credential Verifier.\n\nThe `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\nThe `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\nClaim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.  The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verifierDid": {
                    "type": "string",
                    "description": "The Verifier DID",
                    "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                  },
                  "presentationTemplateId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Presentation Template ID used to request certain credentials",
                    "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                  },
                  "claimMappings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "jsonLdFqn",
                        "oidcClaim"
                      ],
                      "properties": {
                        "jsonLdFqn": {
                          "type": "string",
                          "description": "Fully qualified JSON-LD term",
                          "example": "http://schema.org/alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      }
                    },
                    "description": "Map OpenID Connect terms to JSON-LD terms"
                  }
                },
                "required": [
                  "verifierDid",
                  "presentationTemplateId",
                  "claimMappings"
                ],
                "title": "CreateOidcVerifierRequest"
              },
              "examples": {
                "Update a Verifier": {
                  "value": {
                    "verifierDid": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq",
                    "presentationTemplateId": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3",
                    "claimMappings": [
                      {
                        "jsonLdFqn": "http://schema.org/alumniOf",
                        "oidcClaim": "alumni_of"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Update a verifier"
        },
        "responses": {
          "200": {
            "description": "Successfully updated a Verifier",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Verifier id",
                          "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "verifierDid": {
                          "type": "string",
                          "description": "The Verifier DID",
                          "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                        },
                        "presentationTemplateId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Presentation Template ID used to request certain credentials",
                          "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                        },
                        "claimMappings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "jsonLdFqn",
                              "oidcClaim"
                            ],
                            "properties": {
                              "jsonLdFqn": {
                                "type": "string",
                                "description": "Fully qualified JSON-LD term",
                                "example": "http://schema.org/alumniOf"
                              },
                              "oidcClaim": {
                                "type": "string",
                                "description": "The credential claim name in OIDC terms",
                                "example": "alumni_of"
                              }
                            }
                          },
                          "description": "Map OpenID Connect terms to JSON-LD terms"
                        }
                      },
                      "required": [
                        "verifierDid",
                        "presentationTemplateId",
                        "claimMappings"
                      ],
                      "title": "CreateOidcVerifierRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Invalid value",
                          "param": "presentationTemplateId"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Verifier is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Verifier not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "verifierId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOidcVerifier",
        "tags": [
          "OIDC Verifiers"
        ],
        "summary": "Remove an OIDC Verifier",
        "description": "Removes an OIDC Verifier by providing a Verifier ID.\n",
        "responses": {
          "204": {
            "description": "Verifier deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "verifierId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Verifier is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Verifier not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "verifierId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/verifiers/{id}/clients": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Verifier ID"
        }
      ],
      "post": {
        "operationId": "createOidcVerifierClient",
        "tags": [
          "OIDC Verifier Client"
        ],
        "summary": "Create a Client",
        "description": "Relying party clients are required to be created in the system for Authorization and VC Verify flows that are enabled through OIDC.\n\nThe Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n",
        "requestBody": {
          "description": "The client payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for the verifier"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  },
                  "logoUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "The logo to display above the QR code",
                    "example": "https://example.com/logo.png"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcVerifierClientRequest"
              },
              "examples": {
                "Create a Client": {
                  "value": {
                    "name": "OIDC Client for the verifier",
                    "redirectUris": [
                      "https://example.com/callback"
                    ],
                    "responseTypes": [
                      "code"
                    ],
                    "grantTypes": [
                      "authorization_code"
                    ],
                    "tokenEndpointAuthMethod": "client_secret_post",
                    "idTokenSignedResponseAlg": "ES256",
                    "applicationType": "web",
                    "logoUri": "https://example.com/logo.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for the verifier"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        },
                        "logoUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "The logo to display above the QR code",
                          "example": "https://example.com/logo.png"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcVerifierClientRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "redirectUris is not array of strings",
                          "param": "redirectUris"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOidcVerifierClients",
        "tags": [
          "OIDC Verifier Client"
        ],
        "summary": "Retrieve list of Clients",
        "description": "Returns a list of all OIDC Verifier Clients in the Tenant.\n",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of returned client entries, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the range of client entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Client id",
                              "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
                            },
                            "secret": {
                              "type": "string",
                              "description": "Client secret",
                              "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Meaningful name for this Client",
                              "example": "OIDC Client for the verifier"
                            },
                            "redirectUris": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              },
                              "description": "Redirection URI to which the response will be sent",
                              "example": [
                                "https://example.com/callback"
                              ]
                            },
                            "responseTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Determines the authorization processing flow",
                              "example": [
                                "code"
                              ]
                            },
                            "grantTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "OAuth Grant Type",
                              "example": [
                                "authorization_code"
                              ]
                            },
                            "tokenEndpointAuthMethod": {
                              "type": "string",
                              "description": "OAuth Token Endpoint Authentication Method",
                              "example": "client_secret_post"
                            },
                            "idTokenSignedResponseAlg": {
                              "type": "string",
                              "description": "Algorithm must match configured jwks, defaults to RS256",
                              "example": "ES256"
                            },
                            "applicationType": {
                              "type": "string",
                              "example": "web"
                            },
                            "logoUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The logo to display above the QR code",
                              "example": "https://example.com/logo.png"
                            }
                          },
                          "required": [
                            "name",
                            "redirectUris"
                          ],
                          "title": "CreateOidcVerifierClientRequest"
                        }
                      ],
                      "title": "CreateOidcVerifierClientResponse"
                    }
                  },
                  "title": "GetOidcVerifierClientsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "query",
                          "msg": "Failed to decode base64url data",
                          "param": "cursor",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/verifiers/{id}/clients/{clientId}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Verifier ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          }
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
          },
          "name": "clientId",
          "in": "path",
          "required": true,
          "description": "Client ID"
        }
      ],
      "get": {
        "operationId": "getOidcVerifierClient",
        "tags": [
          "OIDC Verifier Client"
        ],
        "summary": "Retrieve a Client",
        "description": "Retrieve an OIDC Verifier Client by providing a Client ID.",
        "responses": {
          "200": {
            "description": "Retrieved Client",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for the verifier"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        },
                        "logoUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "The logo to display above the QR code",
                          "example": "https://example.com/logo.png"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcVerifierClientRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "clientId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateOidcVerifierClient",
        "tags": [
          "OIDC Verifier Client"
        ],
        "summary": "Update a Client",
        "description": "Update an OIDC Verifier Client.\n\nThe Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for the verifier"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  },
                  "logoUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "The logo to display above the QR code",
                    "example": "https://example.com/logo.png"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcVerifierClientRequest"
              },
              "examples": {
                "Update Client": {
                  "value": {
                    "name": "OIDC Client for the verifier",
                    "redirectUris": [
                      "https://example.com/callback"
                    ],
                    "responseTypes": [
                      "code"
                    ],
                    "grantTypes": [
                      "authorization_code"
                    ],
                    "tokenEndpointAuthMethod": "client_secret_post",
                    "idTokenSignedResponseAlg": "ES256",
                    "applicationType": "web",
                    "logoUri": "https://example.com/logo.png"
                  }
                }
              }
            }
          },
          "description": "Update a client"
        },
        "responses": {
          "200": {
            "description": "Successfully updated a Client",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Client id",
                          "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
                        },
                        "secret": {
                          "type": "string",
                          "description": "Client secret",
                          "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Meaningful name for this Client",
                          "example": "OIDC Client for the verifier"
                        },
                        "redirectUris": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Redirection URI to which the response will be sent",
                          "example": [
                            "https://example.com/callback"
                          ]
                        },
                        "responseTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Determines the authorization processing flow",
                          "example": [
                            "code"
                          ]
                        },
                        "grantTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth Grant Type",
                          "example": [
                            "authorization_code"
                          ]
                        },
                        "tokenEndpointAuthMethod": {
                          "type": "string",
                          "description": "OAuth Token Endpoint Authentication Method",
                          "example": "client_secret_post"
                        },
                        "idTokenSignedResponseAlg": {
                          "type": "string",
                          "description": "Algorithm must match configured jwks, defaults to RS256",
                          "example": "ES256"
                        },
                        "applicationType": {
                          "type": "string",
                          "example": "web"
                        },
                        "logoUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "The logo to display above the QR code",
                          "example": "https://example.com/logo.png"
                        }
                      },
                      "required": [
                        "name",
                        "redirectUris"
                      ],
                      "title": "CreateOidcVerifierClientRequest"
                    }
                  ],
                  "title": "CreateOidcVerifierClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "redirectUris is not array of strings",
                          "param": "redirectUris"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOidcVerifierClient",
        "tags": [
          "OIDC Verifier Client"
        ],
        "summary": "Remove a Client",
        "description": "Removes an OIDC Verifier Client by providing a Client ID.\n",
        "responses": {
          "204": {
            "description": "Client deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Invalid value",
                          "param": "clientId",
                          "value": "abc"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Client is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Client not found": {
                    "value": {
                      "code": "NotFound",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "params",
                          "msg": "Resource Not Found",
                          "param": "clientId",
                          "value": "a368cfb4-9537-4439-acc6-ce3cf2287eb7"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/verifiers/{id}/.well-known/openid-configuration": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Verifier ID"
        }
      ],
      "get": {
        "operationId": "verifierWellKnownOidcConfig",
        "security": [],
        "tags": [
          "OIDC Verifier Auth"
        ],
        "summary": "Well Known OpenId Configuration",
        "description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n",
        "responses": {
          "200": {
            "description": "Returns OpenID configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorization_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize"
                    },
                    "claims_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "claims_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "sub",
                        "sid",
                        "auth_time",
                        "iss"
                      ]
                    },
                    "code_challenge_methods_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "S256"
                      ]
                    },
                    "end_session_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end"
                    },
                    "grant_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "implicit",
                        "authorization_code",
                        "refresh_token"
                      ]
                    },
                    "id_token_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "ES256"
                      ]
                    },
                    "issuer": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global"
                    },
                    "jwks_uri": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks"
                    },
                    "registration_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients"
                    },
                    "request_object_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "RS256",
                        "PS256",
                        "ES256",
                        "EdDSA"
                      ]
                    },
                    "request_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "request_uri_parameter_supported": {
                      "type": "boolean",
                      "example": true
                    },
                    "require_request_uri_registration": {
                      "type": "boolean",
                      "example": true
                    },
                    "response_modes_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "form_post",
                        "fragment",
                        "query"
                      ]
                    },
                    "response_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "code id_token",
                        "code",
                        "id_token",
                        "none"
                      ]
                    },
                    "scopes_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "openid",
                        "offline_access"
                      ]
                    },
                    "subject_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "public"
                      ]
                    },
                    "token_endpoint_auth_methods_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "none",
                        "client_secret_basic",
                        "client_secret_jwt",
                        "client_secret_post",
                        "private_key_jwt"
                      ]
                    },
                    "token_endpoint_auth_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "RS256",
                        "PS256",
                        "ES256",
                        "EdDSA"
                      ]
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token"
                    },
                    "userinfo_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me"
                    },
                    "userinfo_signing_alg_values_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "HS256",
                        "ES256"
                      ]
                    },
                    "claim_types_supported": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "normal"
                      ]
                    }
                  },
                  "title": "OpenIdConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/ext/oidc/v1/verifiers/{id}/token": {
      "post": {
        "operationId": "verifierRetrieveToken",
        "tags": [
          "OIDC Verifier Auth"
        ],
        "summary": "Retrieve Token",
        "description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "client_id": {
                        "oneOf": [
                          {
                            "example": "G1s1EPMml4L0zFd63R1YP"
                          }
                        ],
                        "type": "string"
                      },
                      "client_secret": {
                        "type": "string",
                        "example": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw"
                      },
                      "grant_type": {
                        "type": "string",
                        "example": "authorization_code"
                      },
                      "code": {
                        "type": "string",
                        "example": "shdT2ks5tg9b"
                      },
                      "redirect_uri": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://my-client-rp.example.com"
                      }
                    },
                    "title": "InitialTokenRequest"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client_id": {
                        "type": "string"
                      },
                      "client_secret": {
                        "type": "string"
                      },
                      "grant_type": {
                        "type": "string",
                        "example": "authorization_code"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "redirect_uri": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "title": "RefreshTokenRequest"
                  }
                ],
                "title": "TokenRequest"
              },
              "examples": {}
            }
          },
          "description": "Token endpoint request"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string",
                      "enum": [
                        "bearer"
                      ]
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "id_token": {
                      "type": "string"
                    }
                  },
                  "title": "TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Verifier ID",
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
          }
        }
      ]
    },
    "/core/v1/presentations/templates": {
      "post": {
        "operationId": "createPresTemplate",
        "tags": [
          "Presentations"
        ],
        "summary": "Create a presentation template",
        "description": "A Presentation Request Template defines which credentials are required for presentation. This is used to create the actual Presentation Request, which is used by the Mobile Wallet to select which credential it should display to the Holder, asking for confirmation to be used in the Presentation to be sent.\n\n### Creating the payload \nThe `domain` value must always match the domain of the tenant being used.\n\nThe `name` value is a convenience attribute for quickly determining the intended purpose of a created template.\n\nThe Presentation Request `query` follows the  [Verifiable Presentation Request Specification](https://w3c-ccg.github.io/vp-request-spec/).\n\nThe following query methods have been enabled:\n\n- Query by Example\n- Query by Frame\n- DID Auth\n\nQuery can accept an array of types, which makes is possible to construct complex presentation requests from the template, however creating a valid Presentation Template does not ensure that logically valid Presentation Request is created or that a credential holder would be able to satisfy the request.\n\n### Query by Example\nThis is a basic form of requesting credential information, it is possible to limit the request based on:\n- Credential Type - based on the `type` of the credential\n- Specific Trusted Issuer DIDs - an array of DIDs that the credential must have been issued by one of.\n\n### Query by Frame\nUsed primary for requesting specific claims from ZKP-enabled credentials, only the claims requested in the frame will be derived and sent in the presentation.\n- Credential Type - If an array should match the exact `type` used in the Credential otherwise a string is required to be `VerifiableCredential`.\n- CredentialSubject - request specific claims from a credential subject.\n- Specific Trusted Issuer DIDs - an array of DIDs that the credential must have been issued by one of, ensure this DID is of a BLS key type that has issued a ZKP-enabled credential.\n\n### DID Auth\nThe type of Template will result in a DID Auth flow resulting in just the Subject DID from the holder to be provided in the response to the Presentation Request.\n- DIDAuth\n\n## Returns\nOn Success, the response from the endpoint always include the Presentation Template ID, this UUID is required in OIDC Bridge Verifier instance setup and using the Verify using a Callback method. The Presentation Request endpoint uses this ID to determine the exact type of request message to create.",
        "requestBody": {
          "description": "The template",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "CreatePresentationTemplate",
                "description": "",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Must match domain of the tenant"
                  },
                  "name": {
                    "type": "string",
                    "description": "Internal descriptor only"
                  },
                  "query": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "x-examples": {},
                          "title": "CreatePresentationQueryByExample",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "QueryByExample"
                            },
                            "credentialQuery": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "minProperties": 1,
                                "properties": {
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "reason": {
                                    "type": "string"
                                  },
                                  "example": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "@context": {
                                          "type": "array",
                                          "description": "array of contexts",
                                          "items": {}
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "example": "AlumniCredential"
                                            },
                                            {
                                              "type": "array",
                                              "example": [
                                                "[AlumniCredential]"
                                              ],
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          ]
                                        },
                                        "trustedIssuer": {
                                          "type": "array",
                                          "description": "array of trusted issuers",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "required": {
                                                "type": "boolean"
                                              },
                                              "issuer": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "required",
                                              "issuer"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "@context",
                                        "type",
                                        "trustedIssuer"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "required",
                                  "example"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "credentialQuery"
                          ]
                        },
                        {
                          "type": "object",
                          "title": "CreatePresentationQueryByFrame",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "credentialQuery": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "reason": {
                                    "type": "string"
                                  },
                                  "frame": {
                                    "type": "object",
                                    "required": [
                                      "@context",
                                      "type",
                                      "credentialSubject"
                                    ],
                                    "properties": {
                                      "@context": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "type": {
                                        "oneOf": [
                                          {
                                            "type": "string",
                                            "example": "VerifiableCredential",
                                            "description": "The value must be VerifiableCredential"
                                          },
                                          {
                                            "type": "array",
                                            "example": [
                                              "[VerifiableCredential, AlumniCredential]"
                                            ],
                                            "items": {
                                              "type": "string",
                                              "description": "VerifiableCredential must be the first value"
                                            }
                                          }
                                        ]
                                      },
                                      "credentialSubject": {
                                        "type": "object",
                                        "required": [
                                          "@explicit",
                                          "educationalCredentialAwarded",
                                          "familyName"
                                        ],
                                        "properties": {
                                          "@explicit": {
                                            "type": "boolean"
                                          },
                                          "educationalCredentialAwarded": {
                                            "type": "object"
                                          },
                                          "familyName": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "trustedIssuer": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "minItems": 0,
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "issuer": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "required",
                                        "issuer"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "reason",
                                  "frame",
                                  "trustedIssuer"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "credentialQuery"
                          ]
                        },
                        {
                          "type": "object",
                          "title": "CreatePresentationDidAuthTemplate",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "DIDAuth",
                              "example": "DIDAuth"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "domain",
                  "name",
                  "query"
                ]
              },
              "examples": {
                "Query by Example": {
                  "value": {
                    "domain": "tenant.vii.mattr.global",
                    "name": "alumni_credential_request",
                    "query": [
                      {
                        "type": "QueryByExample",
                        "credentialQuery": [
                          {
                            "required": true,
                            "reason": "We need you to prove your alumni membership.",
                            "example": {
                              "@context": [
                                "https://schema.org"
                              ],
                              "type": "AlumniCredential",
                              "trustedIssuer": [
                                {
                                  "required": true,
                                  "issuer": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "Query by Frame": {
                  "value": {
                    "domain": "tenant.vii.mattr.global",
                    "name": "zkp-certificate-presentation",
                    "query": [
                      {
                        "type": "QueryByFrame",
                        "credentialQuery": [
                          {
                            "reason": "Please provide your educational award and surname from your Certificate",
                            "frame": {
                              "@context": [
                                "https://www.w3.org/2018/credentials/v1",
                                "https://w3id.org/vc-revocation-list-2020/v1",
                                "https://schema.org"
                              ],
                              "type": [
                                "VerifiableCredential",
                                "AlumniCredential"
                              ],
                              "credentialSubject": {
                                "@explicit": true,
                                "educationalCredentialAwarded": {},
                                "familyName": {}
                              }
                            },
                            "trustedIssuer": [
                              {
                                "issuer": "did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v",
                                "required": true
                              }
                            ],
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                },
                "DID Auth": {
                  "value": {
                    "name": "did-auth",
                    "domain": "tenant.vii.mattr.global",
                    "query": [
                      {
                        "type": "DIDAuth"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Template created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                    },
                    "domain": {
                      "type": "string",
                      "example": "tenant.vii.mattr.global"
                    },
                    "name": {
                      "type": "string",
                      "example": "alumni_credential_request"
                    },
                    "query": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "x-examples": {},
                            "title": "CreatePresentationQueryByExample",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "QueryByExample"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "minProperties": 1,
                                  "properties": {
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "reason": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "@context": {
                                            "type": "array",
                                            "description": "array of contexts",
                                            "items": {}
                                          },
                                          "type": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "example": "AlumniCredential"
                                              },
                                              {
                                                "type": "array",
                                                "example": [
                                                  "[AlumniCredential]"
                                                ],
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          },
                                          "trustedIssuer": {
                                            "type": "array",
                                            "description": "array of trusted issuers",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "required": {
                                                  "type": "boolean"
                                                },
                                                "issuer": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "required",
                                                "issuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "@context",
                                          "type",
                                          "trustedIssuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "required",
                                    "example"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationQueryByFrame",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "type": "string"
                                    },
                                    "frame": {
                                      "type": "object",
                                      "required": [
                                        "@context",
                                        "type",
                                        "credentialSubject"
                                      ],
                                      "properties": {
                                        "@context": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "example": "VerifiableCredential",
                                              "description": "The value must be VerifiableCredential"
                                            },
                                            {
                                              "type": "array",
                                              "example": [
                                                "[VerifiableCredential, AlumniCredential]"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "description": "VerifiableCredential must be the first value"
                                              }
                                            }
                                          ]
                                        },
                                        "credentialSubject": {
                                          "type": "object",
                                          "required": [
                                            "@explicit",
                                            "educationalCredentialAwarded",
                                            "familyName"
                                          ],
                                          "properties": {
                                            "@explicit": {
                                              "type": "boolean"
                                            },
                                            "educationalCredentialAwarded": {
                                              "type": "object"
                                            },
                                            "familyName": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "trustedIssuer": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 0,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "required": {
                                            "type": "boolean"
                                          },
                                          "issuer": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "required",
                                          "issuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "reason",
                                    "frame",
                                    "trustedIssuer"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationDidAuthTemplate",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "DIDAuth",
                                "example": "DIDAuth"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "domain",
                    "name",
                    "query"
                  ],
                  "title": "PresentationTemplateResponse"
                },
                "examples": {
                  "Created": {
                    "value": {
                      "id": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3",
                      "domain": "tenant.vii.mattr.global",
                      "name": "alumni_credential_request",
                      "query": [
                        {
                          "type": "QueryByExample",
                          "credentialQuery": [
                            {
                              "required": true,
                              "reason": "We need you to prove your alumni membership.",
                              "example": {
                                "@context": [
                                  "https://schema.org"
                                ],
                                "type": "AlumniCredential",
                                "trustedIssuer": [
                                  {
                                    "required": true,
                                    "issuer": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "retrievePresTemplates",
        "tags": [
          "Presentations"
        ],
        "summary": "Retrieve a list of presentation templates",
        "description": "Returns a list of all Presentation Templates on the tenant.\n\nUse the `name` value to determine the intended purpose of the templates.",
        "responses": {
          "200": {
            "description": "All templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string",
                      "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
                      "description": "Starting point for next cursor to use in a page"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                          },
                          "domain": {
                            "type": "string",
                            "example": "tenant.vii.mattr.global"
                          },
                          "name": {
                            "type": "string",
                            "example": "alumni_credential_request"
                          },
                          "query": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "x-examples": {},
                                  "title": "CreatePresentationQueryByExample",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "QueryByExample"
                                    },
                                    "credentialQuery": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "items": {
                                        "type": "object",
                                        "minProperties": 1,
                                        "properties": {
                                          "required": {
                                            "type": "boolean"
                                          },
                                          "reason": {
                                            "type": "string"
                                          },
                                          "example": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "@context": {
                                                  "type": "array",
                                                  "description": "array of contexts",
                                                  "items": {}
                                                },
                                                "type": {
                                                  "oneOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "AlumniCredential"
                                                    },
                                                    {
                                                      "type": "array",
                                                      "example": [
                                                        "[AlumniCredential]"
                                                      ],
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "trustedIssuer": {
                                                  "type": "array",
                                                  "description": "array of trusted issuers",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "required": {
                                                        "type": "boolean"
                                                      },
                                                      "issuer": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "required",
                                                      "issuer"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "@context",
                                                "type",
                                                "trustedIssuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "required",
                                          "example"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "credentialQuery"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "CreatePresentationQueryByFrame",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "credentialQuery": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "reason": {
                                            "type": "string"
                                          },
                                          "frame": {
                                            "type": "object",
                                            "required": [
                                              "@context",
                                              "type",
                                              "credentialSubject"
                                            ],
                                            "properties": {
                                              "@context": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object"
                                                }
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "example": "VerifiableCredential",
                                                    "description": "The value must be VerifiableCredential"
                                                  },
                                                  {
                                                    "type": "array",
                                                    "example": [
                                                      "[VerifiableCredential, AlumniCredential]"
                                                    ],
                                                    "items": {
                                                      "type": "string",
                                                      "description": "VerifiableCredential must be the first value"
                                                    }
                                                  }
                                                ]
                                              },
                                              "credentialSubject": {
                                                "type": "object",
                                                "required": [
                                                  "@explicit",
                                                  "educationalCredentialAwarded",
                                                  "familyName"
                                                ],
                                                "properties": {
                                                  "@explicit": {
                                                    "type": "boolean"
                                                  },
                                                  "educationalCredentialAwarded": {
                                                    "type": "object"
                                                  },
                                                  "familyName": {
                                                    "type": "object"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "trustedIssuer": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "required": {
                                                  "type": "boolean"
                                                },
                                                "issuer": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "required",
                                                "issuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "reason",
                                          "frame",
                                          "trustedIssuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "credentialQuery"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "title": "CreatePresentationDidAuthTemplate",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "DIDAuth",
                                      "example": "DIDAuth"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "domain",
                          "name",
                          "query"
                        ],
                        "title": "PresentationTemplateResponse"
                      }
                    }
                  },
                  "title": "PresentationTemplateArrayResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of the list, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the list"
          }
        ]
      },
      "parameters": []
    },
    "/core/v1/presentations/templates/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Presentation template ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "retrievePresTemplate",
        "tags": [
          "Presentations"
        ],
        "summary": "Retrieve a presentation template",
        "description": "Retrieve a Presentation Template by providing a template ID",
        "responses": {
          "200": {
            "description": "Template returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                    },
                    "domain": {
                      "type": "string",
                      "example": "tenant.vii.mattr.global"
                    },
                    "name": {
                      "type": "string",
                      "example": "alumni_credential_request"
                    },
                    "query": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "x-examples": {},
                            "title": "CreatePresentationQueryByExample",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "QueryByExample"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "minProperties": 1,
                                  "properties": {
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "reason": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "@context": {
                                            "type": "array",
                                            "description": "array of contexts",
                                            "items": {}
                                          },
                                          "type": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "example": "AlumniCredential"
                                              },
                                              {
                                                "type": "array",
                                                "example": [
                                                  "[AlumniCredential]"
                                                ],
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          },
                                          "trustedIssuer": {
                                            "type": "array",
                                            "description": "array of trusted issuers",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "required": {
                                                  "type": "boolean"
                                                },
                                                "issuer": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "required",
                                                "issuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "@context",
                                          "type",
                                          "trustedIssuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "required",
                                    "example"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationQueryByFrame",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "type": "string"
                                    },
                                    "frame": {
                                      "type": "object",
                                      "required": [
                                        "@context",
                                        "type",
                                        "credentialSubject"
                                      ],
                                      "properties": {
                                        "@context": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "example": "VerifiableCredential",
                                              "description": "The value must be VerifiableCredential"
                                            },
                                            {
                                              "type": "array",
                                              "example": [
                                                "[VerifiableCredential, AlumniCredential]"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "description": "VerifiableCredential must be the first value"
                                              }
                                            }
                                          ]
                                        },
                                        "credentialSubject": {
                                          "type": "object",
                                          "required": [
                                            "@explicit",
                                            "educationalCredentialAwarded",
                                            "familyName"
                                          ],
                                          "properties": {
                                            "@explicit": {
                                              "type": "boolean"
                                            },
                                            "educationalCredentialAwarded": {
                                              "type": "object"
                                            },
                                            "familyName": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "trustedIssuer": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 0,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "required": {
                                            "type": "boolean"
                                          },
                                          "issuer": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "required",
                                          "issuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "reason",
                                    "frame",
                                    "trustedIssuer"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationDidAuthTemplate",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "DIDAuth",
                                "example": "DIDAuth"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "domain",
                    "name",
                    "query"
                  ],
                  "title": "PresentationTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid templateId parameter format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "removePresTemplate",
        "tags": [
          "Presentations"
        ],
        "summary": "Delete presentation template",
        "description": "Delete a Presentation Template",
        "responses": {
          "204": {
            "description": "Template deleted"
          },
          "400": {
            "description": "Invalid templateId parameter format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update presentation template",
        "operationId": "updatePresTemplate",
        "tags": [
          "Presentations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                    },
                    "domain": {
                      "type": "string",
                      "example": "tenant.vii.mattr.global"
                    },
                    "name": {
                      "type": "string",
                      "example": "alumni_credential_request"
                    },
                    "query": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "x-examples": {},
                            "title": "CreatePresentationQueryByExample",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "QueryByExample"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "minProperties": 1,
                                  "properties": {
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "reason": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "@context": {
                                            "type": "array",
                                            "description": "array of contexts",
                                            "items": {}
                                          },
                                          "type": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "example": "AlumniCredential"
                                              },
                                              {
                                                "type": "array",
                                                "example": [
                                                  "[AlumniCredential]"
                                                ],
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          },
                                          "trustedIssuer": {
                                            "type": "array",
                                            "description": "array of trusted issuers",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "required": {
                                                  "type": "boolean"
                                                },
                                                "issuer": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "required",
                                                "issuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "@context",
                                          "type",
                                          "trustedIssuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "required",
                                    "example"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationQueryByFrame",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "credentialQuery": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "type": "string"
                                    },
                                    "frame": {
                                      "type": "object",
                                      "required": [
                                        "@context",
                                        "type",
                                        "credentialSubject"
                                      ],
                                      "properties": {
                                        "@context": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "example": "VerifiableCredential",
                                              "description": "The value must be VerifiableCredential"
                                            },
                                            {
                                              "type": "array",
                                              "example": [
                                                "[VerifiableCredential, AlumniCredential]"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "description": "VerifiableCredential must be the first value"
                                              }
                                            }
                                          ]
                                        },
                                        "credentialSubject": {
                                          "type": "object",
                                          "required": [
                                            "@explicit",
                                            "educationalCredentialAwarded",
                                            "familyName"
                                          ],
                                          "properties": {
                                            "@explicit": {
                                              "type": "boolean"
                                            },
                                            "educationalCredentialAwarded": {
                                              "type": "object"
                                            },
                                            "familyName": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "trustedIssuer": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 0,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "required": {
                                            "type": "boolean"
                                          },
                                          "issuer": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "required",
                                          "issuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "reason",
                                    "frame",
                                    "trustedIssuer"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "credentialQuery"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "CreatePresentationDidAuthTemplate",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "DIDAuth",
                                "example": "DIDAuth"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "domain",
                    "name",
                    "query"
                  ],
                  "title": "PresentationTemplateResponse"
                }
              }
            }
          }
        },
        "description": "Update a Presentation Template using the template `id`.\n\nFollows the same structure as the Create a Presentation Template endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdatePresentationTemplate",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "CreatePresentationTemplate",
                    "description": "",
                    "properties": {
                      "domain": {
                        "type": "string",
                        "description": "Must match domain of the tenant"
                      },
                      "name": {
                        "type": "string",
                        "description": "Internal descriptor only"
                      },
                      "query": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "x-examples": {},
                              "title": "CreatePresentationQueryByExample",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "QueryByExample"
                                },
                                "credentialQuery": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "minProperties": 1,
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "reason": {
                                        "type": "string"
                                      },
                                      "example": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "@context": {
                                              "type": "array",
                                              "description": "array of contexts",
                                              "items": {}
                                            },
                                            "type": {
                                              "oneOf": [
                                                {
                                                  "type": "string",
                                                  "example": "AlumniCredential"
                                                },
                                                {
                                                  "type": "array",
                                                  "example": [
                                                    "[AlumniCredential]"
                                                  ],
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            },
                                            "trustedIssuer": {
                                              "type": "array",
                                              "description": "array of trusted issuers",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "required": {
                                                    "type": "boolean"
                                                  },
                                                  "issuer": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "required",
                                                  "issuer"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "@context",
                                            "type",
                                            "trustedIssuer"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "required",
                                      "example"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "credentialQuery"
                              ]
                            },
                            {
                              "type": "object",
                              "title": "CreatePresentationQueryByFrame",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "credentialQuery": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "reason": {
                                        "type": "string"
                                      },
                                      "frame": {
                                        "type": "object",
                                        "required": [
                                          "@context",
                                          "type",
                                          "credentialSubject"
                                        ],
                                        "properties": {
                                          "@context": {
                                            "type": "array",
                                            "items": {
                                              "type": "object"
                                            }
                                          },
                                          "type": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "example": "VerifiableCredential",
                                                "description": "The value must be VerifiableCredential"
                                              },
                                              {
                                                "type": "array",
                                                "example": [
                                                  "[VerifiableCredential, AlumniCredential]"
                                                ],
                                                "items": {
                                                  "type": "string",
                                                  "description": "VerifiableCredential must be the first value"
                                                }
                                              }
                                            ]
                                          },
                                          "credentialSubject": {
                                            "type": "object",
                                            "required": [
                                              "@explicit",
                                              "educationalCredentialAwarded",
                                              "familyName"
                                            ],
                                            "properties": {
                                              "@explicit": {
                                                "type": "boolean"
                                              },
                                              "educationalCredentialAwarded": {
                                                "type": "object"
                                              },
                                              "familyName": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trustedIssuer": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "minItems": 0,
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "required": {
                                              "type": "boolean"
                                            },
                                            "issuer": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "required",
                                            "issuer"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "reason",
                                      "frame",
                                      "trustedIssuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "credentialQuery"
                              ]
                            },
                            {
                              "type": "object",
                              "title": "CreatePresentationDidAuthTemplate",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "DIDAuth",
                                  "example": "DIDAuth"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "domain",
                      "name",
                      "query"
                    ]
                  }
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/core/v1/presentations/requests": {
      "post": {
        "operationId": "createPresRequest",
        "tags": [
          "Presentations"
        ],
        "summary": "Create a presentation request",
        "description": "Creates a short lived Presentation Request.\n\n### Creating the payload\nA `challenge` can be used to correlate requests\nThe `DID` is used a Verifier DID to prove the authenticity of the Request to holders\nAny `callbackUrl` provide will be called on receipt of the response to the Presentation Request.\nIf no `expiresTime` is provided, a default of 5 minutes will be used.\n\n### Returns\nThe `request` object holds the Presentation Request in the form of a constructed JWM message.\n\nThe `request` needs to be [signed](#operation/signMessage) and conveyed to the holder, using techniques like a QR, deeplink or [encrypted](#operation/encryptMessage) and sent via a [notification message](#operation/sendMessage).\n",
        "requestBody": {
          "description": "The presentation request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "templateId",
                  "did"
                ],
                "properties": {
                  "challenge": {
                    "type": "string",
                    "description": "Challenge can be used to match the response to a request",
                    "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                  },
                  "did": {
                    "type": "string",
                    "description": "DID of the Verifier",
                    "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
                  },
                  "templateId": {
                    "type": "string",
                    "description": "Presentation Request Template id",
                    "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                  },
                  "expiresTime": {
                    "type": "number",
                    "description": "Unix timestamp in ms after which the request will be expired",
                    "example": 1592955632103
                  },
                  "callbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Endpoint that will receive the Verifiable Presentation",
                    "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
                  }
                },
                "title": "CreatePresentationRequestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Presentation Request created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Presentation Request id",
                      "example": "c74128a0-9949-11ea-9554-b5a630b3c119"
                    },
                    "callbackUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint that will receive the Verifiable Presentation",
                      "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
                    },
                    "request": {
                      "type": "object",
                      "description": "Presentation Request Details",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Presentation Request id",
                          "example": "c74128a0-9949-11ea-9554-b5a630b3c119"
                        },
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "Presentation Request schema",
                          "example": "https://mattr.global/schemas/verifiable-presentation/request/QueryByExample"
                        },
                        "from": {
                          "type": "string",
                          "description": "Verifier DID",
                          "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                        },
                        "created_time": {
                          "type": "number",
                          "description": "Creation time",
                          "example": 1606709582907
                        },
                        "expires_time": {
                          "type": "number",
                          "description": "Expiry time",
                          "example": 2594859115000
                        },
                        "reply_url": {
                          "type": "string",
                          "description": "Endpoint that will receive the Verifiable Presentation",
                          "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
                        },
                        "reply_to": {
                          "type": "array",
                          "description": "Verifier DID",
                          "items": {
                            "type": "string",
                            "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                          }
                        },
                        "body": {
                          "description": "Definition of what type of Credential is being requested",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                                },
                                "domain": {
                                  "type": "string",
                                  "example": "tenant.vii.mattr.global"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "alumni_credential_request"
                                },
                                "query": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "x-examples": {},
                                        "title": "CreatePresentationQueryByExample",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "QueryByExample"
                                          },
                                          "credentialQuery": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "items": {
                                              "type": "object",
                                              "minProperties": 1,
                                              "properties": {
                                                "required": {
                                                  "type": "boolean"
                                                },
                                                "reason": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "@context": {
                                                        "type": "array",
                                                        "description": "array of contexts",
                                                        "items": {}
                                                      },
                                                      "type": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string",
                                                            "example": "AlumniCredential"
                                                          },
                                                          {
                                                            "type": "array",
                                                            "example": [
                                                              "[AlumniCredential]"
                                                            ],
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "trustedIssuer": {
                                                        "type": "array",
                                                        "description": "array of trusted issuers",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "required": {
                                                              "type": "boolean"
                                                            },
                                                            "issuer": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "required",
                                                            "issuer"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "@context",
                                                      "type",
                                                      "trustedIssuer"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "required",
                                                "example"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "credentialQuery"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "CreatePresentationQueryByFrame",
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "credentialQuery": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "reason": {
                                                  "type": "string"
                                                },
                                                "frame": {
                                                  "type": "object",
                                                  "required": [
                                                    "@context",
                                                    "type",
                                                    "credentialSubject"
                                                  ],
                                                  "properties": {
                                                    "@context": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string",
                                                          "example": "VerifiableCredential",
                                                          "description": "The value must be VerifiableCredential"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "example": [
                                                            "[VerifiableCredential, AlumniCredential]"
                                                          ],
                                                          "items": {
                                                            "type": "string",
                                                            "description": "VerifiableCredential must be the first value"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "credentialSubject": {
                                                      "type": "object",
                                                      "required": [
                                                        "@explicit",
                                                        "educationalCredentialAwarded",
                                                        "familyName"
                                                      ],
                                                      "properties": {
                                                        "@explicit": {
                                                          "type": "boolean"
                                                        },
                                                        "educationalCredentialAwarded": {
                                                          "type": "object"
                                                        },
                                                        "familyName": {
                                                          "type": "object"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "trustedIssuer": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 0,
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "required": {
                                                        "type": "boolean"
                                                      },
                                                      "issuer": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "required",
                                                      "issuer"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "reason",
                                                "frame",
                                                "trustedIssuer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "credentialQuery"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "title": "CreatePresentationDidAuthTemplate",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "DIDAuth",
                                            "example": "DIDAuth"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "domain",
                                "name",
                                "query"
                              ],
                              "title": "PresentationTemplateResponse"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "challenge": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "Challenge to match the response to a request",
                                  "example": "e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "title": "CreatePresentationRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "location": "body",
                          "msg": "Invalid value",
                          "param": "callbackUrl"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/core/v1/presentations": {
      "post": {
        "summary": "Create a presentation",
        "operationId": "createPres",
        "description": "Create a Verifiable Presentation on your tenant by providing one or more Verifiable Credentials.\n\nTo successfully create a Verifiable Presentation using this endpoint you must supply;\n\n- a `holderDiDUrl` that is controlled by the tenant\n- a credentials collection containing only subject-bound credentials\n- a credentials collection containing only credentials with a subject DID that is controlled by the tenant\n\nThe resulting Verifiable Presentation will contain a proof generated via the holder DID and each unique subject DID.\n\n> Non-subject-bound (bearer) credentials are not supported.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreatePresentationRequestBody",
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "example": "tenant.vii.mattr.global"
                  },
                  "holderDidUrl": {
                    "type": "string",
                    "example": "did:key:z6MkfxQU7dy8eKxyHpG267FV23agZQu9zmokd8BprepfHALi",
                    "format": "uri"
                  },
                  "credentials": {
                    "type": "array",
                    "description": "Array of credentials for W3C VC Presentation or ignore for DIDAuth",
                    "items": {
                      "type": "object",
                      "properties": {
                        "@context": {
                          "type": "array",
                          "example": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://www.w3.org/2018/credentials/examples/v1"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                          }
                        },
                        "type": {
                          "type": "array",
                          "example": [
                            "VerifiableCredential",
                            "AlumniCredential"
                          ],
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "example": "\"AlumniCredential\", \"VerifiableCredential\""
                          }
                        },
                        "issuer": {
                          "description": "Includes issuer id (did) and its domain (inside name parameter)",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Example University"
                                }
                              }
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "issuanceDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29.156Z"
                        },
                        "credentialStatus": {
                          "type": "object",
                          "description": "Credential status location information",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique ID for the credential status",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                            },
                            "type": {
                              "type": "string",
                              "description": "Indicates that the status contains revocation information",
                              "example": "RevocationList2020Status"
                            },
                            "revocationListIndex": {
                              "type": "integer",
                              "example": 1,
                              "description": "The location within the revocation list for the credential"
                            },
                            "revocationListCredential": {
                              "type": "string",
                              "description": "The location of the revocation list",
                              "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                            }
                          },
                          "title": "CredentialStatus"
                        },
                        "credentialSubject": {
                          "type": "object",
                          "example": {
                            "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                            "givenName": "Jamie",
                            "familyName": "Doe"
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                            },
                            "givenName": {
                              "type": "string",
                              "example": "Jamie"
                            },
                            "familyName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "alumniOf": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        "proof": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "Ed25519Signature2018"
                            },
                            "created": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-05-02T12:06:29Z"
                            },
                            "jws": {
                              "type": "string",
                              "description": "Compact form of JWS",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                            },
                            "proofPurpose": {
                              "type": "string",
                              "example": "assertionMethod"
                            },
                            "verificationMethod": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            }
                          },
                          "title": "ED25519Signature2018"
                        },
                        "name": {
                          "type": "string",
                          "example": "Course credential",
                          "description": "Name of the credential (requires v2 data model)"
                        },
                        "description": {
                          "type": "string",
                          "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                          "description": "Description of the credential (requires v2 data model)"
                        }
                      },
                      "required": [
                        "@context",
                        "type",
                        "issuanceDate",
                        "credentialSubject",
                        "proof"
                      ],
                      "title": "VerifiableCredential"
                    }
                  },
                  "challenge": {
                    "type": "string",
                    "example": "e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60",
                    "format": "uuid"
                  }
                },
                "required": [
                  "domain",
                  "holderDidUrl",
                  "challenge"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Presentations"
        ],
        "responses": {
          "201": {
            "description": "Presentation created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {},
                  "title": "VerifiablePresentation",
                  "properties": {
                    "presentation": {
                      "type": "object",
                      "required": [
                        "@context",
                        "type",
                        "verifiableCredential",
                        "id",
                        "holder",
                        "proof"
                      ],
                      "properties": {
                        "@context": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "type": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "verifiableCredential": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "@context": {
                                "type": "array",
                                "example": [
                                  "https://www.w3.org/2018/credentials/v1",
                                  "https://www.w3.org/2018/credentials/examples/v1"
                                ],
                                "items": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                                }
                              },
                              "type": {
                                "type": "array",
                                "example": [
                                  "VerifiableCredential",
                                  "AlumniCredential"
                                ],
                                "items": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "\"AlumniCredential\", \"VerifiableCredential\""
                                }
                              },
                              "issuer": {
                                "description": "Includes issuer id (did) and its domain (inside name parameter)",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Example University"
                                      }
                                    }
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "issuanceDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-05-02T12:06:29.156Z"
                              },
                              "credentialStatus": {
                                "type": "object",
                                "description": "Credential status location information",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique ID for the credential status",
                                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates that the status contains revocation information",
                                    "example": "RevocationList2020Status"
                                  },
                                  "revocationListIndex": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The location within the revocation list for the credential"
                                  },
                                  "revocationListCredential": {
                                    "type": "string",
                                    "description": "The location of the revocation list",
                                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                                  }
                                },
                                "title": "CredentialStatus"
                              },
                              "credentialSubject": {
                                "type": "object",
                                "example": {
                                  "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                                  "givenName": "Jamie",
                                  "familyName": "Doe"
                                },
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                                  },
                                  "givenName": {
                                    "type": "string",
                                    "example": "Jamie"
                                  },
                                  "familyName": {
                                    "type": "string",
                                    "example": "Doe"
                                  },
                                  "alumniOf": {
                                    "type": "string",
                                    "example": "Example University"
                                  }
                                }
                              },
                              "proof": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "Ed25519Signature2018"
                                  },
                                  "created": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2020-05-02T12:06:29Z"
                                  },
                                  "jws": {
                                    "type": "string",
                                    "description": "Compact form of JWS",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                  },
                                  "proofPurpose": {
                                    "type": "string",
                                    "example": "assertionMethod"
                                  },
                                  "verificationMethod": {
                                    "type": "string",
                                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                  }
                                },
                                "title": "ED25519Signature2018"
                              },
                              "name": {
                                "type": "string",
                                "example": "Course credential",
                                "description": "Name of the credential (requires v2 data model)"
                              },
                              "description": {
                                "type": "string",
                                "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                                "description": "Description of the credential (requires v2 data model)"
                              }
                            },
                            "required": [
                              "@context",
                              "type",
                              "issuanceDate",
                              "credentialSubject",
                              "proof"
                            ],
                            "title": "VerifiableCredential"
                          }
                        },
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "holder": {
                          "type": "string",
                          "minLength": 1
                        },
                        "proof": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "minLength": 1
                              },
                              "created": {
                                "type": "string",
                                "minLength": 1
                              },
                              "challenge": {
                                "type": "string",
                                "minLength": 1
                              },
                              "domain": {
                                "type": "string",
                                "minLength": 1
                              },
                              "jws": {
                                "type": "string",
                                "minLength": 1
                              },
                              "proofPurpose": {
                                "type": "string",
                                "minLength": 1
                              },
                              "verificationMethod": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "type",
                              "created",
                              "challenge",
                              "domain",
                              "jws",
                              "proofPurpose",
                              "verificationMethod"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "presentation"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "DID not owned by tenant": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Failed to sign presentation, signing DID not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/core/v1/presentations/verify": {
      "post": {
        "summary": "Verify a presentation",
        "operationId": "verifyPres",
        "responses": {
          "200": {
            "description": "Verify checks performed",
            "content": {
              "application/json": {
                "schema": {
                  "title": "VerifyPresentation",
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "verified"
                  ]
                },
                "examples": {
                  "Verified": {
                    "value": {
                      "verified": true
                    }
                  },
                  "Invalid": {
                    "value": {
                      "verified": false,
                      "reason": "Credential is invalid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "msg": "Invalid value",
                          "param": "presentation.proof",
                          "location": "body"
                        },
                        {
                          "msg": "Invalid value",
                          "param": "presentation.@context",
                          "location": "body"
                        },
                        {
                          "msg": "Invalid value",
                          "param": "presentation.type",
                          "location": "body"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Presentations"
        ],
        "description": "Use this endpoint to verify a Verifiable Presentation that has been generated by any platform that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations).\n\nProvide a `presentation` in the Request\n\nThe platform will perform these checks:\n\nEnsures the presentation conforms to the VC Data model\nFor each `verifiableCredential` objects;\n- Issuer DID can be resolved\n- JSON-LD context is valid for subject claims\n- Proof is valid & the credential has not been tampered with\n- Is not in a revoked status on a RevocationList2020\n- The proof is valid for each subjectDID to prove ownership\nFinally, a proof is valid for the holderDID for the Presentation\n\n### Response\n\nIf all checks are passed then the `verified` boolean is `true`\nOtherwise it returns `false` with a basic `reason`\n\n> Further detailed reasons for verified false responses is a future roadmap item.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {},
                "title": "VerifiablePresentation",
                "properties": {
                  "presentation": {
                    "type": "object",
                    "required": [
                      "@context",
                      "type",
                      "verifiableCredential",
                      "id",
                      "holder",
                      "proof"
                    ],
                    "properties": {
                      "@context": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "verifiableCredential": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "@context": {
                              "type": "array",
                              "example": [
                                "https://www.w3.org/2018/credentials/v1",
                                "https://www.w3.org/2018/credentials/examples/v1"
                              ],
                              "items": {
                                "type": "string",
                                "minLength": 1,
                                "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                              }
                            },
                            "type": {
                              "type": "array",
                              "example": [
                                "VerifiableCredential",
                                "AlumniCredential"
                              ],
                              "items": {
                                "type": "string",
                                "minLength": 1,
                                "example": "\"AlumniCredential\", \"VerifiableCredential\""
                              }
                            },
                            "issuer": {
                              "description": "Includes issuer id (did) and its domain (inside name parameter)",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Example University"
                                    }
                                  }
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "issuanceDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-05-02T12:06:29.156Z"
                            },
                            "credentialStatus": {
                              "type": "object",
                              "description": "Credential status location information",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique ID for the credential status",
                                  "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Indicates that the status contains revocation information",
                                  "example": "RevocationList2020Status"
                                },
                                "revocationListIndex": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "The location within the revocation list for the credential"
                                },
                                "revocationListCredential": {
                                  "type": "string",
                                  "description": "The location of the revocation list",
                                  "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                                }
                              },
                              "title": "CredentialStatus"
                            },
                            "credentialSubject": {
                              "type": "object",
                              "example": {
                                "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                                "givenName": "Jamie",
                                "familyName": "Doe"
                              },
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                                },
                                "givenName": {
                                  "type": "string",
                                  "example": "Jamie"
                                },
                                "familyName": {
                                  "type": "string",
                                  "example": "Doe"
                                },
                                "alumniOf": {
                                  "type": "string",
                                  "example": "Example University"
                                }
                              }
                            },
                            "proof": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "Ed25519Signature2018"
                                },
                                "created": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2020-05-02T12:06:29Z"
                                },
                                "jws": {
                                  "type": "string",
                                  "description": "Compact form of JWS",
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                },
                                "proofPurpose": {
                                  "type": "string",
                                  "example": "assertionMethod"
                                },
                                "verificationMethod": {
                                  "type": "string",
                                  "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                                }
                              },
                              "title": "ED25519Signature2018"
                            },
                            "name": {
                              "type": "string",
                              "example": "Course credential",
                              "description": "Name of the credential (requires v2 data model)"
                            },
                            "description": {
                              "type": "string",
                              "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                              "description": "Description of the credential (requires v2 data model)"
                            }
                          },
                          "required": [
                            "@context",
                            "type",
                            "issuanceDate",
                            "credentialSubject",
                            "proof"
                          ],
                          "title": "VerifiableCredential"
                        }
                      },
                      "id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "holder": {
                        "type": "string",
                        "minLength": 1
                      },
                      "proof": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "minLength": 1
                            },
                            "created": {
                              "type": "string",
                              "minLength": 1
                            },
                            "challenge": {
                              "type": "string",
                              "minLength": 1
                            },
                            "domain": {
                              "type": "string",
                              "minLength": 1
                            },
                            "jws": {
                              "type": "string",
                              "minLength": 1
                            },
                            "proofPurpose": {
                              "type": "string",
                              "minLength": 1
                            },
                            "verificationMethod": {
                              "type": "string",
                              "minLength": 1
                            }
                          },
                          "required": [
                            "type",
                            "created",
                            "challenge",
                            "domain",
                            "jws",
                            "proofPurpose",
                            "verificationMethod"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "presentation"
                ]
              }
            }
          },
          "description": "Presentation to verify"
        }
      },
      "parameters": []
    },
    "/ext/dcc/v1/documentsigners": {
      "post": {
        "tags": [
          "DCC Document Signers"
        ],
        "summary": "Create a Document Signer",
        "description": "Creates a document signer to represent an entity that is authorised to sign a Digital Covid Certificate payload.\nThe document signer is initially created as a self-signed certificate that can be updated after creation to be associated to a Country Signing Certification Authority (CSCA).\n\nThe self-signed certificate can be used to sign a DCC for testing purposes without the associated to a CSCA.\nHowever, to fit within the trust framework outlined for the EUDCC, the document signer should be chained to a CSCA.\nThis can be achieved by providing the `publicKey` and/or `certificatePem` to a CSCA to chain together and provide back a `certificatePem` that can then be updated against the created `documentSigner`.\n\nThere must be at least one document signer created to allow for a DCC to be signed through the `sign` API endpoint.\n",
        "responses": {
          "201": {
            "description": "Document Signer Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DocumentSigner",
                  "type": "object",
                  "description": "",
                  "x-examples": {},
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                      "description": "PEM encoded X.509 certificate"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    },
                    "publicKey": {
                      "title": "DocumentSignerPublicKey",
                      "type": "object",
                      "properties": {
                        "kty": {
                          "type": "string",
                          "example": "EC"
                        },
                        "crv": {
                          "type": "string",
                          "example": "P-256"
                        },
                        "x": {
                          "type": "string",
                          "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
                        },
                        "y": {
                          "type": "string",
                          "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "createDocumentSigner"
      },
      "get": {
        "tags": [
          "DCC Document Signers"
        ],
        "summary": "Retrieve list of Document Signers",
        "description": "Retrieves a list of document signers which have been added through the DCC extension and are available for use when signing a Digital Covid Certificate (DCC) via the `sign` API endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of the list, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the list"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of document signers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "DocumentSigner",
                        "type": "object",
                        "description": "",
                        "x-examples": {},
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                          },
                          "certificateKid": {
                            "type": "string",
                            "example": "a2c5ab3515c03fa4"
                          },
                          "certificateFingeprint": {
                            "type": "string",
                            "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                          },
                          "certificatePem": {
                            "type": "string",
                            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                            "description": "PEM encoded X.509 certificate"
                          },
                          "certificateData": {
                            "title": "DocumentSignerMetadata",
                            "type": "object",
                            "properties": {
                              "notBefore": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "notAfter": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "keyUsage": {
                                "title": "DocumentSignerMetadataKeyUsage",
                                "type": "object",
                                "properties": {
                                  "vaccination": {
                                    "type": "boolean"
                                  },
                                  "test": {
                                    "type": "boolean"
                                  },
                                  "recovery": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "country": {
                                "type": "string",
                                "example": "NZ"
                              }
                            }
                          },
                          "publicKey": {
                            "title": "DocumentSignerPublicKey",
                            "type": "object",
                            "properties": {
                              "kty": {
                                "type": "string",
                                "example": "EC"
                              },
                              "crv": {
                                "type": "string",
                                "example": "P-256"
                              },
                              "x": {
                                "type": "string",
                                "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
                              },
                              "y": {
                                "type": "string",
                                "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
                              }
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveDocumentSigners"
      }
    },
    "/ext/dcc/v1/documentsigners/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Document Signer Id"
        }
      ],
      "get": {
        "tags": [
          "DCC Document Signers"
        ],
        "summary": "Retrieve a Document Signer by ID",
        "description": "Get a document signer by `id`",
        "responses": {
          "200": {
            "description": "A document signer along with the associated signing certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DocumentSigner",
                  "type": "object",
                  "description": "",
                  "x-examples": {},
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                      "description": "PEM encoded X.509 certificate"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    },
                    "publicKey": {
                      "title": "DocumentSignerPublicKey",
                      "type": "object",
                      "properties": {
                        "kty": {
                          "type": "string",
                          "example": "EC"
                        },
                        "crv": {
                          "type": "string",
                          "example": "P-256"
                        },
                        "x": {
                          "type": "string",
                          "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
                        },
                        "y": {
                          "type": "string",
                          "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "retrieveDocumentSignerByID"
      },
      "delete": {
        "tags": [
          "DCC Document Signers"
        ],
        "summary": "Delete a Document Signer by ID",
        "responses": {
          "204": {
            "description": "Document signer deleted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "deleteDocumentSigner",
        "description": "Remove a document signer by `id`"
      },
      "put": {
        "tags": [
          "DCC Document Signers"
        ],
        "summary": "Update a Document Signer",
        "description": "Update a document signer by `id` with a new or replacement `certificatePem` that represents the trusted chain between the document signer and root certificate of the associated CSCA.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "DocumentSigner",
                "type": "object",
                "description": "",
                "x-examples": {},
                "properties": {
                  "certificatePem": {
                    "type": "string",
                    "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                    "description": "PEM encoded X.509 certificate"
                  }
                }
              },
              "examples": {
                "Update Document Signer": {
                  "value": {
                    "certificatePem": "-----BEGIN CERTIFICATE-----\\r\\nMIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV\\r\\nBAMeCgBNAGEAdAB0AHIwHhcNMjEwOTE2MDMyNDM4WhcNMjMwOTE2MDMyNDM4WjAg\\r\\nMR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq\\r\\nhkjOPQMBBwNCAAQJJy6qRSK7P7m15b+zckhLGCfkrh4VcldVP44q3SDAxhWKxETa\\r\\n9Gw5JDjQi8AM8LPbAR7/wM4pS9UkQvuKbkM0o0gwRjASBgNVHRMBAf8ECDAGAQH/\\r\\nAgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQECBgsrBgEEAY43j2UBAQYLKwYBBAGO\\r\\nN49lAQMwCgYIKoZIzj0EAwIDRwAwRAIgHs8ZpdsdcQSAjN5sN+4JR0fCUilD+N25\\r\\nC1w+VYiRiDICIHxfjxu99xhQe74cY9OdS19k1iwM99g8ivWuNPHZvoVv\\r\\n-----END CERTIFICATE-----\\r\\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document Signer Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DocumentSigner",
                  "type": "object",
                  "description": "",
                  "x-examples": {},
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                      "description": "PEM encoded X.509 certificate"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    },
                    "publicKey": {
                      "title": "DocumentSignerPublicKey",
                      "type": "object",
                      "properties": {
                        "kty": {
                          "type": "string",
                          "example": "EC"
                        },
                        "crv": {
                          "type": "string",
                          "example": "P-256"
                        },
                        "x": {
                          "type": "string",
                          "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
                        },
                        "y": {
                          "type": "string",
                          "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "updateDocumentSigner"
      }
    },
    "/ext/dcc/v1/trusteddocumentsigners": {
      "post": {
        "tags": [
          "DCC Trusted Document Signers"
        ],
        "summary": "Import an new Trusted Document Signer",
        "description": "Creates a trusted document signer from the provided PEM certificate that has been issued by a CSCA (or similar authority) to represent an entity that is authorised to sign a Digital Covid Certificate payload.\n\nThe `certificatePem`, must be an encoded X.509 certificate for it to be accepted.\n\nFor a DCC to be considered verified through the `verify` endpoint, the document signer that issued the DCC needs to be registered as a trusted issuer.\n\nA certificate that has been utilised by a `sign` operation will automatically be imported as a trust document signer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "DocumentSigner",
                "type": "object",
                "description": "",
                "x-examples": {},
                "properties": {
                  "certificatePem": {
                    "type": "string",
                    "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
                    "description": "PEM encoded X.509 certificate"
                  },
                  "public": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "certificatePem",
                  "public"
                ]
              },
              "examples": {
                "Import Trusted Document Signer": {
                  "value": {
                    "certificatePem": "-----BEGIN CERTIFICATE-----\\r\\nMIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV\\r\\nBAMeCgBNAGEAdAB0AHIwHhcNMjEwOTE2MDMyNDM4WhcNMjMwOTE2MDMyNDM4WjAg\\r\\nMR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq\\r\\nhkjOPQMBBwNCAAQJJy6qRSK7P7m15b+zckhLGCfkrh4VcldVP44q3SDAxhWKxETa\\r\\n9Gw5JDjQi8AM8LPbAR7/wM4pS9UkQvuKbkM0o0gwRjASBgNVHRMBAf8ECDAGAQH/\\r\\nAgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQECBgsrBgEEAY43j2UBAQYLKwYBBAGO\\r\\nN49lAQMwCgYIKoZIzj0EAwIDRwAwRAIgHs8ZpdsdcQSAjN5sN+4JR0fCUilD+N25\\r\\nC1w+VYiRiDICIHxfjxu99xhQe74cY9OdS19k1iwM99g8ivWuNPHZvoVv\\r\\n-----END CERTIFICATE-----\\r\\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Trusted Document Signer Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TrustedDocumentSigner",
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "description": "PEM encoded X.509 certificate",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----END CERTIFICATE-----"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "addTrustedDocumentSigner"
      },
      "get": {
        "tags": [
          "DCC Trusted Document Signers"
        ],
        "summary": "Retrieve list of Trusted Document Signers",
        "description": "Retrieves a list of trusted document signers which have been added through the DCC extension and are available and trusted as valid certificate signers when verifying a Digital Covid Certificate (DCC) via the `verify` API endpoint.",
        "parameters": [
          {
            "name": "kid",
            "in": "query",
            "description": "Filter by certificate kid",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "number",
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Range size of the list, default 100"
          },
          {
            "schema": {
              "type": "string",
              "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
            },
            "in": "query",
            "name": "cursor",
            "description": "Starting point for the list"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of trusted document signers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "TrustedDocumentSigner",
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "certificateKid": {
                            "type": "string",
                            "example": "a2c5ab3515c03fa4"
                          },
                          "certificateFingeprint": {
                            "type": "string",
                            "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                          },
                          "certificatePem": {
                            "type": "string",
                            "description": "PEM encoded X.509 certificate",
                            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----END CERTIFICATE-----"
                          },
                          "certificateData": {
                            "title": "DocumentSignerMetadata",
                            "type": "object",
                            "properties": {
                              "notBefore": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "notAfter": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "keyUsage": {
                                "title": "DocumentSignerMetadataKeyUsage",
                                "type": "object",
                                "properties": {
                                  "vaccination": {
                                    "type": "boolean"
                                  },
                                  "test": {
                                    "type": "boolean"
                                  },
                                  "recovery": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "country": {
                                "type": "string",
                                "example": "NZ"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveTrustedDocumentSigners"
      }
    },
    "/ext/dcc/v1/trusteddocumentsigners/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Trusted Document Signer ID"
        }
      ],
      "get": {
        "tags": [
          "DCC Trusted Document Signers"
        ],
        "summary": "Get a Trusted Document Signer by id",
        "description": "Get a trusted document signer by `id`",
        "responses": {
          "200": {
            "description": "The `certificatePem` and a `id` for the requested trusted document signer.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TrustedDocumentSigner",
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "description": "PEM encoded X.509 certificate",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----END CERTIFICATE-----"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieveTrustedDocumentSignersByID"
      },
      "delete": {
        "tags": [
          "DCC Trusted Document Signers"
        ],
        "summary": "Delete a Trusted Document Signer by ID",
        "description": "Delete a trusted document signer by `id`",
        "responses": {
          "204": {
            "description": "Trusted document signer deleted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteTrustedDocumentSigner"
      },
      "put": {
        "tags": [
          "DCC Trusted Document Signers"
        ],
        "summary": "Update a Trusted Document Signer",
        "description": "Update a trusted document signer's `public` property to indicate this document signers public key can be included in the list of document signers returned via a `dccgateway` endpoint, for external relying parties/verifiers to utilise.\n\nPlease note that this method may not be available on your tenant as it is dependent on MATTR VII environment configuration.",
        "responses": {
          "200": {
            "description": "Trusted Document Signer Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TrustedDocumentSigner",
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "certificateKid": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa4"
                    },
                    "certificateFingeprint": {
                      "type": "string",
                      "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
                    },
                    "certificatePem": {
                      "type": "string",
                      "description": "PEM encoded X.509 certificate",
                      "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----END CERTIFICATE-----"
                    },
                    "certificateData": {
                      "title": "DocumentSignerMetadata",
                      "type": "object",
                      "properties": {
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "keyUsage": {
                          "title": "DocumentSignerMetadataKeyUsage",
                          "type": "object",
                          "properties": {
                            "vaccination": {
                              "type": "boolean"
                            },
                            "test": {
                              "type": "boolean"
                            },
                            "recovery": {
                              "type": "boolean"
                            }
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "NZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "DocumentSigner",
                "type": "object",
                "description": "",
                "x-examples": {},
                "properties": {
                  "public": {
                    "type": "boolean"
                  }
                }
              },
              "examples": {
                "Update Trusted Document Signer": {
                  "value": {
                    "public": true
                  }
                }
              }
            }
          }
        },
        "operationId": "updateTrustedDocumentSigner"
      }
    },
    "/ext/dcc/v1/sign": {
      "post": {
        "requestBody": {
          "description": "DCC payload to sign",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "SignDCCRequest",
                "type": "object",
                "required": [
                  "payload"
                ],
                "properties": {
                  "expiry": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Note - this field is optional and if not supplied MATTR VII will use the default expiry which is 1 year as recommended by the DCC specification"
                  },
                  "documentSignerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Note - this field is optional and if not supplied, MATTR VII will attempt to automatically decide which document signer to use."
                  },
                  "payload": {
                    "title": "DigitalCovidCertificateWithoutCertificateId",
                    "type": "object",
                    "required": [
                      "ver",
                      "nam",
                      "dob"
                    ],
                    "properties": {
                      "ver": {
                        "type": "string",
                        "enum": [
                          "1.3.0"
                        ],
                        "description": "Schema version of the DCC payload to use, only latest released version is supported"
                      },
                      "nam": {
                        "title": "DigitalCovidCertificateName",
                        "type": "object",
                        "required": [
                          "fnt"
                        ],
                        "properties": {
                          "fn": {
                            "type": "string",
                            "example": "Musterfrau-Gößinger",
                            "description": "Surname"
                          },
                          "fnt": {
                            "type": "string",
                            "example": "MUSTERFRAU<GOESSINGER",
                            "description": "Standardized Surname"
                          },
                          "gn": {
                            "type": "string",
                            "example": "Gabriele",
                            "description": "Forename"
                          },
                          "gnt": {
                            "type": "string",
                            "example": "GABRIELE",
                            "description": "Standardized Forename"
                          }
                        }
                      },
                      "dob": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Birth",
                        "example": "1979-04-14"
                      },
                      "v": {
                        "type": "array",
                        "description": "Vaccination Group",
                        "items": {
                          "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                          "type": "object",
                          "required": [
                            "tg",
                            "vp",
                            "mp",
                            "ma",
                            "dn",
                            "sd",
                            "dt",
                            "co",
                            "is"
                          ],
                          "properties": {
                            "tg": {
                              "type": "string",
                              "example": "840539006",
                              "description": "Disease Targeted"
                            },
                            "vp": {
                              "type": "string",
                              "example": "1119349007",
                              "description": "Vaccine"
                            },
                            "mp": {
                              "type": "string",
                              "example": "EU/1/20/1528",
                              "description": "Vaccine Medicinal Product"
                            },
                            "ma": {
                              "type": "string",
                              "example": "ORG-100030215",
                              "description": "Market Authorization Holder"
                            },
                            "dn": {
                              "type": "number",
                              "example": 1,
                              "description": "Dose Number"
                            },
                            "sd": {
                              "type": "number",
                              "example": 2,
                              "description": "Total Series of Doses"
                            },
                            "dt": {
                              "type": "string",
                              "format": "date",
                              "example": "2021-02-18",
                              "description": "Date Administered ISO8601"
                            },
                            "co": {
                              "type": "string",
                              "example": "NZ",
                              "description": "Country of adminisration"
                            },
                            "is": {
                              "type": "string",
                              "example": "Kakapo Health",
                              "description": "Issuer"
                            }
                          }
                        },
                        "minItems": 1,
                        "maxItems": 1
                      },
                      "t": {
                        "type": "array",
                        "description": "Test Group",
                        "items": {
                          "title": "DigitalCovidCertificateTestWithoutCertificateId",
                          "type": "object",
                          "required": [
                            "tg",
                            "tt",
                            "sc",
                            "tr",
                            "co",
                            "is"
                          ],
                          "properties": {
                            "tg": {
                              "type": "string",
                              "example": "840539006",
                              "description": "Disease Targeted"
                            },
                            "tt": {
                              "type": "string",
                              "example": "LP6464-4",
                              "description": "Type of test"
                            },
                            "nm": {
                              "type": "string",
                              "example": "Roche LightCycler qPCR",
                              "description": "NAA Test Name"
                            },
                            "ma": {
                              "type": "string",
                              "description": "RAT Test name and manufacturer"
                            },
                            "sc": {
                              "type": "string",
                              "description": "Date/Time of Sample Collection",
                              "format": "date-time"
                            },
                            "tr": {
                              "type": "string",
                              "description": "Test result"
                            },
                            "tc": {
                              "type": "string",
                              "description": " Testing Centre"
                            },
                            "co": {
                              "type": "string",
                              "description": "Country of test"
                            },
                            "is": {
                              "type": "string",
                              "description": "Certificate Issuer"
                            }
                          }
                        },
                        "minItems": 1,
                        "maxItems": 1
                      },
                      "r": {
                        "type": "array",
                        "description": "Recovery Group",
                        "items": {
                          "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                          "type": "object",
                          "required": [
                            "tg",
                            "fr",
                            "co",
                            "is",
                            "df",
                            "du"
                          ],
                          "properties": {
                            "tg": {
                              "type": "string",
                              "example": "840539006",
                              "description": "Disease Targeted"
                            },
                            "fr": {
                              "type": "string",
                              "format": "date",
                              "example": "2021-02-18",
                              "description": "Complete date of first positive NAA test result"
                            },
                            "co": {
                              "type": "string",
                              "description": "Country of test"
                            },
                            "is": {
                              "type": "string",
                              "description": "Certificate Issuer"
                            },
                            "df": {
                              "type": "string",
                              "format": "date",
                              "example": "2021-02-18",
                              "description": "Certificate valid from"
                            },
                            "du": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-02-18",
                              "description": "Certificate valid until"
                            }
                          }
                        },
                        "minItems": 1,
                        "maxItems": 1
                      }
                    }
                  },
                  "metadata": {
                    "description": "Note - this field is an optional (string, string) map of metadata",
                    "type": "object",
                    "additionalProperties": {
                      "example": "...",
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "VaccineCertificate": {
                  "value": {
                    "payload": {
                      "ver": "1.3.0",
                      "nam": {
                        "fn": "Musterfrau-Gößinger",
                        "fnt": "MUSTERFRAU<GOESSINGER",
                        "gn": "Gabriele",
                        "gnt": "GABRIELE"
                      },
                      "dob": "1998-02-26",
                      "v": [
                        {
                          "tg": "840539006",
                          "vp": "1119349007",
                          "mp": "EU/1/20/1528",
                          "ma": "ORG-100030215",
                          "dn": 1,
                          "sd": 2,
                          "dt": "2021-02-18",
                          "co": "NZ",
                          "is": "Kakapo Health, NZ"
                        }
                      ]
                    },
                    "metadata": {
                      "exampleEternalId": "123"
                    }
                  }
                },
                "TestCertificate": {
                  "value": {
                    "payload": {
                      "ver": "1.3.0",
                      "nam": {
                        "fn": "Musterfrau-Gößinger",
                        "fnt": "MUSTERFRAU<GOESSINGER",
                        "gn": "Gabriele",
                        "gnt": "GABRIELE"
                      },
                      "dob": "1998-02-26",
                      "t": [
                        {
                          "tg": "840539006",
                          "tt": "LP6464-4",
                          "nm": "Roche LightCycler qPCR",
                          "sc": "2021-02-20T12:34:56Z",
                          "tr": "260415000",
                          "tc": "Testing center 1",
                          "co": "NZ",
                          "is": "Kakapo Health, NZ"
                        }
                      ]
                    },
                    "metadata": {
                      "exampleExternalId": "123"
                    }
                  }
                },
                "RecoveryCertificate": {
                  "value": {
                    "payload": {
                      "ver": "1.3.0",
                      "nam": {
                        "fn": "Musterfrau-Gößinger",
                        "fnt": "MUSTERFRAU<GOESSINGER",
                        "gn": "Gabriele",
                        "gnt": "GABRIELE"
                      },
                      "dob": "1998-02-26",
                      "r": [
                        {
                          "tg": "840539006",
                          "fr": "2021-02-20",
                          "co": "NZ",
                          "is": "Kakapo Health, NZ",
                          "df": "2021-02-20",
                          "du": "2022-02-20"
                        }
                      ]
                    },
                    "metadata": {
                      "exampleExternalId": "123"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "DCC Sign"
        ],
        "summary": "Sign a Digital Covid Certificate",
        "description": "Creates a signed DCC (Digital Covid Certificate) using either the specified document signer or selected default (if one isn't provided in the request payload).\n\nIf supplied, `documentSignerId` must be a valid UUID for a document signer set up under the `documentsigners` endpoint.\n\nAn `expiry` value can also be supplied specify to the expiration of the signed payload. If not provided, the sign operation will default the expiry to be one year from the current date - as recommended under the specification.\n\nThe `payload` should conform with the JSON schema outlined in the [EUDCC specification](https://github.com/ehn-dcc-development/ehn-dcc-schema).\n\nThe `payload.[v|r|t]` should be an array with only one item, and only one of the field `[v|r|t]` is supported at the same time, it depends on the type of certificate.\n\nThe `payload.[v|r|t][0].ci` value will be automatically generated. If supplied an `400 Bad Request` response will be returned.\n\nThe `metadata` is an optional map of key value pairs (string, string).\n\nValidation will be performed as part of this operation to ensure the payload is valid against the schema specified under the `payload.ver` in the request.\n",
        "responses": {
          "200": {
            "description": "The signed DCC will be returned as a `base45` encoded string",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SignDCCResponse",
                  "type": "object",
                  "required": [
                    "payload"
                  ],
                  "properties": {
                    "metadata": {
                      "title": "SignDCCMetadataResponse",
                      "type": "object",
                      "required": [
                        "issuedAt",
                        "expiry"
                      ],
                      "properties": {
                        "expiry": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "issuedAt": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "documentSignerId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "certificateId": {
                          "description": "Generated certificate identifier, format as per UVCI",
                          "type": "string",
                          "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                        }
                      }
                    },
                    "payload": {
                      "type": "string",
                      "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81",
                      "description": "Base 45 DCC string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to sign DCC, invalid schema, issuer not found, user defined value is not supported, this value will be generated etc",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "signDCC"
      }
    },
    "/ext/dcc/v1/verify": {
      "post": {
        "requestBody": {
          "description": "The signed DCC represented as `base45` encoded string",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "VerifyDCCRequest",
                "type": "object",
                "required": [
                  "payload"
                ],
                "properties": {
                  "payload": {
                    "type": "string",
                    "description": "Base45 encoded DCC",
                    "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DCC Verify"
        ],
        "summary": "Verify a Digital Covid Certificate",
        "description": "Verify a Digital Covid Certificate (DCC) from the provided `base45` encoded string provided to the `payload` of the request.",
        "responses": {
          "200": {
            "description": "Digital Covid Certificate verification response that shows the `verified` status of the certificate along with the decoded `payload`.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "VerifyDCCResponse",
                  "type": "object",
                  "required": [
                    "verified"
                  ],
                  "properties": {
                    "verified": {
                      "type": "boolean"
                    },
                    "payload": {
                      "allOf": [
                        {
                          "title": "DigitalCovidCertificateWithoutCertificateId",
                          "type": "object",
                          "required": [
                            "ver",
                            "nam",
                            "dob"
                          ],
                          "properties": {
                            "ver": {
                              "type": "string",
                              "enum": [
                                "1.3.0"
                              ],
                              "description": "Schema version of the DCC payload to use, only latest released version is supported"
                            },
                            "nam": {
                              "title": "DigitalCovidCertificateName",
                              "type": "object",
                              "required": [
                                "fnt"
                              ],
                              "properties": {
                                "fn": {
                                  "type": "string",
                                  "example": "Musterfrau-Gößinger",
                                  "description": "Surname"
                                },
                                "fnt": {
                                  "type": "string",
                                  "example": "MUSTERFRAU<GOESSINGER",
                                  "description": "Standardized Surname"
                                },
                                "gn": {
                                  "type": "string",
                                  "example": "Gabriele",
                                  "description": "Forename"
                                },
                                "gnt": {
                                  "type": "string",
                                  "example": "GABRIELE",
                                  "description": "Standardized Forename"
                                }
                              }
                            },
                            "dob": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of Birth",
                              "example": "1979-04-14"
                            },
                            "v": {
                              "type": "array",
                              "description": "Vaccination Group",
                              "items": {
                                "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "vp",
                                  "mp",
                                  "ma",
                                  "dn",
                                  "sd",
                                  "dt",
                                  "co",
                                  "is"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "vp": {
                                    "type": "string",
                                    "example": "1119349007",
                                    "description": "Vaccine"
                                  },
                                  "mp": {
                                    "type": "string",
                                    "example": "EU/1/20/1528",
                                    "description": "Vaccine Medicinal Product"
                                  },
                                  "ma": {
                                    "type": "string",
                                    "example": "ORG-100030215",
                                    "description": "Market Authorization Holder"
                                  },
                                  "dn": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Dose Number"
                                  },
                                  "sd": {
                                    "type": "number",
                                    "example": 2,
                                    "description": "Total Series of Doses"
                                  },
                                  "dt": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Date Administered ISO8601"
                                  },
                                  "co": {
                                    "type": "string",
                                    "example": "NZ",
                                    "description": "Country of adminisration"
                                  },
                                  "is": {
                                    "type": "string",
                                    "example": "Kakapo Health",
                                    "description": "Issuer"
                                  }
                                }
                              },
                              "minItems": 1,
                              "maxItems": 1
                            },
                            "t": {
                              "type": "array",
                              "description": "Test Group",
                              "items": {
                                "title": "DigitalCovidCertificateTestWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "tt",
                                  "sc",
                                  "tr",
                                  "co",
                                  "is"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "tt": {
                                    "type": "string",
                                    "example": "LP6464-4",
                                    "description": "Type of test"
                                  },
                                  "nm": {
                                    "type": "string",
                                    "example": "Roche LightCycler qPCR",
                                    "description": "NAA Test Name"
                                  },
                                  "ma": {
                                    "type": "string",
                                    "description": "RAT Test name and manufacturer"
                                  },
                                  "sc": {
                                    "type": "string",
                                    "description": "Date/Time of Sample Collection",
                                    "format": "date-time"
                                  },
                                  "tr": {
                                    "type": "string",
                                    "description": "Test result"
                                  },
                                  "tc": {
                                    "type": "string",
                                    "description": " Testing Centre"
                                  },
                                  "co": {
                                    "type": "string",
                                    "description": "Country of test"
                                  },
                                  "is": {
                                    "type": "string",
                                    "description": "Certificate Issuer"
                                  }
                                }
                              },
                              "minItems": 1,
                              "maxItems": 1
                            },
                            "r": {
                              "type": "array",
                              "description": "Recovery Group",
                              "items": {
                                "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "fr",
                                  "co",
                                  "is",
                                  "df",
                                  "du"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "fr": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Complete date of first positive NAA test result"
                                  },
                                  "co": {
                                    "type": "string",
                                    "description": "Country of test"
                                  },
                                  "is": {
                                    "type": "string",
                                    "description": "Certificate Issuer"
                                  },
                                  "df": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Certificate valid from"
                                  },
                                  "du": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2022-02-18",
                                    "description": "Certificate valid until"
                                  }
                                }
                              },
                              "minItems": 1,
                              "maxItems": 1
                            }
                          }
                        }
                      ],
                      "title": "DigitalCovidCertificate",
                      "properties": {
                        "v": {
                          "items": {
                            "allOf": [
                              {
                                "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "vp",
                                  "mp",
                                  "ma",
                                  "dn",
                                  "sd",
                                  "dt",
                                  "co",
                                  "is"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "vp": {
                                    "type": "string",
                                    "example": "1119349007",
                                    "description": "Vaccine"
                                  },
                                  "mp": {
                                    "type": "string",
                                    "example": "EU/1/20/1528",
                                    "description": "Vaccine Medicinal Product"
                                  },
                                  "ma": {
                                    "type": "string",
                                    "example": "ORG-100030215",
                                    "description": "Market Authorization Holder"
                                  },
                                  "dn": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Dose Number"
                                  },
                                  "sd": {
                                    "type": "number",
                                    "example": 2,
                                    "description": "Total Series of Doses"
                                  },
                                  "dt": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Date Administered ISO8601"
                                  },
                                  "co": {
                                    "type": "string",
                                    "example": "NZ",
                                    "description": "Country of adminisration"
                                  },
                                  "is": {
                                    "type": "string",
                                    "example": "Kakapo Health",
                                    "description": "Issuer"
                                  }
                                }
                              }
                            ],
                            "title": "DigitalCovidCertificateVaccine",
                            "required": [
                              "ci"
                            ],
                            "properties": {
                              "ci": {
                                "type": "string",
                                "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                                "description": "Certificate Identifier"
                              }
                            }
                          }
                        },
                        "t": {
                          "items": {
                            "allOf": [
                              {
                                "title": "DigitalCovidCertificateTestWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "tt",
                                  "sc",
                                  "tr",
                                  "co",
                                  "is"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "tt": {
                                    "type": "string",
                                    "example": "LP6464-4",
                                    "description": "Type of test"
                                  },
                                  "nm": {
                                    "type": "string",
                                    "example": "Roche LightCycler qPCR",
                                    "description": "NAA Test Name"
                                  },
                                  "ma": {
                                    "type": "string",
                                    "description": "RAT Test name and manufacturer"
                                  },
                                  "sc": {
                                    "type": "string",
                                    "description": "Date/Time of Sample Collection",
                                    "format": "date-time"
                                  },
                                  "tr": {
                                    "type": "string",
                                    "description": "Test result"
                                  },
                                  "tc": {
                                    "type": "string",
                                    "description": " Testing Centre"
                                  },
                                  "co": {
                                    "type": "string",
                                    "description": "Country of test"
                                  },
                                  "is": {
                                    "type": "string",
                                    "description": "Certificate Issuer"
                                  }
                                }
                              }
                            ],
                            "title": "DigitalCovidCertificateTest",
                            "required": [
                              "ci"
                            ],
                            "properties": {
                              "ci": {
                                "type": "string",
                                "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                                "description": "Certificate Identifier"
                              }
                            }
                          }
                        },
                        "r": {
                          "items": {
                            "allOf": [
                              {
                                "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                                "type": "object",
                                "required": [
                                  "tg",
                                  "fr",
                                  "co",
                                  "is",
                                  "df",
                                  "du"
                                ],
                                "properties": {
                                  "tg": {
                                    "type": "string",
                                    "example": "840539006",
                                    "description": "Disease Targeted"
                                  },
                                  "fr": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Complete date of first positive NAA test result"
                                  },
                                  "co": {
                                    "type": "string",
                                    "description": "Country of test"
                                  },
                                  "is": {
                                    "type": "string",
                                    "description": "Certificate Issuer"
                                  },
                                  "df": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2021-02-18",
                                    "description": "Certificate valid from"
                                  },
                                  "du": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2022-02-18",
                                    "description": "Certificate valid until"
                                  }
                                }
                              }
                            ],
                            "title": "DigitalCovidCertificateRecovery",
                            "required": [
                              "ci"
                            ],
                            "properties": {
                              "ci": {
                                "type": "string",
                                "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                                "description": "Certificate Identifier"
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "VerifyDCCMetadataResponse",
                      "type": "object",
                      "properties": {
                        "expiry": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "issuedAt": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "trustedDocumentSignerId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "certificateId": {
                          "description": "Certificate identifier, format as per UVCI",
                          "type": "string",
                          "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "required": [
                        "type",
                        "message"
                      ],
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "VaccineCertificate": {
                    "value": {
                      "verified": true,
                      "metadata": {
                        "expiry": "2022-02-20T12:34:56Z",
                        "issuedAt": "2021-02-20T12:34:56Z",
                        "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                      },
                      "payload": {
                        "ver": "1.3.0",
                        "nam": {
                          "fn": "Musterfrau-Gößinger",
                          "fnt": "MUSTERFRAU<GOESSINGER",
                          "gn": "Gabriele",
                          "gnt": "GABRIELE"
                        },
                        "dob": "1998-02-26",
                        "v": [
                          {
                            "tg": "840539006",
                            "vp": "1119349007",
                            "mp": "EU/1/20/1528",
                            "ma": "ORG-100030215",
                            "dn": 1,
                            "sd": 2,
                            "dt": "2021-02-18",
                            "co": "NZ",
                            "is": "Kakapo Health, NZ",
                            "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                          }
                        ]
                      }
                    }
                  },
                  "TestCertificate": {
                    "value": {
                      "verified": true,
                      "metadata": {
                        "expiry": "2022-02-20T12:34:56Z",
                        "issuedAt": "2021-02-20T12:34:56Z",
                        "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                      },
                      "payload": {
                        "ver": "1.3.0",
                        "nam": {
                          "fn": "Musterfrau-Gößinger",
                          "fnt": "MUSTERFRAU<GOESSINGER",
                          "gn": "Gabriele",
                          "gnt": "GABRIELE"
                        },
                        "dob": "1998-02-26",
                        "t": [
                          {
                            "tg": "840539006",
                            "tt": "LP6464-4",
                            "nm": "Roche LightCycler qPCR",
                            "sc": "2021-02-20T12:34:56Z",
                            "tr": "260415000",
                            "tc": "Testing centre 1",
                            "co": "NZ",
                            "is": "Kakapo Health, NZ",
                            "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                          }
                        ]
                      }
                    }
                  },
                  "RecoveryCertificate": {
                    "value": {
                      "verified": true,
                      "metadata": {
                        "expiry": "2022-02-20T12:34:56Z",
                        "issuedAt": "2021-02-20T12:34:56Z",
                        "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                      },
                      "payload": {
                        "ver": "1.3.0",
                        "nam": {
                          "fn": "Musterfrau-Gößinger",
                          "fnt": "MUSTERFRAU<GOESSINGER",
                          "gn": "Gabriele",
                          "gnt": "GABRIELE"
                        },
                        "dob": "1998-02-26",
                        "r": [
                          {
                            "tg": "840539006",
                            "fr": "2021-02-20",
                            "co": "NZ",
                            "is": "Kakapo Health, NZ",
                            "df": "2021-02-20",
                            "du": "2022-02-20",
                            "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
                          }
                        ]
                      }
                    }
                  },
                  "FailedVerifyCertificate": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "DocumentSignerNotTrustedError",
                        "message": "Document Signer not trusted"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "verifyDCC"
      }
    },
    "/ext/dcc/v1/qrcode": {
      "post": {
        "requestBody": {
          "description": "The signed DCC represented as a `base45` encoded string.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "GenerateQRCodeRequest",
                "type": "object",
                "required": [
                  "payload"
                ],
                "properties": {
                  "payload": {
                    "type": "string",
                    "description": "Base45 encoded DCC",
                    "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81"
                  }
                }
              },
              "examples": {
                "DCC Payload": {
                  "value": {
                    "payload
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DCC Format Extensions"
        ],
        "summary": "Generate the QR to represent a Digital Covid Certificate",
        "description": "Generate a QR code to represent a digital covid certificate from the `base45` encoded string provided as the `payload`.",
        "responses": {
          "200": {
            "description": "QR Code generated as a PNG image",
            "content": {
              "image/png": {
                "schema": {
                  "format": "binary"
                }
              }
            }
          }
        },
        "operationId": "generateDCCQR",
        "parameters": []
      }
    },
    "/ext/nzcp/v1/verify": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payload": {
                    "type": "string",
                    "description": "NZCP with a base 32 encoded CBOR structure",
                    "example
                  }
                },
                "required": [
                  "payload"
                ]
              }
            },
            "application/pdf": {
              "schema": {
                "format": "binary"
              }
            },
            "image/jpg": {
              "schema": {
                "format": "binary"
              }
            },
            "image/jpeg": {
              "schema": {
                "format": "binary"
              }
            },
            "image/png": {
              "schema": {
                "format": "binary"
              }
            }
          }
        },
        "tags": [
          "NZCP Verify"
        ],
        "summary": "Verify a NZCP",
        "responses": {
          "200": {
            "description": "NZCP verification response that shows the `verified` status of the certificate along with the decoded `payload`.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "VerifyNZCPResponse",
                  "type": "object",
                  "description": "VerifyNZCPResponse",
                  "properties": {
                    "verified": {
                      "type": "boolean"
                    },
                    "payload": {
                      "title": "NZCPPayload",
                      "type": "object",
                      "description": "NZCPPayload",
                      "properties": {
                        "givenName": {
                          "type": "string",
                          "example": "Patrick John"
                        },
                        "familyName": {
                          "type": "string",
                          "example": "Smith"
                        },
                        "dob": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-06-01"
                        }
                      },
                      "required": [
                        "givenName",
                        "dob"
                      ]
                    },
                    "metadata": {
                      "title": "VerifyNZCPMetadataResponse",
                      "type": "object",
                      "description": "Metadata response from NZCP verify",
                      "properties": {
                        "expiry": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string",
                          "example": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98"
                        },
                        "issuer": {
                          "type": "string",
                          "example": "did:web:example.com"
                        },
                        "type": {
                          "type": "string",
                          "example": "PublicCovidPass"
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "verified"
                  ]
                },
                "examples": {
                  "NZCP successfully verified": {
                    "value": {
                      "verified": true,
                      "payload": {
                        "givenName": "Jack",
                        "familyName": "Sparrow",
                        "dob": "1960-04-16"
                      },
                      "metadata": {
                        "notBefore": "2021-11-02T20:05:30.000Z",
                        "expiry": "2031-11-02T20:05:30.000Z",
                        "issuer": "did:web:nzcp.covid19.health.nz",
                        "type": "PublicCovidPass",
                        "id": "urn:uuid:60a4f54d-4e30-4332-be33-ad78b1eafa4b"
                      }
                    }
                  },
                  "NZCP issuer is not trusted": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "NzcpIssuerNotTrusted",
                        "message": "NZCP not issued by a trusted issuer",
                        "details": {
                          "iss": "did:web:example.com"
                        }
                      }
                    }
                  },
                  "NZCP is expired": {
                    "value": {
                      "verified": false,
                      "payload": {
                        "givenName": "Patrick John",
                        "familyName": "Smith",
                        "dob": "1990-06-01"
                      },
                      "error": {
                        "type": "NzcpExpired",
                        "message": "NZCP is expired, current time is greater than expiry",
                        "details": {
                          "expiry": "2021-10-20T12:34:56.000Z",
                          "currentDate": "2021-12-20T12:34:56.000Z"
                        }
                      },
                      "metadata": {
                        "expiry": "2021-10-20T12:34:56.000Z",
                        "notBefore": "2021-02-20T12:34:56.000Z",
                        "id": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98",
                        "issuer": "did:web:example.com",
                        "type": "PublicCovidPass"
                      }
                    }
                  },
                  "NZCP is not active": {
                    "value": {
                      "verified": false,
                      "payload": {
                        "givenName": "Patrick John",
                        "familyName": "Smith",
                        "dob": "1990-06-01"
                      },
                      "error": {
                        "type": "NzcpNotActive",
                        "message": "NZCP not active, notBefore is greater than current time",
                        "details": {
                          "notBefore": "2021-02-20T12:34:56.000Z",
                          "currentDate": "2021-01-20T12:34:56.000Z"
                        }
                      },
                      "metadata": {
                        "expiry": "2021-10-20T12:34:56.000Z",
                        "notBefore": "2021-02-20T12:34:56.000Z",
                        "id": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98",
                        "issuer": "did:web:example.com",
                        "type": "PublicCovidPass"
                      }
                    }
                  },
                  "NZCP signature in not verifiable": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "SignatureVerificationError",
                        "message": "COSE signature verification failed"
                      }
                    }
                  },
                  "NZCP is using invalid DID method": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "InvalidDidMethod",
                        "message": "Invalid DID method ion"
                      }
                    }
                  },
                  "NZCP is using invalid JSON schema": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "JsonSchemaValidationError",
                        "message": "JSON schema validation failed on decoded NZCP",
                        "details": {
                          "errors": null,
                          "payload": {
                            "@context": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://health.govt.nz/credentials/cpnz"
                            ],
                            "credentialSubject": {
                              "givenName": "Patrick John",
                              "familyName": "Smith",
                              "dob": "1990-06-01"
                            },
                            "type": [
                              "VerifiableCredential",
                              "PublicCovidPass"
                            ],
                            "version": "1.0.0"
                          }
                        }
                      }
                    }
                  },
                  "NZCP is using unresolvable DID document": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "FailedToResolveDidDocumentError",
                        "message": "Failed to resolve DID document"
                      }
                    }
                  },
                  "NZCP is using invalid public key": {
                    "value": {
                      "verified": false,
                      "error": {
                        "type": "InvalidPublicKeyError",
                        "message": "Invalid public key",
                        "details": {
                          "didDocumentPublicKey": "did:web:example.com#key-1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value that was provided"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value",
                            "description": "Description of why the request is invalid"
                          },
                          "param": {
                            "type": "string",
                            "example": "id",
                            "description": "The parameter that is invalid"
                          },
                          "location": {
                            "type": "string",
                            "example": "body",
                            "description": "The location in either body, query, path or params"
                          }
                        }
                      }
                    }
                  },
                  "title": "ErrorResponse"
                },
                "examples": {
                  "Payload is not string": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "1",
                          "msg": "must be a string",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload is empty": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "",
                          "msg": "cannot be an empty string",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is not encoded in base32": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "NZCP:/1/!@#$%^&*()",
                          "msg": "Failed to decode base32 payload",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is not prefixed": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "UNKNOWN_PREFIX:/1/INVALID",
                          "msg": "Unknown prefix, expected payload to start with 'NZCP:'",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is not encoded in COSE": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "NZCP:/1/INVALID",
                          "msg": "Failed to decode COSE payload",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is of incorrect format": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "invalid payload",
                          "msg": "Payload must contain prefix, version and base32 payload",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is using unsupported version": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "NZCP:/99/INVALID",
                          "msg": "Unsupported payload version '1'",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Payload, or embedded QR code, is using undecodable CWT": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "NZCP:/1/INVALID_CWT_PAYLOAD",
                          "msg": "Failed to extract NZCP CWT payload",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "PDF is not valid": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "msg": "Failed to parse PDF",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Image is not valid": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "msg": "Failed to parse Image",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "QR code is missing": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "msg": "Failed to detect QR code",
                          "location": "body"
                        }
                      ]
                    }
                  },
                  "Unknown error occurs": {
                    "value": {
                      "code": "BadRequest",
                      "message": "Validation Error",
                      "details": [
                        {
                          "value": "NZCP:/1/UNKNOWN_PAYLOAD",
                          "msg": "Unexpected error",
                          "param": "payload",
                          "location": "body"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "operationId": "verify-nzcp",
        "description": "Verify a New Zealand COVID Pass (NZCP) issued by the New Zealand Ministry of Health using a payload of either a string or a document (image/PDF) containing the QR code.\n\nThis service will only support a NZCP issued using the trusted issuer with public keys published by New Zealand Ministry of Health.\n\nAn NZCP is constructed using the pattern:\n\n```\nNZCP:/<version-identifier>/<base32-encoded-CWT> \n```\n\n### **Payload as a string**  \nExtract the entire content of an NZCP QR code and send as a string with content type:\n- `application/json`\n\n### **Payload as a document**  \nSend a binary form of a document that contains a single QR code respresenting the NZCP.\nChoose the correct content type for the document type being uploaded:\n\n- `application/pdf`\n- `image/jpeg`\n- `image/png`\n\nThe service will determine the QR code and read the contents by applying the following princples:\n- There is a maximum size of 1MB\n- For PDF documents, only the 1st page will be scanned\n- The service will deterministically scan for QR codes and stop at the first one found\n- Documents must be of sufficient quality for the service to be able to read the QR Code image - the service has been tested with published examples.\n\n### **Checks performed**  \nThe service will perform the follow validity checks on the uploaded payload:\n- Validate the conformity of the payload to NZCP Version 1 in Base32\n- Decode the CBOR structure\n- Verification of header information present\n- Verify the `iss` value is the New Zealand Ministry of Health trusted issuer\n- Retrieve a valid public key from the trusted issuer's published document\n- Using the public key, validate the signature of the payload over the CBOR structure\n- Current datetime is within the `notBefore` and `expiry` values.\n\n### **Response**  \nIf all of the above checks are valid then the `verified` boolean is set to `true`, otherwise it will be classed as `false`.\nError reasons are given depending on the nature of the failure.\n\nIf the NZCP CBOR structure can be decoded, then the NZCP payload will be returned, this is also the case for payloads that are outside the `notBefore` or `expiry` dates.\n\n\n "
      }
    },
    "/oauth/token": {
      "servers": [
        {
          "url": "https://auth.mattr.global"
        }
      ],
      "post": {
        "summary": "Create API Auth Token",
        "operationId": "authToken",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OAuthTokenResponse",
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "s2dgbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6s2dcaEROemRDf5gbRVEwTTVSVFE0TmtZME9UZzVNVEpDTlVJNFJqRTBPREExTmpZMk1qazFPQSJ9"
                    },
                    "expires_in": {
                      "type": "number",
                      "example": 86400
                    },
                    "token_type": {
                      "type": "string",
                      "example": "Bearer"
                    }
                  },
                  "required": [
                    "access_token",
                    "expires_in",
                    "token_type"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TokenErrorResponse",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid credentials": {
                    "value": {
                      "error": "access_denied",
                      "error_description": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\nYou will be provided the required `client_id` and `client_secret` as part of onboarding.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OAuthTokenRequest",
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "example": "htf792W4p4MedZbnoWAs51EfqUt4d2"
                  },
                  "client_secret": {
                    "type": "string",
                    "example": "d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G"
                  },
                  "audience": {
                    "type": "string",
                    "example": "https://vii.mattr.global"
                  },
                  "grant_type": {
                    "type": "string",
                    "example": "client_credentials"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "audience",
                  "grant_type"
                ]
              },
              "examples": {
                "Request": {
                  "value": {
                    "client_id": "htf792W4p4MedZbnoWAs51EfqUt4d2",
                    "client_secret": "d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G",
                    "audience": "https://vii.mattr.global",
                    "grant_type": "client_credentials"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Security"
        ],
        "x-codeSamples": [
          {
            "lang": "curl",
            "source": "curl --request POST \\\n  --url https://auth.mattr.global/oauth/token/ \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"client_id\": \"KWdv9qo9Vnl9rrCRB7sfGKFTp4uO09im\",\n           \"client_secret\": \"ztJe2GVpOb1_rUo9Vnl9rrCRB7sfGKFTp4uO0DOfLnA5FSz96wbrzgJMQ\",\n           \"audience\": \"https://vii.mattr.global\",\n           \"grant_type\": \"client_credentials\"\n          }'\n"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "clientRegistrationAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Client registration_access_token"
      }
    },
    "schemas": {
      "OAuthTokenResponse": {
        "title": "OAuthTokenResponse",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "s2dgbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6s2dcaEROemRDf5gbRVEwTTVSVFE0TmtZME9UZzVNVEpDTlVJNFJqRTBPREExTmpZMk1qazFPQSJ9"
          },
          "expires_in": {
            "type": "number",
            "example": 86400
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          }
        },
        "required": [
          "access_token",
          "expires_in",
          "token_type"
        ]
      },
      "TokenErrorResponse": {
        "title": "TokenErrorResponse",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        }
      },
      "OAuthTokenRequest": {
        "title": "OAuthTokenRequest",
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "example": "htf792W4p4MedZbnoWAs51EfqUt4d2"
          },
          "client_secret": {
            "type": "string",
            "example": "d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G"
          },
          "audience": {
            "type": "string",
            "example": "https://vii.mattr.global"
          },
          "grant_type": {
            "type": "string",
            "example": "client_credentials"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "audience",
          "grant_type"
        ]
      },
      "CustomDomainResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Site Worker Cert"
          },
          "logoUrl": {
            "type": "string",
            "example": "https://s3.siteworkercert.com/logo.icon"
          },
          "domain": {
            "type": "string",
            "example": "ssi.siteworkercert.com"
          },
          "homepage": {
            "type": "string",
            "example": "https://siteworkercert.com"
          },
          "verificationToken": {
            "type": "string",
            "example": "SdsswaSADasdASdasdasdsa"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          },
          "verifiedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "logoUrl",
          "domain",
          "homepage",
          "verificationToken",
          "isVerified"
        ],
        "title": "CustomDomainResponse"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The value that was provided"
                },
                "msg": {
                  "type": "string",
                  "example": "Invalid value",
                  "description": "Description of why the request is invalid"
                },
                "param": {
                  "type": "string",
                  "example": "id",
                  "description": "The parameter that is invalid"
                },
                "location": {
                  "type": "string",
                  "example": "body",
                  "description": "The location in either body, query, path or params"
                }
              }
            }
          }
        },
        "title": "ErrorResponse"
      },
      "CreateCustomDomain": {
        "type": "object",
        "title": "CreateCustomDomain",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the custom domain"
          },
          "logoUrl": {
            "type": "string",
            "description": "Url for the domain logo"
          },
          "domain": {
            "type": "string",
            "description": "New domain"
          },
          "homepage": {
            "type": "string",
            "description": "Homepage for the url"
          }
        },
        "required": [
          "name",
          "logoUrl",
          "domain",
          "homepage"
        ]
      },
      "UpdateCustomDomain": {
        "title": "UpdateCustomDomain",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "title": "CreateCustomDomain",
            "description": "",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the custom domain"
              },
              "logoUrl": {
                "type": "string",
                "description": "Url for the domain logo"
              },
              "domain": {
                "type": "string",
                "description": "New domain"
              },
              "homepage": {
                "type": "string",
                "description": "Homepage for the url"
              }
            },
            "required": [
              "name",
              "logoUrl",
              "domain",
              "homepage"
            ]
          }
        ]
      },
      "CredentialStatus": {
        "type": "object",
        "description": "Credential status location information",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the credential status",
            "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
          },
          "type": {
            "type": "string",
            "description": "Indicates that the status contains revocation information",
            "example": "RevocationList2020Status"
          },
          "revocationListIndex": {
            "type": "integer",
            "example": 1,
            "description": "The location within the revocation list for the credential"
          },
          "revocationListCredential": {
            "type": "string",
            "description": "The location of the revocation list",
            "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
          }
        },
        "title": "CredentialStatus"
      },
      "ED25519Signature2018": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Ed25519Signature2018"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2020-05-02T12:06:29Z"
          },
          "jws": {
            "type": "string",
            "description": "Compact form of JWS",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "proofPurpose": {
            "type": "string",
            "example": "assertionMethod"
          },
          "verificationMethod": {
            "type": "string",
            "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
          }
        },
        "title": "ED25519Signature2018"
      },
      "VerifiableCredential": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "array",
            "example": [
              "https://www.w3.org/2018/credentials/v1",
              "https://www.w3.org/2018/credentials/examples/v1"
            ],
            "items": {
              "type": "string",
              "minLength": 1,
              "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
            }
          },
          "type": {
            "type": "array",
            "example": [
              "VerifiableCredential",
              "AlumniCredential"
            ],
            "items": {
              "type": "string",
              "minLength": 1,
              "example": "\"AlumniCredential\", \"VerifiableCredential\""
            }
          },
          "issuer": {
            "description": "Includes issuer id (did) and its domain (inside name parameter)",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                  },
                  "name": {
                    "type": "string",
                    "example": "Example University"
                  }
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "issuanceDate": {
            "type": "string",
            "format": "date-time",
            "example": "2020-05-02T12:06:29.156Z"
          },
          "credentialStatus": {
            "type": "object",
            "description": "Credential status location information",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the credential status",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
              },
              "type": {
                "type": "string",
                "description": "Indicates that the status contains revocation information",
                "example": "RevocationList2020Status"
              },
              "revocationListIndex": {
                "type": "integer",
                "example": 1,
                "description": "The location within the revocation list for the credential"
              },
              "revocationListCredential": {
                "type": "string",
                "description": "The location of the revocation list",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
              }
            },
            "title": "CredentialStatus"
          },
          "credentialSubject": {
            "type": "object",
            "example": {
              "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
              "givenName": "Jamie",
              "familyName": "Doe"
            },
            "properties": {
              "id": {
                "type": "string",
                "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
              },
              "givenName": {
                "type": "string",
                "example": "Jamie"
              },
              "familyName": {
                "type": "string",
                "example": "Doe"
              },
              "alumniOf": {
                "type": "string",
                "example": "Example University"
              }
            }
          },
          "proof": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Ed25519Signature2018"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2020-05-02T12:06:29Z"
              },
              "jws": {
                "type": "string",
                "description": "Compact form of JWS",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              },
              "proofPurpose": {
                "type": "string",
                "example": "assertionMethod"
              },
              "verificationMethod": {
                "type": "string",
                "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
              }
            },
            "title": "ED25519Signature2018"
          },
          "name": {
            "type": "string",
            "example": "Course credential",
            "description": "Name of the credential (requires v2 data model)"
          },
          "description": {
            "type": "string",
            "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
            "description": "Description of the credential (requires v2 data model)"
          }
        },
        "required": [
          "@context",
          "type",
          "issuanceDate",
          "credentialSubject",
          "proof"
        ],
        "title": "VerifiableCredential"
      },
      "GetDidConfigJsonldResponse": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "array",
                  "example": [
                    "https://www.w3.org/2018/credentials/v1",
                    "https://www.w3.org/2018/credentials/examples/v1"
                  ],
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                  }
                },
                "type": {
                  "type": "array",
                  "example": [
                    "VerifiableCredential",
                    "AlumniCredential"
                  ],
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "example": "\"AlumniCredential\", \"VerifiableCredential\""
                  }
                },
                "issuer": {
                  "description": "Includes issuer id (did) and its domain (inside name parameter)",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        },
                        "name": {
                          "type": "string",
                          "example": "Example University"
                        }
                      }
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "issuanceDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2020-05-02T12:06:29.156Z"
                },
                "credentialStatus": {
                  "type": "object",
                  "description": "Credential status location information",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the credential status",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                    },
                    "type": {
                      "type": "string",
                      "description": "Indicates that the status contains revocation information",
                      "example": "RevocationList2020Status"
                    },
                    "revocationListIndex": {
                      "type": "integer",
                      "example": 1,
                      "description": "The location within the revocation list for the credential"
                    },
                    "revocationListCredential": {
                      "type": "string",
                      "description": "The location of the revocation list",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                    }
                  },
                  "title": "CredentialStatus"
                },
                "credentialSubject": {
                  "type": "object",
                  "example": {
                    "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                    "givenName": "Jamie",
                    "familyName": "Doe"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                    },
                    "givenName": {
                      "type": "string",
                      "example": "Jamie"
                    },
                    "familyName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "alumniOf": {
                      "type": "string",
                      "example": "Example University"
                    }
                  }
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "Ed25519Signature2018"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-05-02T12:06:29Z"
                    },
                    "jws": {
                      "type": "string",
                      "description": "Compact form of JWS",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    },
                    "proofPurpose": {
                      "type": "string",
                      "example": "assertionMethod"
                    },
                    "verificationMethod": {
                      "type": "string",
                      "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                    }
                  },
                  "title": "ED25519Signature2018"
                },
                "name": {
                  "type": "string",
                  "example": "Course credential",
                  "description": "Name of the credential (requires v2 data model)"
                },
                "description": {
                  "type": "string",
                  "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                  "description": "Description of the credential (requires v2 data model)"
                }
              },
              "required": [
                "@context",
                "type",
                "issuanceDate",
                "credentialSubject",
                "proof"
              ],
              "title": "VerifiableCredential"
            }
          }
        },
        "title": "GetDidConfigJsonldResponse"
      },
      "DidDocument": {
        "type": "object",
        "title": "DidDocument"
      },
      "DidMetadataKey": {
        "type": "object",
        "properties": {
          "kmsKeyId": {
            "type": "string",
            "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
          },
          "didDocumentKeyId": {
            "type": "string",
            "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
          }
        },
        "title": "DidMetadataKey"
      },
      "DidMetadata": {
        "type": "object",
        "required": [
          "keys"
        ],
        "properties": {
          "registered": {
            "type": "number",
            "description": "Timestamp of when the DID was registered",
            "example": 1583233799656
          },
          "keys": {
            "type": "array",
            "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
            "items": {
              "type": "object",
              "properties": {
                "kmsKeyId": {
                  "type": "string",
                  "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                },
                "didDocumentKeyId": {
                  "type": "string",
                  "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                }
              },
              "title": "DidMetadataKey"
            }
          },
          "initialDidDocument": {
            "type": "object",
            "description": "The DID document that was created for the DID",
            "items": {
              "type": "object",
              "title": "DidDocument"
            }
          }
        },
        "title": "DidMetadata"
      },
      "GetDidResponse": {
        "type": "object",
        "properties": {
          "didDocument": {
            "type": "object",
            "title": "DidDocument"
          },
          "registrationStatus": {
            "type": "string"
          },
          "localMetadata": {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "registered": {
                "type": "number",
                "description": "Timestamp of when the DID was registered",
                "example": 1583233799656
              },
              "keys": {
                "type": "array",
                "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                "items": {
                  "type": "object",
                  "properties": {
                    "kmsKeyId": {
                      "type": "string",
                      "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                    },
                    "didDocumentKeyId": {
                      "type": "string",
                      "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                    }
                  },
                  "title": "DidMetadataKey"
                }
              },
              "initialDidDocument": {
                "type": "object",
                "description": "The DID document that was created for the DID",
                "items": {
                  "type": "object",
                  "title": "DidDocument"
                }
              }
            },
            "title": "DidMetadata"
          }
        },
        "title": "GetDidResponse"
      },
      "GetDidsResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "did",
                "localMetadata"
              ],
              "properties": {
                "did": {
                  "type": "string",
                  "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
                },
                "localMetadata": {
                  "type": "object",
                  "required": [
                    "keys"
                  ],
                  "properties": {
                    "registered": {
                      "type": "number",
                      "description": "Timestamp of when the DID was registered",
                      "example": 1583233799656
                    },
                    "keys": {
                      "type": "array",
                      "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kmsKeyId": {
                            "type": "string",
                            "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                          },
                          "didDocumentKeyId": {
                            "type": "string",
                            "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                          }
                        },
                        "title": "DidMetadataKey"
                      }
                    },
                    "initialDidDocument": {
                      "type": "object",
                      "description": "The DID document that was created for the DID",
                      "items": {
                        "type": "object",
                        "title": "DidDocument"
                      }
                    }
                  },
                  "title": "DidMetadata"
                }
              }
            }
          }
        },
        "title": "GetDidsResponse"
      },
      "CreateDidDocument": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "key",
              "web",
              "ion"
            ]
          },
          "options": {
            "type": "object",
            "description": "To define a key type for a did:key or to define a domain for did:web",
            "minItems": 1,
            "example": {
              "keyType": "bls12381g2"
            }
          }
        },
        "required": [
          "method"
        ],
        "description": "",
        "title": "CreateDidDocument"
      },
      "CreateDidResponse": {
        "type": "object",
        "properties": {
          "registrationStatus": {
            "type": "string"
          },
          "did": {
            "type": "string",
            "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
          },
          "metadata": {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "registered": {
                "type": "number",
                "description": "Timestamp of when the DID was registered",
                "example": 1583233799656
              },
              "keys": {
                "type": "array",
                "description": "An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.",
                "items": {
                  "type": "object",
                  "properties": {
                    "kmsKeyId": {
                      "type": "string",
                      "example": "ad8facc7-e7f6-4af6-9baa-2f7abd71c928"
                    },
                    "didDocumentKeyId": {
                      "type": "string",
                      "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
                    }
                  },
                  "title": "DidMetadataKey"
                }
              },
              "initialDidDocument": {
                "type": "object",
                "description": "The DID document that was created for the DID",
                "items": {
                  "type": "object",
                  "title": "DidDocument"
                }
              }
            },
            "title": "DidMetadata"
          }
        },
        "title": "CreateDidResponse"
      },
      "GetCredentialResponse": {
        "type": "object",
        "x-examples": {},
        "title": "WebManifestResponse",
        "properties": {
          "id": {
            "type": "string",
            "example": "873277c0-a162-11ea-8a1d-a111119347e6"
          },
          "credential": {
            "type": "object",
            "properties": {
              "@context": {
                "type": "array",
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://www.w3.org/2018/credentials/examples/v1"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                }
              },
              "type": {
                "type": "array",
                "example": [
                  "VerifiableCredential",
                  "AlumniCredential"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"AlumniCredential\", \"VerifiableCredential\""
                }
              },
              "issuer": {
                "description": "Includes issuer id (did) and its domain (inside name parameter)",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example University"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "example": "2020-05-02T12:06:29.156Z"
              },
              "credentialStatus": {
                "type": "object",
                "description": "Credential status location information",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique ID for the credential status",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates that the status contains revocation information",
                    "example": "RevocationList2020Status"
                  },
                  "revocationListIndex": {
                    "type": "integer",
                    "example": 1,
                    "description": "The location within the revocation list for the credential"
                  },
                  "revocationListCredential": {
                    "type": "string",
                    "description": "The location of the revocation list",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                  }
                },
                "title": "CredentialStatus"
              },
              "credentialSubject": {
                "type": "object",
                "example": {
                  "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                  "givenName": "Jamie",
                  "familyName": "Doe"
                },
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                  },
                  "givenName": {
                    "type": "string",
                    "example": "Jamie"
                  },
                  "familyName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "alumniOf": {
                    "type": "string",
                    "example": "Example University"
                  }
                }
              },
              "proof": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Ed25519Signature2018"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-02T12:06:29Z"
                  },
                  "jws": {
                    "type": "string",
                    "description": "Compact form of JWS",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  },
                  "proofPurpose": {
                    "type": "string",
                    "example": "assertionMethod"
                  },
                  "verificationMethod": {
                    "type": "string",
                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                  }
                },
                "title": "ED25519Signature2018"
              },
              "name": {
                "type": "string",
                "example": "Course credential",
                "description": "Name of the credential (requires v2 data model)"
              },
              "description": {
                "type": "string",
                "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                "description": "Description of the credential (requires v2 data model)"
              }
            },
            "required": [
              "@context",
              "type",
              "issuanceDate",
              "credentialSubject",
              "proof"
            ],
            "title": "VerifiableCredential"
          },
          "tag": {
            "type": "string",
            "example": "identifier123"
          },
          "credentialStatus": {
            "type": "object",
            "description": "Credential status location information",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the credential status",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
              },
              "type": {
                "type": "string",
                "description": "Indicates that the status contains revocation information",
                "example": "RevocationList2020Status"
              },
              "revocationListIndex": {
                "type": "integer",
                "example": 1,
                "description": "The location within the revocation list for the credential"
              },
              "revocationListCredential": {
                "type": "string",
                "description": "The location of the revocation list",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
              }
            },
            "title": "CredentialStatus"
          },
          "issuanceDate": {
            "type": "string",
            "example": "2020-05-02T12:06:29.156Z"
          }
        },
        "required": [
          "id",
          "issuanceDate"
        ]
      },
      "GetCredentialsResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "x-examples": {},
              "title": "WebManifestResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "873277c0-a162-11ea-8a1d-a111119347e6"
                },
                "credential": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "array",
                      "example": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://www.w3.org/2018/credentials/examples/v1"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                      }
                    },
                    "type": {
                      "type": "array",
                      "example": [
                        "VerifiableCredential",
                        "AlumniCredential"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"AlumniCredential\", \"VerifiableCredential\""
                      }
                    },
                    "issuer": {
                      "description": "Includes issuer id (did) and its domain (inside name parameter)",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            },
                            "name": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "issuanceDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-05-02T12:06:29.156Z"
                    },
                    "credentialStatus": {
                      "type": "object",
                      "description": "Credential status location information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique ID for the credential status",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates that the status contains revocation information",
                          "example": "RevocationList2020Status"
                        },
                        "revocationListIndex": {
                          "type": "integer",
                          "example": 1,
                          "description": "The location within the revocation list for the credential"
                        },
                        "revocationListCredential": {
                          "type": "string",
                          "description": "The location of the revocation list",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                        }
                      },
                      "title": "CredentialStatus"
                    },
                    "credentialSubject": {
                      "type": "object",
                      "example": {
                        "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                        "givenName": "Jamie",
                        "familyName": "Doe"
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                        },
                        "givenName": {
                          "type": "string",
                          "example": "Jamie"
                        },
                        "familyName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "alumniOf": {
                          "type": "string",
                          "example": "Example University"
                        }
                      }
                    },
                    "proof": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2018"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29Z"
                        },
                        "jws": {
                          "type": "string",
                          "description": "Compact form of JWS",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "assertionMethod"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        }
                      },
                      "title": "ED25519Signature2018"
                    },
                    "name": {
                      "type": "string",
                      "example": "Course credential",
                      "description": "Name of the credential (requires v2 data model)"
                    },
                    "description": {
                      "type": "string",
                      "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                      "description": "Description of the credential (requires v2 data model)"
                    }
                  },
                  "required": [
                    "@context",
                    "type",
                    "issuanceDate",
                    "credentialSubject",
                    "proof"
                  ],
                  "title": "VerifiableCredential"
                },
                "tag": {
                  "type": "string",
                  "example": "identifier123"
                },
                "credentialStatus": {
                  "type": "object",
                  "description": "Credential status location information",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the credential status",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                    },
                    "type": {
                      "type": "string",
                      "description": "Indicates that the status contains revocation information",
                      "example": "RevocationList2020Status"
                    },
                    "revocationListIndex": {
                      "type": "integer",
                      "example": 1,
                      "description": "The location within the revocation list for the credential"
                    },
                    "revocationListCredential": {
                      "type": "string",
                      "description": "The location of the revocation list",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                    }
                  },
                  "title": "CredentialStatus"
                },
                "issuanceDate": {
                  "type": "string",
                  "example": "2020-05-02T12:06:29.156Z"
                }
              },
              "required": [
                "id",
                "issuanceDate"
              ]
            }
          }
        },
        "title": "GetCredentialsResponse"
      },
      "CreateCredentialRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "array",
            "description": "Additional to any JSON-LD contexts 'https://www.w3.org/2018/credentials/v1' is always required.",
            "minLength": 1,
            "example": [
              "https://www.w3.org/2018/credentials/v1",
              "https://schema.org"
            ],
            "items": {
              "type": "string"
            }
          },
          "subjectId": {
            "type": "string",
            "description": "Generally a DID, identifier of who/what the subject is",
            "example": "did:example:abcdb1f712ebc6f1c276e12ec21",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "An optional tag to filter by, will not be part of the issued credential",
            "example": "identifier123",
            "minLength": 1,
            "maxLength": 1024
          },
          "type": {
            "description": "Type for the Credential, VerifiableCredential must be presented",
            "oneOf": [
              {
                "type": "string",
                "example": "VerifiableCredential",
                "description": "Describes the additional specific types of the claimed data, resulting credential will only include VerifiableCredential"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "[VerifiableCredential, AlumniCredential]",
                  "description": "Describes the additional specific types of the claimed data, must be within the scope of @context, resulting credential will always include VerifiableCredential"
                }
              }
            ]
          },
          "claims": {
            "type": "object",
            "description": "Each value is a claim that is defined by one of the JSON-LD schemas.",
            "minItems": 1,
            "example": {
              "givenName": "Jamie",
              "familyName": "Doe",
              "alumniOf": "<span lang=\"en\">Example University</span>"
            }
          },
          "issuer": {
            "type": "object",
            "description": "Includes Issuer id (DID) and domain name",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
              },
              "name": {
                "type": "string",
                "example": "https://example.edu/issuers/565049"
              }
            }
          },
          "persist": {
            "type": "boolean",
            "description": "Flag to indicate whether the full credential should be stored in platform"
          },
          "revocable": {
            "type": "boolean",
            "description": "Flag to indicate if the credential needs to support revocation"
          },
          "name": {
            "type": "string",
            "example": "Course credential",
            "description": "Name of the credential (requires v2 data model)"
          },
          "description": {
            "type": "string",
            "description": "Description of the credential (requires v2 data model)",
            "example": "This credential shows that the person has attended the mention course and attained the relevant awards."
          }
        },
        "required": [
          "@context",
          "type",
          "claims",
          "issuer"
        ],
        "title": "CreateCredentialRequest"
      },
      "CreateCredentialResponse": {
        "type": "object",
        "x-examples": {},
        "title": "CreateCredentialResponse",
        "properties": {
          "id": {
            "type": "string",
            "example": "873277c0-a162-11ea-8a1d-a111119347e6"
          },
          "credential": {
            "type": "object",
            "properties": {
              "@context": {
                "type": "array",
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://www.w3.org/2018/credentials/examples/v1"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                }
              },
              "type": {
                "type": "array",
                "example": [
                  "VerifiableCredential",
                  "AlumniCredential"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"AlumniCredential\", \"VerifiableCredential\""
                }
              },
              "issuer": {
                "description": "Includes issuer id (did) and its domain (inside name parameter)",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example University"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "example": "2020-05-02T12:06:29.156Z"
              },
              "credentialStatus": {
                "type": "object",
                "description": "Credential status location information",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique ID for the credential status",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates that the status contains revocation information",
                    "example": "RevocationList2020Status"
                  },
                  "revocationListIndex": {
                    "type": "integer",
                    "example": 1,
                    "description": "The location within the revocation list for the credential"
                  },
                  "revocationListCredential": {
                    "type": "string",
                    "description": "The location of the revocation list",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                  }
                },
                "title": "CredentialStatus"
              },
              "credentialSubject": {
                "type": "object",
                "example": {
                  "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                  "givenName": "Jamie",
                  "familyName": "Doe"
                },
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                  },
                  "givenName": {
                    "type": "string",
                    "example": "Jamie"
                  },
                  "familyName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "alumniOf": {
                    "type": "string",
                    "example": "Example University"
                  }
                }
              },
              "proof": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Ed25519Signature2018"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-02T12:06:29Z"
                  },
                  "jws": {
                    "type": "string",
                    "description": "Compact form of JWS",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  },
                  "proofPurpose": {
                    "type": "string",
                    "example": "assertionMethod"
                  },
                  "verificationMethod": {
                    "type": "string",
                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                  }
                },
                "title": "ED25519Signature2018"
              },
              "name": {
                "type": "string",
                "example": "Course credential",
                "description": "Name of the credential (requires v2 data model)"
              },
              "description": {
                "type": "string",
                "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                "description": "Description of the credential (requires v2 data model)"
              }
            },
            "required": [
              "@context",
              "type",
              "issuanceDate",
              "credentialSubject",
              "proof"
            ],
            "title": "VerifiableCredential"
          },
          "tag": {
            "type": "string",
            "example": "identifier123"
          },
          "credentialStatus": {
            "type": "object",
            "description": "Credential status location information",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID for the credential status",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
              },
              "type": {
                "type": "string",
                "description": "Indicates that the status contains revocation information",
                "example": "RevocationList2020Status"
              },
              "revocationListIndex": {
                "type": "integer",
                "example": 1,
                "description": "The location within the revocation list for the credential"
              },
              "revocationListCredential": {
                "type": "string",
                "description": "The location of the revocation list",
                "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
              }
            },
            "title": "CredentialStatus"
          },
          "issuanceDate": {
            "type": "string",
            "example": "2020-05-02T12:06:29.156Z"
          }
        },
        "required": [
          "id",
          "credential",
          "issuanceDate"
        ]
      },
      "VerifyCredentialRequest": {
        "title": "VerifyCredentialRequest",
        "type": "object",
        "properties": {
          "credential": {
            "type": "object",
            "properties": {
              "@context": {
                "type": "array",
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://www.w3.org/2018/credentials/examples/v1"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                }
              },
              "type": {
                "type": "array",
                "example": [
                  "VerifiableCredential",
                  "AlumniCredential"
                ],
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "example": "\"AlumniCredential\", \"VerifiableCredential\""
                }
              },
              "issuer": {
                "description": "Includes issuer id (did) and its domain (inside name parameter)",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example University"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "example": "2020-05-02T12:06:29.156Z"
              },
              "credentialStatus": {
                "type": "object",
                "description": "Credential status location information",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique ID for the credential status",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates that the status contains revocation information",
                    "example": "RevocationList2020Status"
                  },
                  "revocationListIndex": {
                    "type": "integer",
                    "example": 1,
                    "description": "The location within the revocation list for the credential"
                  },
                  "revocationListCredential": {
                    "type": "string",
                    "description": "The location of the revocation list",
                    "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                  }
                },
                "title": "CredentialStatus"
              },
              "credentialSubject": {
                "type": "object",
                "example": {
                  "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                  "givenName": "Jamie",
                  "familyName": "Doe"
                },
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                  },
                  "givenName": {
                    "type": "string",
                    "example": "Jamie"
                  },
                  "familyName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "alumniOf": {
                    "type": "string",
                    "example": "Example University"
                  }
                }
              },
              "proof": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Ed25519Signature2018"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-02T12:06:29Z"
                  },
                  "jws": {
                    "type": "string",
                    "description": "Compact form of JWS",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  },
                  "proofPurpose": {
                    "type": "string",
                    "example": "assertionMethod"
                  },
                  "verificationMethod": {
                    "type": "string",
                    "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                  }
                },
                "title": "ED25519Signature2018"
              },
              "name": {
                "type": "string",
                "example": "Course credential",
                "description": "Name of the credential (requires v2 data model)"
              },
              "description": {
                "type": "string",
                "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                "description": "Description of the credential (requires v2 data model)"
              }
            },
            "required": [
              "@context",
              "type",
              "issuanceDate",
              "credentialSubject",
              "proof"
            ],
            "title": "VerifiableCredential"
          }
        }
      },
      "VerifyCredentialResponse": {
        "title": "VerifyCredentialResponse",
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "example": "Credential has been revoked",
            "minLength": 1
          }
        },
        "required": [
          "verified"
        ]
      },
      "RevocationStatusResponse": {
        "type": "object",
        "properties": {
          "isRevoked": {
            "type": "boolean",
            "description": "true if the credential is revoked, false otherwise",
            "example": false
          }
        },
        "required": [
          "isRevoked"
        ],
        "description": "",
        "title": "RevocationStatusResponse"
      },
      "SetRevocationStatus": {
        "type": "object",
        "properties": {
          "isRevoked": {
            "type": "boolean",
            "description": "true if the credential is revoked, false otherwise",
            "example": false
          }
        },
        "required": [
          "isRevoked"
        ],
        "description": "",
        "title": "SetRevocationStatus"
      },
      "CreatePayloadRequest": {
        "description": "Create a payload",
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "minLength": 1,
            "description": "DID on the tenant used in a message"
          },
          "to": {
            "type": "array",
            "description": "List of SubjectDIDs",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "from",
          "to"
        ],
        "title": "CreatePayloadRequest"
      },
      "RevocationStatusNotification": {
        "title": "RevocationStatusNotification",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "to": {
            "type": "array",
            "items": {
              "required": [
                "string"
              ],
              "properties": {}
            }
          },
          "from": {
            "type": "string",
            "minLength": 1
          },
          "created_time": {
            "type": "number"
          },
          "body": {
            "type": "object",
            "properties": {
              "revocationListCredential": {
                "type": "string",
                "minLength": 1
              },
              "revocationListIndex": {
                "type": "string",
                "minLength": 1
              },
              "isRevoked": {
                "type": "boolean"
              }
            },
            "required": [
              "revocationListCredential",
              "revocationListIndex",
              "isRevoked"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "to",
          "from",
          "created_time",
          "body"
        ]
      },
      "JSONObjectMessage": {
        "type": "object",
        "description": "A JSON Object plaintext message",
        "example": {
          "msg": "this is a message"
        },
        "title": "JSONObjectMessage"
      },
      "SignMessageRequest": {
        "type": "object",
        "required": [
          "didUrl",
          "payload"
        ],
        "properties": {
          "didUrl": {
            "type": "string",
            "description": "The did keyId that will be used to sign the message with.",
            "example": "did:example:abcdefghijkl#key1"
          },
          "payload": {
            "type": "object",
            "description": "A JSON Object plaintext message",
            "example": {
              "msg": "this is a message"
            },
            "title": "JSONObjectMessage"
          }
        },
        "title": "SignMessageRequest"
      },
      "SignMessageResponse": {
        "title": "SignMessageResponse",
        "type": "string",
        "description": "Signed message in a response",
        "example": "eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg",
        "required": [
          "ciphertext"
        ]
      },
      "VerifyRequest": {
        "type": "object",
        "properties": {
          "jws": {
            "type": "string",
            "description": "Compact form of JWS",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        },
        "title": "VerifyRequest"
      },
      "VerifyMessageResponse": {
        "type": "object",
        "properties": {
          "didUrl": {
            "type": "string",
            "description": "The didUrl included on the jws object",
            "example": "did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri#z6MkiKdPk7cYsCySi8BgPnjsZpUkb3aoHsBN4NQKQCSDKEdU"
          },
          "did": {
            "type": "string",
            "description": "The did parsed from the didUrl",
            "example": "did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri"
          },
          "verified": {
            "type": "boolean",
            "description": "Result of jws verification",
            "example": true
          },
          "payload": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "The payload of the verified message"
          }
        },
        "title": "VerifyMessageResponse"
      },
      "EncryptMessageRequest": {
        "title": "EncryptMessageRequest",
        "type": "object",
        "properties": {
          "senderDidUrl": {
            "type": "string"
          },
          "recipientDidUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "payload": {
            "type": "object"
          }
        },
        "required": [
          "senderDidUrl",
          "recipientDidUrls",
          "payload"
        ]
      },
      "EncryptedMessage": {
        "title": "EncryptedMessage",
        "type": "object",
        "properties": {
          "jwe": {
            "type": "object",
            "properties": {
              "protected": {
                "type": "string",
                "minLength": 1
              },
              "recipients": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "required": [
                    "encryption_key"
                  ],
                  "properties": {
                    "header": {
                      "type": "object",
                      "properties": {
                        "alg": {
                          "type": "string",
                          "minLength": 1
                        },
                        "kid": {
                          "type": "string",
                          "minLength": 1
                        },
                        "epk": {
                          "type": "object",
                          "properties": {
                            "kty": {
                              "type": "string",
                              "minLength": 1
                            },
                            "crv": {
                              "type": "string",
                              "minLength": 1
                            },
                            "x": {
                              "type": "string",
                              "minLength": 1
                            }
                          },
                          "required": [
                            "kty",
                            "crv",
                            "x"
                          ]
                        },
                        "skid": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "alg",
                        "kid",
                        "epk",
                        "skid"
                      ]
                    },
                    "encryption_key": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "ciphertext": {
                "type": "string",
                "minLength": 1
              },
              "iv": {
                "type": "string",
                "minLength": 1
              },
              "tag": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "protected",
              "recipients",
              "ciphertext",
              "iv",
              "tag"
            ]
          }
        },
        "required": [
          "jwe"
        ]
      },
      "DecryptMessageRequest": {
        "title": "DecryptMessageRequest",
        "type": "object",
        "properties": {
          "jwe": {
            "type": "string"
          }
        },
        "required": [
          "jwe"
        ]
      },
      "DecryptMessageResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          },
          "senderDidUrl": {
            "type": "string"
          },
          "senderPublicJwk": {
            "type": "object"
          },
          "recipientDidUrl": {
            "type": "string"
          }
        },
        "title": "DecryptMessageResponse"
      },
      "SendMessageRequest": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "recipient DID"
          },
          "message": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "JWE message"
          }
        },
        "title": "SendMessageRequest"
      },
      "CreateOidcIssuerRequest": {
        "type": "object",
        "properties": {
          "credential": {
            "type": "object",
            "description": "Credential information",
            "required": [
              "issuerDid",
              "name",
              "context",
              "type"
            ],
            "properties": {
              "issuerDid": {
                "type": "string",
                "description": "The Issuer DID",
                "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
              },
              "name": {
                "type": "string",
                "description": "Meaningful name for the Credential",
                "example": "University Attendance Credential"
              },
              "description": {
                "type": "string",
                "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
              },
              "context": {
                "type": "array",
                "description": "JSON-LD schema where the term is referenced",
                "example": [
                  "https://schema.org"
                ],
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "type": {
                "description": "The Credential Type",
                "oneOf": [
                  {
                    "type": "string",
                    "example": "AlumniCredential"
                  },
                  {
                    "type": "array",
                    "example": [
                      "AlumniCredential"
                    ],
                    "items": {
                      "type": "string",
                      "description": "The Credential Type"
                    }
                  }
                ]
              }
            }
          },
          "federatedProvider": {
            "type": "object",
            "description": "Federated OIDC Provider details",
            "required": [
              "url",
              "clientId",
              "clientSecret"
            ],
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "Base url for provider well-known endpoint",
                "example": "https://example-university.au.auth0.com"
              },
              "scope": {
                "type": "array",
                "description": "OIDC scope associated with claims in the provider",
                "example": [
                  "openid",
                  "profile",
                  "email"
                ],
                "items": {
                  "type": "string"
                }
              },
              "clientId": {
                "type": "string",
                "description": "Client ID configured in the provider",
                "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
              },
              "clientSecret": {
                "type": "string",
                "description": "Client secret configured in the provider",
                "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
              }
            }
          },
          "claimMappings": {
            "type": "array",
            "description": "Map OpenID Connect terms to JSON-LD terms",
            "items": {
              "type": "object",
              "properties": {
                "jsonLdTerm": {
                  "type": "string",
                  "description": "The credential claim name in JSON-LD terms",
                  "example": "alumniOf"
                },
                "oidcClaim": {
                  "type": "string",
                  "description": "The credential claim name in OIDC terms",
                  "example": "alumni_of"
                }
              },
              "required": [
                "jsonLdTerm",
                "oidcClaim"
              ]
            }
          }
        },
        "required": [
          "credential",
          "federatedProvider",
          "claimMappings"
        ],
        "title": "CreateOidcIssuerRequest"
      },
      "CreateOidcIssuerResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Issuer id",
                "example": "983c0a86-204f-4431-9371-f5a22e506599"
              },
              "federatedProvider": {
                "type": "object",
                "properties": {
                  "callbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL where the authorization code gets sent",
                    "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "credential": {
                "type": "object",
                "description": "Credential information",
                "required": [
                  "issuerDid",
                  "name",
                  "context",
                  "type"
                ],
                "properties": {
                  "issuerDid": {
                    "type": "string",
                    "description": "The Issuer DID",
                    "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                  },
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for the Credential",
                    "example": "University Attendance Credential"
                  },
                  "description": {
                    "type": "string",
                    "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                    "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                  },
                  "context": {
                    "type": "array",
                    "description": "JSON-LD schema where the term is referenced",
                    "example": [
                      "https://schema.org"
                    ],
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "type": {
                    "description": "The Credential Type",
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "AlumniCredential"
                      },
                      {
                        "type": "array",
                        "example": [
                          "AlumniCredential"
                        ],
                        "items": {
                          "type": "string",
                          "description": "The Credential Type"
                        }
                      }
                    ]
                  }
                }
              },
              "federatedProvider": {
                "type": "object",
                "description": "Federated OIDC Provider details",
                "required": [
                  "url",
                  "clientId",
                  "clientSecret"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Base url for provider well-known endpoint",
                    "example": "https://example-university.au.auth0.com"
                  },
                  "scope": {
                    "type": "array",
                    "description": "OIDC scope associated with claims in the provider",
                    "example": [
                      "openid",
                      "profile",
                      "email"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client ID configured in the provider",
                    "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                  },
                  "clientSecret": {
                    "type": "string",
                    "description": "Client secret configured in the provider",
                    "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                  }
                }
              },
              "claimMappings": {
                "type": "array",
                "description": "Map OpenID Connect terms to JSON-LD terms",
                "items": {
                  "type": "object",
                  "properties": {
                    "jsonLdTerm": {
                      "type": "string",
                      "description": "The credential claim name in JSON-LD terms",
                      "example": "alumniOf"
                    },
                    "oidcClaim": {
                      "type": "string",
                      "description": "The credential claim name in OIDC terms",
                      "example": "alumni_of"
                    }
                  },
                  "required": [
                    "jsonLdTerm",
                    "oidcClaim"
                  ]
                }
              }
            },
            "required": [
              "credential",
              "federatedProvider",
              "claimMappings"
            ],
            "title": "CreateOidcIssuerRequest"
          }
        ],
        "title": "CreateOidcIssuerResponse"
      },
      "GetOidcIssuersResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Issuer id",
                    "example": "983c0a86-204f-4431-9371-f5a22e506599"
                  },
                  "federatedProvider": {
                    "type": "object",
                    "properties": {
                      "callbackUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL where the authorization code gets sent",
                        "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "credential": {
                    "type": "object",
                    "description": "Credential information",
                    "required": [
                      "issuerDid",
                      "name",
                      "context",
                      "type"
                    ],
                    "properties": {
                      "issuerDid": {
                        "type": "string",
                        "description": "The Issuer DID",
                        "example": "did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5"
                      },
                      "name": {
                        "type": "string",
                        "description": "Meaningful name for the Credential",
                        "example": "University Attendance Credential"
                      },
                      "description": {
                        "type": "string",
                        "example": "This credential shows that the person has attended the mentioned course and attained the relevant awards.",
                        "description": "Description of the credential (a wallet must support W3C Credential Data Model v2 in order to display)"
                      },
                      "context": {
                        "type": "array",
                        "description": "JSON-LD schema where the term is referenced",
                        "example": [
                          "https://schema.org"
                        ],
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "type": {
                        "description": "The Credential Type",
                        "oneOf": [
                          {
                            "type": "string",
                            "example": "AlumniCredential"
                          },
                          {
                            "type": "array",
                            "example": [
                              "AlumniCredential"
                            ],
                            "items": {
                              "type": "string",
                              "description": "The Credential Type"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "federatedProvider": {
                    "type": "object",
                    "description": "Federated OIDC Provider details",
                    "required": [
                      "url",
                      "clientId",
                      "clientSecret"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Base url for provider well-known endpoint",
                        "example": "https://example-university.au.auth0.com"
                      },
                      "scope": {
                        "type": "array",
                        "description": "OIDC scope associated with claims in the provider",
                        "example": [
                          "openid",
                          "profile",
                          "email"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Client ID configured in the provider",
                        "example": "vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Client secret configured in the provider",
                        "example": "QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH"
                      }
                    }
                  },
                  "claimMappings": {
                    "type": "array",
                    "description": "Map OpenID Connect terms to JSON-LD terms",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jsonLdTerm": {
                          "type": "string",
                          "description": "The credential claim name in JSON-LD terms",
                          "example": "alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      },
                      "required": [
                        "jsonLdTerm",
                        "oidcClaim"
                      ]
                    }
                  }
                },
                "required": [
                  "credential",
                  "federatedProvider",
                  "claimMappings"
                ],
                "title": "CreateOidcIssuerRequest"
              }
            ],
            "title": "CreateOidcIssuerResponse"
          }
        },
        "title": "GetOidcIssuersResponse"
      },
      "CreateOidcIssuerClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Meaningful name for this Client",
            "example": "OIDC Client for Wallet"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Redirection URI to which the response will be sent",
            "example": [
              "https://example.com/callback"
            ]
          },
          "responseTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Determines the authorization processing flow",
            "example": [
              "code"
            ]
          },
          "grantTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "OAuth Grant Type",
            "example": [
              "authorization_code"
            ]
          },
          "tokenEndpointAuthMethod": {
            "type": "string",
            "description": "OAuth Token Endpoint Authentication Method",
            "example": "client_secret_post"
          },
          "idTokenSignedResponseAlg": {
            "type": "string",
            "description": "Algorithm must match configured jwks, defaults to RS256",
            "example": "ES256"
          },
          "applicationType": {
            "type": "string",
            "example": "web"
          }
        },
        "required": [
          "name",
          "redirectUris"
        ],
        "title": "CreateOidcIssuerClientRequest"
      },
      "CreateOidcIssuerClientResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Client id",
                "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
              },
              "secret": {
                "type": "string",
                "description": "Client secret",
                "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Meaningful name for this Client",
                "example": "OIDC Client for Wallet"
              },
              "redirectUris": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "description": "Redirection URI to which the response will be sent",
                "example": [
                  "https://example.com/callback"
                ]
              },
              "responseTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Determines the authorization processing flow",
                "example": [
                  "code"
                ]
              },
              "grantTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "OAuth Grant Type",
                "example": [
                  "authorization_code"
                ]
              },
              "tokenEndpointAuthMethod": {
                "type": "string",
                "description": "OAuth Token Endpoint Authentication Method",
                "example": "client_secret_post"
              },
              "idTokenSignedResponseAlg": {
                "type": "string",
                "description": "Algorithm must match configured jwks, defaults to RS256",
                "example": "ES256"
              },
              "applicationType": {
                "type": "string",
                "example": "web"
              }
            },
            "required": [
              "name",
              "redirectUris"
            ],
            "title": "CreateOidcIssuerClientRequest"
          }
        ],
        "title": "CreateOidcIssuerClientResponse"
      },
      "GetOidcIssuerClientsResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Client id",
                    "example": "6a860559-21a3-4b57-9a2b-aaea3ba4683d"
                  },
                  "secret": {
                    "type": "string",
                    "description": "Client secret",
                    "example": "PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for Wallet"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcIssuerClientRequest"
              }
            ],
            "title": "CreateOidcIssuerClientResponse"
          }
        },
        "title": "GetOidcIssuerClientsResponse"
      },
      "OpenIdConfiguration": {
        "type": "object",
        "properties": {
          "authorization_endpoint": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize"
          },
          "claims_parameter_supported": {
            "type": "boolean",
            "example": true
          },
          "claims_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "sub",
              "sid",
              "auth_time",
              "iss"
            ]
          },
          "code_challenge_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "S256"
            ]
          },
          "end_session_endpoint": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end"
          },
          "grant_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "implicit",
              "authorization_code",
              "refresh_token"
            ]
          },
          "id_token_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "HS256",
              "ES256"
            ]
          },
          "issuer": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global"
          },
          "jwks_uri": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks"
          },
          "registration_endpoint": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients"
          },
          "request_object_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "HS256",
              "RS256",
              "PS256",
              "ES256",
              "EdDSA"
            ]
          },
          "request_parameter_supported": {
            "type": "boolean",
            "example": true
          },
          "request_uri_parameter_supported": {
            "type": "boolean",
            "example": true
          },
          "require_request_uri_registration": {
            "type": "boolean",
            "example": true
          },
          "response_modes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "form_post",
              "fragment",
              "query"
            ]
          },
          "response_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "code id_token",
              "code",
              "id_token",
              "none"
            ]
          },
          "scopes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "openid",
              "offline_access"
            ]
          },
          "subject_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "public"
            ]
          },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "none",
              "client_secret_basic",
              "client_secret_jwt",
              "client_secret_post",
              "private_key_jwt"
            ]
          },
          "token_endpoint_auth_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "HS256",
              "RS256",
              "PS256",
              "ES256",
              "EdDSA"
            ]
          },
          "token_endpoint": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token"
          },
          "userinfo_endpoint": {
            "type": "string",
            "format": "uri",
            "example": "https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me"
          },
          "userinfo_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "HS256",
              "ES256"
            ]
          },
          "claim_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "normal"
            ]
          }
        },
        "title": "OpenIdConfiguration"
      },
      "OidcIssuerToken": {
        "title": "IssuerToken",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "OidcCredentialOffer": {
        "title": "OidcCredentialOffer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "to": {
            "type": "array",
            "items": {
              "required": [
                "string"
              ],
              "properties": {}
            }
          },
          "from": {
            "type": "string",
            "minLength": 1
          },
          "created_time": {
            "type": "number"
          },
          "body": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "uri"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "to",
          "from",
          "created_time",
          "body"
        ]
      },
      "CreateOidcVerifierRequest": {
        "type": "object",
        "properties": {
          "verifierDid": {
            "type": "string",
            "description": "The Verifier DID",
            "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
          },
          "presentationTemplateId": {
            "type": "string",
            "format": "uuid",
            "description": "Presentation Template ID used to request certain credentials",
            "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
          },
          "claimMappings": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "jsonLdFqn",
                "oidcClaim"
              ],
              "properties": {
                "jsonLdFqn": {
                  "type": "string",
                  "description": "Fully qualified JSON-LD term",
                  "example": "http://schema.org/alumniOf"
                },
                "oidcClaim": {
                  "type": "string",
                  "description": "The credential claim name in OIDC terms",
                  "example": "alumni_of"
                }
              }
            },
            "description": "Map OpenID Connect terms to JSON-LD terms"
          }
        },
        "required": [
          "verifierDid",
          "presentationTemplateId",
          "claimMappings"
        ],
        "title": "CreateOidcVerifierRequest"
      },
      "CreateOidcVerifierResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Verifier id",
                "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "verifierDid": {
                "type": "string",
                "description": "The Verifier DID",
                "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
              },
              "presentationTemplateId": {
                "type": "string",
                "format": "uuid",
                "description": "Presentation Template ID used to request certain credentials",
                "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
              },
              "claimMappings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "jsonLdFqn",
                    "oidcClaim"
                  ],
                  "properties": {
                    "jsonLdFqn": {
                      "type": "string",
                      "description": "Fully qualified JSON-LD term",
                      "example": "http://schema.org/alumniOf"
                    },
                    "oidcClaim": {
                      "type": "string",
                      "description": "The credential claim name in OIDC terms",
                      "example": "alumni_of"
                    }
                  }
                },
                "description": "Map OpenID Connect terms to JSON-LD terms"
              }
            },
            "required": [
              "verifierDid",
              "presentationTemplateId",
              "claimMappings"
            ],
            "title": "CreateOidcVerifierRequest"
          }
        ],
        "title": "CreateOidcVerifierResponse"
      },
      "GetOidcVerifiersResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Verifier id",
                    "example": "41458e5a-9092-40b7-9a26-d4eb43c5792f"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "verifierDid": {
                    "type": "string",
                    "description": "The Verifier DID",
                    "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                  },
                  "presentationTemplateId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Presentation Template ID used to request certain credentials",
                    "example": "364b6a1b-3600-4927-a6ac-4d66aa6bbac3"
                  },
                  "claimMappings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "jsonLdFqn",
                        "oidcClaim"
                      ],
                      "properties": {
                        "jsonLdFqn": {
                          "type": "string",
                          "description": "Fully qualified JSON-LD term",
                          "example": "http://schema.org/alumniOf"
                        },
                        "oidcClaim": {
                          "type": "string",
                          "description": "The credential claim name in OIDC terms",
                          "example": "alumni_of"
                        }
                      }
                    },
                    "description": "Map OpenID Connect terms to JSON-LD terms"
                  }
                },
                "required": [
                  "verifierDid",
                  "presentationTemplateId",
                  "claimMappings"
                ],
                "title": "CreateOidcVerifierRequest"
              }
            ],
            "title": "CreateOidcVerifierResponse"
          }
        },
        "title": "GetOidcVerifiersResponse"
      },
      "CreateOidcVerifierClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Meaningful name for this Client",
            "example": "OIDC Client for the verifier"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Redirection URI to which the response will be sent",
            "example": [
              "https://example.com/callback"
            ]
          },
          "responseTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Determines the authorization processing flow",
            "example": [
              "code"
            ]
          },
          "grantTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "OAuth Grant Type",
            "example": [
              "authorization_code"
            ]
          },
          "tokenEndpointAuthMethod": {
            "type": "string",
            "description": "OAuth Token Endpoint Authentication Method",
            "example": "client_secret_post"
          },
          "idTokenSignedResponseAlg": {
            "type": "string",
            "description": "Algorithm must match configured jwks, defaults to RS256",
            "example": "ES256"
          },
          "applicationType": {
            "type": "string",
            "example": "web"
          },
          "logoUri": {
            "type": "string",
            "format": "uri",
            "description": "The logo to display above the QR code",
            "example": "https://example.com/logo.png"
          }
        },
        "required": [
          "name",
          "redirectUris"
        ],
        "title": "CreateOidcVerifierClientRequest"
      },
      "CreateOidcVerifierClientResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Client id",
                "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
              },
              "secret": {
                "type": "string",
                "description": "Client secret",
                "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Meaningful name for this Client",
                "example": "OIDC Client for the verifier"
              },
              "redirectUris": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "description": "Redirection URI to which the response will be sent",
                "example": [
                  "https://example.com/callback"
                ]
              },
              "responseTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Determines the authorization processing flow",
                "example": [
                  "code"
                ]
              },
              "grantTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "OAuth Grant Type",
                "example": [
                  "authorization_code"
                ]
              },
              "tokenEndpointAuthMethod": {
                "type": "string",
                "description": "OAuth Token Endpoint Authentication Method",
                "example": "client_secret_post"
              },
              "idTokenSignedResponseAlg": {
                "type": "string",
                "description": "Algorithm must match configured jwks, defaults to RS256",
                "example": "ES256"
              },
              "applicationType": {
                "type": "string",
                "example": "web"
              },
              "logoUri": {
                "type": "string",
                "format": "uri",
                "description": "The logo to display above the QR code",
                "example": "https://example.com/logo.png"
              }
            },
            "required": [
              "name",
              "redirectUris"
            ],
            "title": "CreateOidcVerifierClientRequest"
          }
        ],
        "title": "CreateOidcVerifierClientResponse"
      },
      "GetOidcVerifierClientsResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Client id",
                    "example": "da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d"
                  },
                  "secret": {
                    "type": "string",
                    "description": "Client secret",
                    "example": "H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Meaningful name for this Client",
                    "example": "OIDC Client for the verifier"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "Redirection URI to which the response will be sent",
                    "example": [
                      "https://example.com/callback"
                    ]
                  },
                  "responseTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Determines the authorization processing flow",
                    "example": [
                      "code"
                    ]
                  },
                  "grantTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "OAuth Grant Type",
                    "example": [
                      "authorization_code"
                    ]
                  },
                  "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "OAuth Token Endpoint Authentication Method",
                    "example": "client_secret_post"
                  },
                  "idTokenSignedResponseAlg": {
                    "type": "string",
                    "description": "Algorithm must match configured jwks, defaults to RS256",
                    "example": "ES256"
                  },
                  "applicationType": {
                    "type": "string",
                    "example": "web"
                  },
                  "logoUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "The logo to display above the QR code",
                    "example": "https://example.com/logo.png"
                  }
                },
                "required": [
                  "name",
                  "redirectUris"
                ],
                "title": "CreateOidcVerifierClientRequest"
              }
            ],
            "title": "CreateOidcVerifierClientResponse"
          }
        },
        "title": "GetOidcVerifierClientsResponse"
      },
      "InitialTokenRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "oneOf": [
              {
                "example": "G1s1EPMml4L0zFd63R1YP"
              }
            ],
            "type": "string"
          },
          "client_secret": {
            "type": "string",
            "example": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw"
          },
          "grant_type": {
            "type": "string",
            "example": "authorization_code"
          },
          "code": {
            "type": "string",
            "example": "shdT2ks5tg9b"
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri",
            "example": "https://my-client-rp.example.com"
          }
        },
        "title": "InitialTokenRequest"
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "grant_type": {
            "type": "string",
            "example": "authorization_code"
          },
          "refresh_token": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri"
          }
        },
        "title": "RefreshTokenRequest"
      },
      "TokenRequest": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "client_id": {
                "oneOf": [
                  {
                    "example": "G1s1EPMml4L0zFd63R1YP"
                  }
                ],
                "type": "string"
              },
              "client_secret": {
                "type": "string",
                "example": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw"
              },
              "grant_type": {
                "type": "string",
                "example": "authorization_code"
              },
              "code": {
                "type": "string",
                "example": "shdT2ks5tg9b"
              },
              "redirect_uri": {
                "type": "string",
                "format": "uri",
                "example": "https://my-client-rp.example.com"
              }
            },
            "title": "InitialTokenRequest"
          },
          {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "grant_type": {
                "type": "string",
                "example": "authorization_code"
              },
              "refresh_token": {
                "type": "string"
              },
              "redirect_uri": {
                "type": "string",
                "format": "uri"
              }
            },
            "title": "RefreshTokenRequest"
          }
        ],
        "title": "TokenRequest"
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "bearer"
            ]
          },
          "refresh_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          },
          "id_token": {
            "type": "string"
          }
        },
        "title": "TokenResponse"
      },
      "CreatePresentationQueryByExample": {
        "type": "object",
        "x-examples": {},
        "title": "CreatePresentationQueryByExample",
        "properties": {
          "type": {
            "type": "string",
            "example": "QueryByExample"
          },
          "credentialQuery": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "minProperties": 1,
              "properties": {
                "required": {
                  "type": "boolean"
                },
                "reason": {
                  "type": "string"
                },
                "example": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@context": {
                        "type": "array",
                        "description": "array of contexts",
                        "items": {}
                      },
                      "type": {
                        "oneOf": [
                          {
                            "type": "string",
                            "example": "AlumniCredential"
                          },
                          {
                            "type": "array",
                            "example": [
                              "[AlumniCredential]"
                            ],
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      },
                      "trustedIssuer": {
                        "type": "array",
                        "description": "array of trusted issuers",
                        "items": {
                          "type": "object",
                          "properties": {
                            "required": {
                              "type": "boolean"
                            },
                            "issuer": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "required",
                            "issuer"
                          ]
                        }
                      }
                    },
                    "required": [
                      "@context",
                      "type",
                      "trustedIssuer"
                    ]
                  }
                }
              },
              "required": [
                "required",
                "example"
              ]
            }
          }
        },
        "required": [
          "type",
          "credentialQuery"
        ]
      },
      "CreatePresentationQueryByFrame": {
        "type": "object",
        "title": "CreatePresentationQueryByFrame",
        "properties": {
          "type": {
            "type": "string"
          },
          "credentialQuery": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string"
                },
                "frame": {
                  "type": "object",
                  "required": [
                    "@context",
                    "type",
                    "credentialSubject"
                  ],
                  "properties": {
                    "@context": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "example": "VerifiableCredential",
                          "description": "The value must be VerifiableCredential"
                        },
                        {
                          "type": "array",
                          "example": [
                            "[VerifiableCredential, AlumniCredential]"
                          ],
                          "items": {
                            "type": "string",
                            "description": "VerifiableCredential must be the first value"
                          }
                        }
                      ]
                    },
                    "credentialSubject": {
                      "type": "object",
                      "required": [
                        "@explicit",
                        "educationalCredentialAwarded",
                        "familyName"
                      ],
                      "properties": {
                        "@explicit": {
                          "type": "boolean"
                        },
                        "educationalCredentialAwarded": {
                          "type": "object"
                        },
                        "familyName": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "trustedIssuer": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "properties": {
                      "required": {
                        "type": "boolean"
                      },
                      "issuer": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "required",
                      "issuer"
                    ]
                  }
                }
              },
              "required": [
                "reason",
                "frame",
                "trustedIssuer"
              ]
            }
          }
        },
        "required": [
          "type",
          "credentialQuery"
        ]
      },
      "CreatePresentationDidAuthTemplate": {
        "type": "object",
        "title": "CreatePresentationDidAuthTemplate",
        "properties": {
          "type": {
            "type": "string",
            "description": "DIDAuth",
            "example": "DIDAuth"
          }
        },
        "required": [
          "type"
        ]
      },
      "PresentationTemplateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
          },
          "domain": {
            "type": "string",
            "example": "tenant.vii.mattr.global"
          },
          "name": {
            "type": "string",
            "example": "alumni_credential_request"
          },
          "query": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "x-examples": {},
                  "title": "CreatePresentationQueryByExample",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "QueryByExample"
                    },
                    "credentialQuery": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "minProperties": 1,
                        "properties": {
                          "required": {
                            "type": "boolean"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "example": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "@context": {
                                  "type": "array",
                                  "description": "array of contexts",
                                  "items": {}
                                },
                                "type": {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "example": "AlumniCredential"
                                    },
                                    {
                                      "type": "array",
                                      "example": [
                                        "[AlumniCredential]"
                                      ],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ]
                                },
                                "trustedIssuer": {
                                  "type": "array",
                                  "description": "array of trusted issuers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "issuer": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "required",
                                      "issuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "@context",
                                "type",
                                "trustedIssuer"
                              ]
                            }
                          }
                        },
                        "required": [
                          "required",
                          "example"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "credentialQuery"
                  ]
                },
                {
                  "type": "object",
                  "title": "CreatePresentationQueryByFrame",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "credentialQuery": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string"
                          },
                          "frame": {
                            "type": "object",
                            "required": [
                              "@context",
                              "type",
                              "credentialSubject"
                            ],
                            "properties": {
                              "@context": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "example": "VerifiableCredential",
                                    "description": "The value must be VerifiableCredential"
                                  },
                                  {
                                    "type": "array",
                                    "example": [
                                      "[VerifiableCredential, AlumniCredential]"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "description": "VerifiableCredential must be the first value"
                                    }
                                  }
                                ]
                              },
                              "credentialSubject": {
                                "type": "object",
                                "required": [
                                  "@explicit",
                                  "educationalCredentialAwarded",
                                  "familyName"
                                ],
                                "properties": {
                                  "@explicit": {
                                    "type": "boolean"
                                  },
                                  "educationalCredentialAwarded": {
                                    "type": "object"
                                  },
                                  "familyName": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "trustedIssuer": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "properties": {
                                "required": {
                                  "type": "boolean"
                                },
                                "issuer": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "required",
                                "issuer"
                              ]
                            }
                          }
                        },
                        "required": [
                          "reason",
                          "frame",
                          "trustedIssuer"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "credentialQuery"
                  ]
                },
                {
                  "type": "object",
                  "title": "CreatePresentationDidAuthTemplate",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "DIDAuth",
                      "example": "DIDAuth"
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "id",
          "domain",
          "name",
          "query"
        ],
        "title": "PresentationTemplateResponse"
      },
      "PresentationTemplateArrayResponse": {
        "type": "object",
        "properties": {
          "nextCursor": {
            "type": "string",
            "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM",
            "description": "Starting point for next cursor to use in a page"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                },
                "domain": {
                  "type": "string",
                  "example": "tenant.vii.mattr.global"
                },
                "name": {
                  "type": "string",
                  "example": "alumni_credential_request"
                },
                "query": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "x-examples": {},
                        "title": "CreatePresentationQueryByExample",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "QueryByExample"
                          },
                          "credentialQuery": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "minProperties": 1,
                              "properties": {
                                "required": {
                                  "type": "boolean"
                                },
                                "reason": {
                                  "type": "string"
                                },
                                "example": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "@context": {
                                        "type": "array",
                                        "description": "array of contexts",
                                        "items": {}
                                      },
                                      "type": {
                                        "oneOf": [
                                          {
                                            "type": "string",
                                            "example": "AlumniCredential"
                                          },
                                          {
                                            "type": "array",
                                            "example": [
                                              "[AlumniCredential]"
                                            ],
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      },
                                      "trustedIssuer": {
                                        "type": "array",
                                        "description": "array of trusted issuers",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "required": {
                                              "type": "boolean"
                                            },
                                            "issuer": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "required",
                                            "issuer"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "@context",
                                      "type",
                                      "trustedIssuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "required",
                                "example"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type",
                          "credentialQuery"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "CreatePresentationQueryByFrame",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "credentialQuery": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "reason": {
                                  "type": "string"
                                },
                                "frame": {
                                  "type": "object",
                                  "required": [
                                    "@context",
                                    "type",
                                    "credentialSubject"
                                  ],
                                  "properties": {
                                    "@context": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "type": {
                                      "oneOf": [
                                        {
                                          "type": "string",
                                          "example": "VerifiableCredential",
                                          "description": "The value must be VerifiableCredential"
                                        },
                                        {
                                          "type": "array",
                                          "example": [
                                            "[VerifiableCredential, AlumniCredential]"
                                          ],
                                          "items": {
                                            "type": "string",
                                            "description": "VerifiableCredential must be the first value"
                                          }
                                        }
                                      ]
                                    },
                                    "credentialSubject": {
                                      "type": "object",
                                      "required": [
                                        "@explicit",
                                        "educationalCredentialAwarded",
                                        "familyName"
                                      ],
                                      "properties": {
                                        "@explicit": {
                                          "type": "boolean"
                                        },
                                        "educationalCredentialAwarded": {
                                          "type": "object"
                                        },
                                        "familyName": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                },
                                "trustedIssuer": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 0,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "issuer": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "required",
                                      "issuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "reason",
                                "frame",
                                "trustedIssuer"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type",
                          "credentialQuery"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "CreatePresentationDidAuthTemplate",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "DIDAuth",
                            "example": "DIDAuth"
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "id",
                "domain",
                "name",
                "query"
              ],
              "title": "PresentationTemplateResponse"
            }
          }
        },
        "title": "PresentationTemplateArrayResponse"
      },
      "CreatePresentationTemplate": {
        "type": "object",
        "title": "CreatePresentationTemplate",
        "description": "",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Must match domain of the tenant"
          },
          "name": {
            "type": "string",
            "description": "Internal descriptor only"
          },
          "query": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "x-examples": {},
                  "title": "CreatePresentationQueryByExample",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "QueryByExample"
                    },
                    "credentialQuery": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "minProperties": 1,
                        "properties": {
                          "required": {
                            "type": "boolean"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "example": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "@context": {
                                  "type": "array",
                                  "description": "array of contexts",
                                  "items": {}
                                },
                                "type": {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "example": "AlumniCredential"
                                    },
                                    {
                                      "type": "array",
                                      "example": [
                                        "[AlumniCredential]"
                                      ],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ]
                                },
                                "trustedIssuer": {
                                  "type": "array",
                                  "description": "array of trusted issuers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "issuer": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "required",
                                      "issuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "@context",
                                "type",
                                "trustedIssuer"
                              ]
                            }
                          }
                        },
                        "required": [
                          "required",
                          "example"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "credentialQuery"
                  ]
                },
                {
                  "type": "object",
                  "title": "CreatePresentationQueryByFrame",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "credentialQuery": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string"
                          },
                          "frame": {
                            "type": "object",
                            "required": [
                              "@context",
                              "type",
                              "credentialSubject"
                            ],
                            "properties": {
                              "@context": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "example": "VerifiableCredential",
                                    "description": "The value must be VerifiableCredential"
                                  },
                                  {
                                    "type": "array",
                                    "example": [
                                      "[VerifiableCredential, AlumniCredential]"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "description": "VerifiableCredential must be the first value"
                                    }
                                  }
                                ]
                              },
                              "credentialSubject": {
                                "type": "object",
                                "required": [
                                  "@explicit",
                                  "educationalCredentialAwarded",
                                  "familyName"
                                ],
                                "properties": {
                                  "@explicit": {
                                    "type": "boolean"
                                  },
                                  "educationalCredentialAwarded": {
                                    "type": "object"
                                  },
                                  "familyName": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "trustedIssuer": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "properties": {
                                "required": {
                                  "type": "boolean"
                                },
                                "issuer": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "required",
                                "issuer"
                              ]
                            }
                          }
                        },
                        "required": [
                          "reason",
                          "frame",
                          "trustedIssuer"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "credentialQuery"
                  ]
                },
                {
                  "type": "object",
                  "title": "CreatePresentationDidAuthTemplate",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "DIDAuth",
                      "example": "DIDAuth"
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "domain",
          "name",
          "query"
        ]
      },
      "UpdatePresentationTemplate": {
        "title": "UpdatePresentationTemplate",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "title": "CreatePresentationTemplate",
            "description": "",
            "properties": {
              "domain": {
                "type": "string",
                "description": "Must match domain of the tenant"
              },
              "name": {
                "type": "string",
                "description": "Internal descriptor only"
              },
              "query": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "x-examples": {},
                      "title": "CreatePresentationQueryByExample",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "QueryByExample"
                        },
                        "credentialQuery": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "minProperties": 1,
                            "properties": {
                              "required": {
                                "type": "boolean"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "example": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "@context": {
                                      "type": "array",
                                      "description": "array of contexts",
                                      "items": {}
                                    },
                                    "type": {
                                      "oneOf": [
                                        {
                                          "type": "string",
                                          "example": "AlumniCredential"
                                        },
                                        {
                                          "type": "array",
                                          "example": [
                                            "[AlumniCredential]"
                                          ],
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "trustedIssuer": {
                                      "type": "array",
                                      "description": "array of trusted issuers",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "required": {
                                            "type": "boolean"
                                          },
                                          "issuer": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "required",
                                          "issuer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "@context",
                                    "type",
                                    "trustedIssuer"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "required",
                              "example"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "credentialQuery"
                      ]
                    },
                    {
                      "type": "object",
                      "title": "CreatePresentationQueryByFrame",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "credentialQuery": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "reason": {
                                "type": "string"
                              },
                              "frame": {
                                "type": "object",
                                "required": [
                                  "@context",
                                  "type",
                                  "credentialSubject"
                                ],
                                "properties": {
                                  "@context": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "example": "VerifiableCredential",
                                        "description": "The value must be VerifiableCredential"
                                      },
                                      {
                                        "type": "array",
                                        "example": [
                                          "[VerifiableCredential, AlumniCredential]"
                                        ],
                                        "items": {
                                          "type": "string",
                                          "description": "VerifiableCredential must be the first value"
                                        }
                                      }
                                    ]
                                  },
                                  "credentialSubject": {
                                    "type": "object",
                                    "required": [
                                      "@explicit",
                                      "educationalCredentialAwarded",
                                      "familyName"
                                    ],
                                    "properties": {
                                      "@explicit": {
                                        "type": "boolean"
                                      },
                                      "educationalCredentialAwarded": {
                                        "type": "object"
                                      },
                                      "familyName": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              },
                              "trustedIssuer": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 0,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "issuer": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "required",
                                    "issuer"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "reason",
                              "frame",
                              "trustedIssuer"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "credentialQuery"
                      ]
                    },
                    {
                      "type": "object",
                      "title": "CreatePresentationDidAuthTemplate",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "DIDAuth",
                          "example": "DIDAuth"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  ]
                }
              }
            },
            "required": [
              "domain",
              "name",
              "query"
            ]
          }
        ]
      },
      "CreatePresentationRequestRequest": {
        "type": "object",
        "required": [
          "templateId",
          "did"
        ],
        "properties": {
          "challenge": {
            "type": "string",
            "description": "Challenge can be used to match the response to a request",
            "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
          },
          "did": {
            "type": "string",
            "description": "DID of the Verifier",
            "example": "did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr"
          },
          "templateId": {
            "type": "string",
            "description": "Presentation Request Template id",
            "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
          },
          "expiresTime": {
            "type": "number",
            "description": "Unix timestamp in ms after which the request will be expired",
            "example": 1592955632103
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "Endpoint that will receive the Verifiable Presentation",
            "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
          }
        },
        "title": "CreatePresentationRequestRequest"
      },
      "CreatePresentationRequestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Presentation Request id",
            "example": "c74128a0-9949-11ea-9554-b5a630b3c119"
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "Endpoint that will receive the Verifiable Presentation",
            "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
          },
          "request": {
            "type": "object",
            "description": "Presentation Request Details",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Presentation Request id",
                "example": "c74128a0-9949-11ea-9554-b5a630b3c119"
              },
              "type": {
                "type": "string",
                "format": "uri",
                "description": "Presentation Request schema",
                "example": "https://mattr.global/schemas/verifiable-presentation/request/QueryByExample"
              },
              "from": {
                "type": "string",
                "description": "Verifier DID",
                "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
              },
              "created_time": {
                "type": "number",
                "description": "Creation time",
                "example": 1606709582907
              },
              "expires_time": {
                "type": "number",
                "description": "Expiry time",
                "example": 2594859115000
              },
              "reply_url": {
                "type": "string",
                "description": "Endpoint that will receive the Verifiable Presentation",
                "example": "https://tenant.vii.mattr.global/core/v1/presentations/response"
              },
              "reply_to": {
                "type": "array",
                "description": "Verifier DID",
                "items": {
                  "type": "string",
                  "example": "did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq"
                }
              },
              "body": {
                "description": "Definition of what type of Credential is being requested",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "64e45290-9980-11ea-b872-f1bee5fb328f"
                      },
                      "domain": {
                        "type": "string",
                        "example": "tenant.vii.mattr.global"
                      },
                      "name": {
                        "type": "string",
                        "example": "alumni_credential_request"
                      },
                      "query": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "x-examples": {},
                              "title": "CreatePresentationQueryByExample",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "QueryByExample"
                                },
                                "credentialQuery": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "minProperties": 1,
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "reason": {
                                        "type": "string"
                                      },
                                      "example": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "@context": {
                                              "type": "array",
                                              "description": "array of contexts",
                                              "items": {}
                                            },
                                            "type": {
                                              "oneOf": [
                                                {
                                                  "type": "string",
                                                  "example": "AlumniCredential"
                                                },
                                                {
                                                  "type": "array",
                                                  "example": [
                                                    "[AlumniCredential]"
                                                  ],
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            },
                                            "trustedIssuer": {
                                              "type": "array",
                                              "description": "array of trusted issuers",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "required": {
                                                    "type": "boolean"
                                                  },
                                                  "issuer": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "required",
                                                  "issuer"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "@context",
                                            "type",
                                            "trustedIssuer"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "required",
                                      "example"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "credentialQuery"
                              ]
                            },
                            {
                              "type": "object",
                              "title": "CreatePresentationQueryByFrame",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "credentialQuery": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "reason": {
                                        "type": "string"
                                      },
                                      "frame": {
                                        "type": "object",
                                        "required": [
                                          "@context",
                                          "type",
                                          "credentialSubject"
                                        ],
                                        "properties": {
                                          "@context": {
                                            "type": "array",
                                            "items": {
                                              "type": "object"
                                            }
                                          },
                                          "type": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "example": "VerifiableCredential",
                                                "description": "The value must be VerifiableCredential"
                                              },
                                              {
                                                "type": "array",
                                                "example": [
                                                  "[VerifiableCredential, AlumniCredential]"
                                                ],
                                                "items": {
                                                  "type": "string",
                                                  "description": "VerifiableCredential must be the first value"
                                                }
                                              }
                                            ]
                                          },
                                          "credentialSubject": {
                                            "type": "object",
                                            "required": [
                                              "@explicit",
                                              "educationalCredentialAwarded",
                                              "familyName"
                                            ],
                                            "properties": {
                                              "@explicit": {
                                                "type": "boolean"
                                              },
                                              "educationalCredentialAwarded": {
                                                "type": "object"
                                              },
                                              "familyName": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trustedIssuer": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "minItems": 0,
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "required": {
                                              "type": "boolean"
                                            },
                                            "issuer": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "required",
                                            "issuer"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "reason",
                                      "frame",
                                      "trustedIssuer"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "credentialQuery"
                              ]
                            },
                            {
                              "type": "object",
                              "title": "CreatePresentationDidAuthTemplate",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "DIDAuth",
                                  "example": "DIDAuth"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "domain",
                      "name",
                      "query"
                    ],
                    "title": "PresentationTemplateResponse"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "challenge": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Challenge to match the response to a request",
                        "example": "e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "title": "CreatePresentationRequestResponse"
      },
      "CreatePresentationRequestBody": {
        "title": "CreatePresentationRequestBody",
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "example": "tenant.vii.mattr.global"
          },
          "holderDidUrl": {
            "type": "string",
            "example": "did:key:z6MkfxQU7dy8eKxyHpG267FV23agZQu9zmokd8BprepfHALi",
            "format": "uri"
          },
          "credentials": {
            "type": "array",
            "description": "Array of credentials for W3C VC Presentation or ignore for DIDAuth",
            "items": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "array",
                  "example": [
                    "https://www.w3.org/2018/credentials/v1",
                    "https://www.w3.org/2018/credentials/examples/v1"
                  ],
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                  }
                },
                "type": {
                  "type": "array",
                  "example": [
                    "VerifiableCredential",
                    "AlumniCredential"
                  ],
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "example": "\"AlumniCredential\", \"VerifiableCredential\""
                  }
                },
                "issuer": {
                  "description": "Includes issuer id (did) and its domain (inside name parameter)",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        },
                        "name": {
                          "type": "string",
                          "example": "Example University"
                        }
                      }
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "issuanceDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2020-05-02T12:06:29.156Z"
                },
                "credentialStatus": {
                  "type": "object",
                  "description": "Credential status location information",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID for the credential status",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                    },
                    "type": {
                      "type": "string",
                      "description": "Indicates that the status contains revocation information",
                      "example": "RevocationList2020Status"
                    },
                    "revocationListIndex": {
                      "type": "integer",
                      "example": 1,
                      "description": "The location within the revocation list for the credential"
                    },
                    "revocationListCredential": {
                      "type": "string",
                      "description": "The location of the revocation list",
                      "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                    }
                  },
                  "title": "CredentialStatus"
                },
                "credentialSubject": {
                  "type": "object",
                  "example": {
                    "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                    "givenName": "Jamie",
                    "familyName": "Doe"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                    },
                    "givenName": {
                      "type": "string",
                      "example": "Jamie"
                    },
                    "familyName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "alumniOf": {
                      "type": "string",
                      "example": "Example University"
                    }
                  }
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "Ed25519Signature2018"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-05-02T12:06:29Z"
                    },
                    "jws": {
                      "type": "string",
                      "description": "Compact form of JWS",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    },
                    "proofPurpose": {
                      "type": "string",
                      "example": "assertionMethod"
                    },
                    "verificationMethod": {
                      "type": "string",
                      "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                    }
                  },
                  "title": "ED25519Signature2018"
                },
                "name": {
                  "type": "string",
                  "example": "Course credential",
                  "description": "Name of the credential (requires v2 data model)"
                },
                "description": {
                  "type": "string",
                  "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                  "description": "Description of the credential (requires v2 data model)"
                }
              },
              "required": [
                "@context",
                "type",
                "issuanceDate",
                "credentialSubject",
                "proof"
              ],
              "title": "VerifiableCredential"
            }
          },
          "challenge": {
            "type": "string",
            "example": "e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60",
            "format": "uuid"
          }
        },
        "required": [
          "domain",
          "holderDidUrl",
          "challenge"
        ]
      },
      "VerifiablePresentation": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "VerifiablePresentation",
        "properties": {
          "presentation": {
            "type": "object",
            "required": [
              "@context",
              "type",
              "verifiableCredential",
              "id",
              "holder",
              "proof"
            ],
            "properties": {
              "@context": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "type": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "verifiableCredential": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "array",
                      "example": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://www.w3.org/2018/credentials/examples/v1"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\""
                      }
                    },
                    "type": {
                      "type": "array",
                      "example": [
                        "VerifiableCredential",
                        "AlumniCredential"
                      ],
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "example": "\"AlumniCredential\", \"VerifiableCredential\""
                      }
                    },
                    "issuer": {
                      "description": "Includes issuer id (did) and its domain (inside name parameter)",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                            },
                            "name": {
                              "type": "string",
                              "example": "Example University"
                            }
                          }
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "issuanceDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-05-02T12:06:29.156Z"
                    },
                    "credentialStatus": {
                      "type": "object",
                      "description": "Credential status location information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique ID for the credential status",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates that the status contains revocation information",
                          "example": "RevocationList2020Status"
                        },
                        "revocationListIndex": {
                          "type": "integer",
                          "example": 1,
                          "description": "The location within the revocation list for the credential"
                        },
                        "revocationListCredential": {
                          "type": "string",
                          "description": "The location of the revocation list",
                          "example": "https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3"
                        }
                      },
                      "title": "CredentialStatus"
                    },
                    "credentialSubject": {
                      "type": "object",
                      "example": {
                        "id": "did:example:abcdb1f712ebc6f1c276e12ec21",
                        "givenName": "Jamie",
                        "familyName": "Doe"
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY"
                        },
                        "givenName": {
                          "type": "string",
                          "example": "Jamie"
                        },
                        "familyName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "alumniOf": {
                          "type": "string",
                          "example": "Example University"
                        }
                      }
                    },
                    "proof": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2018"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-05-02T12:06:29Z"
                        },
                        "jws": {
                          "type": "string",
                          "description": "Compact form of JWS",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "assertionMethod"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:issuer:abcdb1f712ebc6f1c276e12ec21"
                        }
                      },
                      "title": "ED25519Signature2018"
                    },
                    "name": {
                      "type": "string",
                      "example": "Course credential",
                      "description": "Name of the credential (requires v2 data model)"
                    },
                    "description": {
                      "type": "string",
                      "example": "This credential shows that the person has attended the mention course and attained the relevant awards.",
                      "description": "Description of the credential (requires v2 data model)"
                    }
                  },
                  "required": [
                    "@context",
                    "type",
                    "issuanceDate",
                    "credentialSubject",
                    "proof"
                  ],
                  "title": "VerifiableCredential"
                }
              },
              "id": {
                "type": "string",
                "minLength": 1
              },
              "holder": {
                "type": "string",
                "minLength": 1
              },
              "proof": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "created": {
                      "type": "string",
                      "minLength": 1
                    },
                    "challenge": {
                      "type": "string",
                      "minLength": 1
                    },
                    "domain": {
                      "type": "string",
                      "minLength": 1
                    },
                    "jws": {
                      "type": "string",
                      "minLength": 1
                    },
                    "proofPurpose": {
                      "type": "string",
                      "minLength": 1
                    },
                    "verificationMethod": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "type",
                    "created",
                    "challenge",
                    "domain",
                    "jws",
                    "proofPurpose",
                    "verificationMethod"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "presentation"
        ]
      },
      "VerifyPresentation": {
        "title": "VerifyPresentation",
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "verified"
        ]
      },
      "DocumentSignerMetadataKeyUsage": {
        "title": "DocumentSignerMetadataKeyUsage",
        "type": "object",
        "properties": {
          "vaccination": {
            "type": "boolean"
          },
          "test": {
            "type": "boolean"
          },
          "recovery": {
            "type": "boolean"
          }
        }
      },
      "DocumentSignerCertificateData": {
        "title": "DocumentSignerMetadata",
        "type": "object",
        "properties": {
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          },
          "keyUsage": {
            "title": "DocumentSignerMetadataKeyUsage",
            "type": "object",
            "properties": {
              "vaccination": {
                "type": "boolean"
              },
              "test": {
                "type": "boolean"
              },
              "recovery": {
                "type": "boolean"
              }
            }
          },
          "country": {
            "type": "string",
            "example": "NZ"
          }
        }
      },
      "DocumentSignerPublicKey": {
        "title": "DocumentSignerPublicKey",
        "type": "object",
        "properties": {
          "kty": {
            "type": "string",
            "example": "EC"
          },
          "crv": {
            "type": "string",
            "example": "P-256"
          },
          "x": {
            "type": "string",
            "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
          },
          "y": {
            "type": "string",
            "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
          }
        }
      },
      "DocumentSigner": {
        "title": "DocumentSigner",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "format": "uuid"
          },
          "certificateKid": {
            "type": "string",
            "example": "a2c5ab3515c03fa4"
          },
          "certificateFingeprint": {
            "type": "string",
            "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
          },
          "certificatePem": {
            "type": "string",
            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
            "description": "PEM encoded X.509 certificate"
          },
          "certificateData": {
            "title": "DocumentSignerMetadata",
            "type": "object",
            "properties": {
              "notBefore": {
                "type": "string",
                "format": "date-time"
              },
              "notAfter": {
                "type": "string",
                "format": "date-time"
              },
              "keyUsage": {
                "title": "DocumentSignerMetadataKeyUsage",
                "type": "object",
                "properties": {
                  "vaccination": {
                    "type": "boolean"
                  },
                  "test": {
                    "type": "boolean"
                  },
                  "recovery": {
                    "type": "boolean"
                  }
                }
              },
              "country": {
                "type": "string",
                "example": "NZ"
              }
            }
          },
          "publicKey": {
            "title": "DocumentSignerPublicKey",
            "type": "object",
            "properties": {
              "kty": {
                "type": "string",
                "example": "EC"
              },
              "crv": {
                "type": "string",
                "example": "P-256"
              },
              "x": {
                "type": "string",
                "example": "jBGmKneALVXlFUHNERNZhhqZx1TH6sfTjDD79hGgbuM"
              },
              "y": {
                "type": "string",
                "example": "VIRs4SWz1jzFa_1LxVEiscXChcYmYM0ATILNbeD5XWg"
              }
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "DocumentSignerRequest": {
        "title": "DocumentSigner",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "certificatePem": {
            "type": "string",
            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
            "description": "PEM encoded X.509 certificate"
          }
        }
      },
      "TrustedDocumentSigner": {
        "title": "TrustedDocumentSigner",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "certificateKid": {
            "type": "string",
            "example": "a2c5ab3515c03fa4"
          },
          "certificateFingeprint": {
            "type": "string",
            "example": "a2c5ab3515c03fa45b7d005dceebfcd4f1e83532aac31101ee3c6218d8ebff10"
          },
          "certificatePem": {
            "type": "string",
            "description": "PEM encoded X.509 certificate",
            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-----END CERTIFICATE-----"
          },
          "certificateData": {
            "title": "DocumentSignerMetadata",
            "type": "object",
            "properties": {
              "notBefore": {
                "type": "string",
                "format": "date-time"
              },
              "notAfter": {
                "type": "string",
                "format": "date-time"
              },
              "keyUsage": {
                "title": "DocumentSignerMetadataKeyUsage",
                "type": "object",
                "properties": {
                  "vaccination": {
                    "type": "boolean"
                  },
                  "test": {
                    "type": "boolean"
                  },
                  "recovery": {
                    "type": "boolean"
                  }
                }
              },
              "country": {
                "type": "string",
                "example": "NZ"
              }
            }
          }
        }
      },
      "TrustedDocumentSignerRequest": {
        "title": "DocumentSigner",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "certificatePem": {
            "type": "string",
            "example": "-----BEGIN CERTIFICATE----- MIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV BAMeCgBNAGEAdAB0AHIwHhcNMjEwNzExMjEzMDU3WhcNMjIwNzExMjEzMDU3WjAg MR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq hkjOPQMBBwNCAAQtyjLgdBIkwZbwQjnJ1J+1md176GwiWESb0hAc3O0ulaSIYRQk HrtZk0/Wmxj/iiU/QAdQ0MxHgTw3tdceZ3gIo0gwRjASBgNVHRMBAf8ECDAGAQH/ AgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQEBBgsrBgEEAY43j2UBAgYLKwYBBAGO N49lAQMwCgYIKoZIzj0EAwIDRwAwRAIhAI5zqK+cFUgJiVc+kAKNRuBvrjkRRq9C fs+oaGyHWh5AAh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -----END CERTIFICATE-----",
            "description": "PEM encoded X.509 certificate"
          },
          "public": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "certificatePem",
          "public"
        ]
      },
      "TrustedDocumentSignerUpdateRequest": {
        "title": "DocumentSigner",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "public": {
            "type": "boolean"
          }
        }
      },
      "DigitalCovidCertificateName": {
        "title": "DigitalCovidCertificateName",
        "type": "object",
        "required": [
          "fnt"
        ],
        "properties": {
          "fn": {
            "type": "string",
            "example": "Musterfrau-Gößinger",
            "description": "Surname"
          },
          "fnt": {
            "type": "string",
            "example": "MUSTERFRAU<GOESSINGER",
            "description": "Standardized Surname"
          },
          "gn": {
            "type": "string",
            "example": "Gabriele",
            "description": "Forename"
          },
          "gnt": {
            "type": "string",
            "example": "GABRIELE",
            "description": "Standardized Forename"
          }
        }
      },
      "DigitalCovidCertificateVaccineWithoutCertificateId": {
        "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
        "type": "object",
        "required": [
          "tg",
          "vp",
          "mp",
          "ma",
          "dn",
          "sd",
          "dt",
          "co",
          "is"
        ],
        "properties": {
          "tg": {
            "type": "string",
            "example": "840539006",
            "description": "Disease Targeted"
          },
          "vp": {
            "type": "string",
            "example": "1119349007",
            "description": "Vaccine"
          },
          "mp": {
            "type": "string",
            "example": "EU/1/20/1528",
            "description": "Vaccine Medicinal Product"
          },
          "ma": {
            "type": "string",
            "example": "ORG-100030215",
            "description": "Market Authorization Holder"
          },
          "dn": {
            "type": "number",
            "example": 1,
            "description": "Dose Number"
          },
          "sd": {
            "type": "number",
            "example": 2,
            "description": "Total Series of Doses"
          },
          "dt": {
            "type": "string",
            "format": "date",
            "example": "2021-02-18",
            "description": "Date Administered ISO8601"
          },
          "co": {
            "type": "string",
            "example": "NZ",
            "description": "Country of adminisration"
          },
          "is": {
            "type": "string",
            "example": "Kakapo Health",
            "description": "Issuer"
          }
        }
      },
      "DigitalCovidCertificateTestWithoutCertificateId": {
        "title": "DigitalCovidCertificateTestWithoutCertificateId",
        "type": "object",
        "required": [
          "tg",
          "tt",
          "sc",
          "tr",
          "co",
          "is"
        ],
        "properties": {
          "tg": {
            "type": "string",
            "example": "840539006",
            "description": "Disease Targeted"
          },
          "tt": {
            "type": "string",
            "example": "LP6464-4",
            "description": "Type of test"
          },
          "nm": {
            "type": "string",
            "example": "Roche LightCycler qPCR",
            "description": "NAA Test Name"
          },
          "ma": {
            "type": "string",
            "description": "RAT Test name and manufacturer"
          },
          "sc": {
            "type": "string",
            "description": "Date/Time of Sample Collection",
            "format": "date-time"
          },
          "tr": {
            "type": "string",
            "description": "Test result"
          },
          "tc": {
            "type": "string",
            "description": " Testing Centre"
          },
          "co": {
            "type": "string",
            "description": "Country of test"
          },
          "is": {
            "type": "string",
            "description": "Certificate Issuer"
          }
        }
      },
      "DigitalCovidCertificateRecoveryWithoutCertificateId": {
        "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
        "type": "object",
        "required": [
          "tg",
          "fr",
          "co",
          "is",
          "df",
          "du"
        ],
        "properties": {
          "tg": {
            "type": "string",
            "example": "840539006",
            "description": "Disease Targeted"
          },
          "fr": {
            "type": "string",
            "format": "date",
            "example": "2021-02-18",
            "description": "Complete date of first positive NAA test result"
          },
          "co": {
            "type": "string",
            "description": "Country of test"
          },
          "is": {
            "type": "string",
            "description": "Certificate Issuer"
          },
          "df": {
            "type": "string",
            "format": "date",
            "example": "2021-02-18",
            "description": "Certificate valid from"
          },
          "du": {
            "type": "string",
            "format": "date",
            "example": "2022-02-18",
            "description": "Certificate valid until"
          }
        }
      },
      "DigitalCovidCertificateWithoutCertificateId": {
        "title": "DigitalCovidCertificateWithoutCertificateId",
        "type": "object",
        "required": [
          "ver",
          "nam",
          "dob"
        ],
        "properties": {
          "ver": {
            "type": "string",
            "enum": [
              "1.3.0"
            ],
            "description": "Schema version of the DCC payload to use, only latest released version is supported"
          },
          "nam": {
            "title": "DigitalCovidCertificateName",
            "type": "object",
            "required": [
              "fnt"
            ],
            "properties": {
              "fn": {
                "type": "string",
                "example": "Musterfrau-Gößinger",
                "description": "Surname"
              },
              "fnt": {
                "type": "string",
                "example": "MUSTERFRAU<GOESSINGER",
                "description": "Standardized Surname"
              },
              "gn": {
                "type": "string",
                "example": "Gabriele",
                "description": "Forename"
              },
              "gnt": {
                "type": "string",
                "example": "GABRIELE",
                "description": "Standardized Forename"
              }
            }
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "Date of Birth",
            "example": "1979-04-14"
          },
          "v": {
            "type": "array",
            "description": "Vaccination Group",
            "items": {
              "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
              "type": "object",
              "required": [
                "tg",
                "vp",
                "mp",
                "ma",
                "dn",
                "sd",
                "dt",
                "co",
                "is"
              ],
              "properties": {
                "tg": {
                  "type": "string",
                  "example": "840539006",
                  "description": "Disease Targeted"
                },
                "vp": {
                  "type": "string",
                  "example": "1119349007",
                  "description": "Vaccine"
                },
                "mp": {
                  "type": "string",
                  "example": "EU/1/20/1528",
                  "description": "Vaccine Medicinal Product"
                },
                "ma": {
                  "type": "string",
                  "example": "ORG-100030215",
                  "description": "Market Authorization Holder"
                },
                "dn": {
                  "type": "number",
                  "example": 1,
                  "description": "Dose Number"
                },
                "sd": {
                  "type": "number",
                  "example": 2,
                  "description": "Total Series of Doses"
                },
                "dt": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-02-18",
                  "description": "Date Administered ISO8601"
                },
                "co": {
                  "type": "string",
                  "example": "NZ",
                  "description": "Country of adminisration"
                },
                "is": {
                  "type": "string",
                  "example": "Kakapo Health",
                  "description": "Issuer"
                }
              }
            },
            "minItems": 1,
            "maxItems": 1
          },
          "t": {
            "type": "array",
            "description": "Test Group",
            "items": {
              "title": "DigitalCovidCertificateTestWithoutCertificateId",
              "type": "object",
              "required": [
                "tg",
                "tt",
                "sc",
                "tr",
                "co",
                "is"
              ],
              "properties": {
                "tg": {
                  "type": "string",
                  "example": "840539006",
                  "description": "Disease Targeted"
                },
                "tt": {
                  "type": "string",
                  "example": "LP6464-4",
                  "description": "Type of test"
                },
                "nm": {
                  "type": "string",
                  "example": "Roche LightCycler qPCR",
                  "description": "NAA Test Name"
                },
                "ma": {
                  "type": "string",
                  "description": "RAT Test name and manufacturer"
                },
                "sc": {
                  "type": "string",
                  "description": "Date/Time of Sample Collection",
                  "format": "date-time"
                },
                "tr": {
                  "type": "string",
                  "description": "Test result"
                },
                "tc": {
                  "type": "string",
                  "description": " Testing Centre"
                },
                "co": {
                  "type": "string",
                  "description": "Country of test"
                },
                "is": {
                  "type": "string",
                  "description": "Certificate Issuer"
                }
              }
            },
            "minItems": 1,
            "maxItems": 1
          },
          "r": {
            "type": "array",
            "description": "Recovery Group",
            "items": {
              "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
              "type": "object",
              "required": [
                "tg",
                "fr",
                "co",
                "is",
                "df",
                "du"
              ],
              "properties": {
                "tg": {
                  "type": "string",
                  "example": "840539006",
                  "description": "Disease Targeted"
                },
                "fr": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-02-18",
                  "description": "Complete date of first positive NAA test result"
                },
                "co": {
                  "type": "string",
                  "description": "Country of test"
                },
                "is": {
                  "type": "string",
                  "description": "Certificate Issuer"
                },
                "df": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-02-18",
                  "description": "Certificate valid from"
                },
                "du": {
                  "type": "string",
                  "format": "date",
                  "example": "2022-02-18",
                  "description": "Certificate valid until"
                }
              }
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      },
      "SignDCCRequest": {
        "title": "SignDCCRequest",
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "Note - this field is optional and if not supplied MATTR VII will use the default expiry which is 1 year as recommended by the DCC specification"
          },
          "documentSignerId": {
            "type": "string",
            "format": "uuid",
            "description": "Note - this field is optional and if not supplied, MATTR VII will attempt to automatically decide which document signer to use."
          },
          "payload": {
            "title": "DigitalCovidCertificateWithoutCertificateId",
            "type": "object",
            "required": [
              "ver",
              "nam",
              "dob"
            ],
            "properties": {
              "ver": {
                "type": "string",
                "enum": [
                  "1.3.0"
                ],
                "description": "Schema version of the DCC payload to use, only latest released version is supported"
              },
              "nam": {
                "title": "DigitalCovidCertificateName",
                "type": "object",
                "required": [
                  "fnt"
                ],
                "properties": {
                  "fn": {
                    "type": "string",
                    "example": "Musterfrau-Gößinger",
                    "description": "Surname"
                  },
                  "fnt": {
                    "type": "string",
                    "example": "MUSTERFRAU<GOESSINGER",
                    "description": "Standardized Surname"
                  },
                  "gn": {
                    "type": "string",
                    "example": "Gabriele",
                    "description": "Forename"
                  },
                  "gnt": {
                    "type": "string",
                    "example": "GABRIELE",
                    "description": "Standardized Forename"
                  }
                }
              },
              "dob": {
                "type": "string",
                "format": "date",
                "description": "Date of Birth",
                "example": "1979-04-14"
              },
              "v": {
                "type": "array",
                "description": "Vaccination Group",
                "items": {
                  "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "vp",
                    "mp",
                    "ma",
                    "dn",
                    "sd",
                    "dt",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "vp": {
                      "type": "string",
                      "example": "1119349007",
                      "description": "Vaccine"
                    },
                    "mp": {
                      "type": "string",
                      "example": "EU/1/20/1528",
                      "description": "Vaccine Medicinal Product"
                    },
                    "ma": {
                      "type": "string",
                      "example": "ORG-100030215",
                      "description": "Market Authorization Holder"
                    },
                    "dn": {
                      "type": "number",
                      "example": 1,
                      "description": "Dose Number"
                    },
                    "sd": {
                      "type": "number",
                      "example": 2,
                      "description": "Total Series of Doses"
                    },
                    "dt": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Date Administered ISO8601"
                    },
                    "co": {
                      "type": "string",
                      "example": "NZ",
                      "description": "Country of adminisration"
                    },
                    "is": {
                      "type": "string",
                      "example": "Kakapo Health",
                      "description": "Issuer"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              },
              "t": {
                "type": "array",
                "description": "Test Group",
                "items": {
                  "title": "DigitalCovidCertificateTestWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "tt",
                    "sc",
                    "tr",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "tt": {
                      "type": "string",
                      "example": "LP6464-4",
                      "description": "Type of test"
                    },
                    "nm": {
                      "type": "string",
                      "example": "Roche LightCycler qPCR",
                      "description": "NAA Test Name"
                    },
                    "ma": {
                      "type": "string",
                      "description": "RAT Test name and manufacturer"
                    },
                    "sc": {
                      "type": "string",
                      "description": "Date/Time of Sample Collection",
                      "format": "date-time"
                    },
                    "tr": {
                      "type": "string",
                      "description": "Test result"
                    },
                    "tc": {
                      "type": "string",
                      "description": " Testing Centre"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              },
              "r": {
                "type": "array",
                "description": "Recovery Group",
                "items": {
                  "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "fr",
                    "co",
                    "is",
                    "df",
                    "du"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "fr": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Complete date of first positive NAA test result"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    },
                    "df": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Certificate valid from"
                    },
                    "du": {
                      "type": "string",
                      "format": "date",
                      "example": "2022-02-18",
                      "description": "Certificate valid until"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          },
          "metadata": {
            "description": "Note - this field is an optional (string, string) map of metadata",
            "type": "object",
            "additionalProperties": {
              "example": "...",
              "type": "string"
            }
          }
        }
      },
      "SignDCCMetadataResponse": {
        "title": "SignDCCMetadataResponse",
        "type": "object",
        "required": [
          "issuedAt",
          "expiry"
        ],
        "properties": {
          "expiry": {
            "type": "string",
            "example": "date-time"
          },
          "issuedAt": {
            "type": "string",
            "example": "date-time"
          },
          "documentSignerId": {
            "type": "string",
            "format": "uuid"
          },
          "certificateId": {
            "description": "Generated certificate identifier, format as per UVCI",
            "type": "string",
            "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
          }
        }
      },
      "SignDCCResponse": {
        "title": "SignDCCResponse",
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "metadata": {
            "title": "SignDCCMetadataResponse",
            "type": "object",
            "required": [
              "issuedAt",
              "expiry"
            ],
            "properties": {
              "expiry": {
                "type": "string",
                "example": "date-time"
              },
              "issuedAt": {
                "type": "string",
                "example": "date-time"
              },
              "documentSignerId": {
                "type": "string",
                "format": "uuid"
              },
              "certificateId": {
                "description": "Generated certificate identifier, format as per UVCI",
                "type": "string",
                "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
              }
            }
          },
          "payload": {
            "type": "string",
            "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81",
            "description": "Base 45 DCC string"
          }
        }
      },
      "VerifyDCCRequest": {
        "title": "VerifyDCCRequest",
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "string",
            "description": "Base45 encoded DCC",
            "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81"
          }
        }
      },
      "DigitalCovidCertificateVaccine": {
        "allOf": [
          {
            "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
            "type": "object",
            "required": [
              "tg",
              "vp",
              "mp",
              "ma",
              "dn",
              "sd",
              "dt",
              "co",
              "is"
            ],
            "properties": {
              "tg": {
                "type": "string",
                "example": "840539006",
                "description": "Disease Targeted"
              },
              "vp": {
                "type": "string",
                "example": "1119349007",
                "description": "Vaccine"
              },
              "mp": {
                "type": "string",
                "example": "EU/1/20/1528",
                "description": "Vaccine Medicinal Product"
              },
              "ma": {
                "type": "string",
                "example": "ORG-100030215",
                "description": "Market Authorization Holder"
              },
              "dn": {
                "type": "number",
                "example": 1,
                "description": "Dose Number"
              },
              "sd": {
                "type": "number",
                "example": 2,
                "description": "Total Series of Doses"
              },
              "dt": {
                "type": "string",
                "format": "date",
                "example": "2021-02-18",
                "description": "Date Administered ISO8601"
              },
              "co": {
                "type": "string",
                "example": "NZ",
                "description": "Country of adminisration"
              },
              "is": {
                "type": "string",
                "example": "Kakapo Health",
                "description": "Issuer"
              }
            }
          }
        ],
        "title": "DigitalCovidCertificateVaccine",
        "required": [
          "ci"
        ],
        "properties": {
          "ci": {
            "type": "string",
            "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
            "description": "Certificate Identifier"
          }
        }
      },
      "DigitalCovidCertificateTest": {
        "allOf": [
          {
            "title": "DigitalCovidCertificateTestWithoutCertificateId",
            "type": "object",
            "required": [
              "tg",
              "tt",
              "sc",
              "tr",
              "co",
              "is"
            ],
            "properties": {
              "tg": {
                "type": "string",
                "example": "840539006",
                "description": "Disease Targeted"
              },
              "tt": {
                "type": "string",
                "example": "LP6464-4",
                "description": "Type of test"
              },
              "nm": {
                "type": "string",
                "example": "Roche LightCycler qPCR",
                "description": "NAA Test Name"
              },
              "ma": {
                "type": "string",
                "description": "RAT Test name and manufacturer"
              },
              "sc": {
                "type": "string",
                "description": "Date/Time of Sample Collection",
                "format": "date-time"
              },
              "tr": {
                "type": "string",
                "description": "Test result"
              },
              "tc": {
                "type": "string",
                "description": " Testing Centre"
              },
              "co": {
                "type": "string",
                "description": "Country of test"
              },
              "is": {
                "type": "string",
                "description": "Certificate Issuer"
              }
            }
          }
        ],
        "title": "DigitalCovidCertificateTest",
        "required": [
          "ci"
        ],
        "properties": {
          "ci": {
            "type": "string",
            "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
            "description": "Certificate Identifier"
          }
        }
      },
      "DigitalCovidCertificateRecovery": {
        "allOf": [
          {
            "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
            "type": "object",
            "required": [
              "tg",
              "fr",
              "co",
              "is",
              "df",
              "du"
            ],
            "properties": {
              "tg": {
                "type": "string",
                "example": "840539006",
                "description": "Disease Targeted"
              },
              "fr": {
                "type": "string",
                "format": "date",
                "example": "2021-02-18",
                "description": "Complete date of first positive NAA test result"
              },
              "co": {
                "type": "string",
                "description": "Country of test"
              },
              "is": {
                "type": "string",
                "description": "Certificate Issuer"
              },
              "df": {
                "type": "string",
                "format": "date",
                "example": "2021-02-18",
                "description": "Certificate valid from"
              },
              "du": {
                "type": "string",
                "format": "date",
                "example": "2022-02-18",
                "description": "Certificate valid until"
              }
            }
          }
        ],
        "title": "DigitalCovidCertificateRecovery",
        "required": [
          "ci"
        ],
        "properties": {
          "ci": {
            "type": "string",
            "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
            "description": "Certificate Identifier"
          }
        }
      },
      "DigitalCovidCertificate": {
        "allOf": [
          {
            "title": "DigitalCovidCertificateWithoutCertificateId",
            "type": "object",
            "required": [
              "ver",
              "nam",
              "dob"
            ],
            "properties": {
              "ver": {
                "type": "string",
                "enum": [
                  "1.3.0"
                ],
                "description": "Schema version of the DCC payload to use, only latest released version is supported"
              },
              "nam": {
                "title": "DigitalCovidCertificateName",
                "type": "object",
                "required": [
                  "fnt"
                ],
                "properties": {
                  "fn": {
                    "type": "string",
                    "example": "Musterfrau-Gößinger",
                    "description": "Surname"
                  },
                  "fnt": {
                    "type": "string",
                    "example": "MUSTERFRAU<GOESSINGER",
                    "description": "Standardized Surname"
                  },
                  "gn": {
                    "type": "string",
                    "example": "Gabriele",
                    "description": "Forename"
                  },
                  "gnt": {
                    "type": "string",
                    "example": "GABRIELE",
                    "description": "Standardized Forename"
                  }
                }
              },
              "dob": {
                "type": "string",
                "format": "date",
                "description": "Date of Birth",
                "example": "1979-04-14"
              },
              "v": {
                "type": "array",
                "description": "Vaccination Group",
                "items": {
                  "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "vp",
                    "mp",
                    "ma",
                    "dn",
                    "sd",
                    "dt",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "vp": {
                      "type": "string",
                      "example": "1119349007",
                      "description": "Vaccine"
                    },
                    "mp": {
                      "type": "string",
                      "example": "EU/1/20/1528",
                      "description": "Vaccine Medicinal Product"
                    },
                    "ma": {
                      "type": "string",
                      "example": "ORG-100030215",
                      "description": "Market Authorization Holder"
                    },
                    "dn": {
                      "type": "number",
                      "example": 1,
                      "description": "Dose Number"
                    },
                    "sd": {
                      "type": "number",
                      "example": 2,
                      "description": "Total Series of Doses"
                    },
                    "dt": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Date Administered ISO8601"
                    },
                    "co": {
                      "type": "string",
                      "example": "NZ",
                      "description": "Country of adminisration"
                    },
                    "is": {
                      "type": "string",
                      "example": "Kakapo Health",
                      "description": "Issuer"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              },
              "t": {
                "type": "array",
                "description": "Test Group",
                "items": {
                  "title": "DigitalCovidCertificateTestWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "tt",
                    "sc",
                    "tr",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "tt": {
                      "type": "string",
                      "example": "LP6464-4",
                      "description": "Type of test"
                    },
                    "nm": {
                      "type": "string",
                      "example": "Roche LightCycler qPCR",
                      "description": "NAA Test Name"
                    },
                    "ma": {
                      "type": "string",
                      "description": "RAT Test name and manufacturer"
                    },
                    "sc": {
                      "type": "string",
                      "description": "Date/Time of Sample Collection",
                      "format": "date-time"
                    },
                    "tr": {
                      "type": "string",
                      "description": "Test result"
                    },
                    "tc": {
                      "type": "string",
                      "description": " Testing Centre"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              },
              "r": {
                "type": "array",
                "description": "Recovery Group",
                "items": {
                  "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "fr",
                    "co",
                    "is",
                    "df",
                    "du"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "fr": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Complete date of first positive NAA test result"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    },
                    "df": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Certificate valid from"
                    },
                    "du": {
                      "type": "string",
                      "format": "date",
                      "example": "2022-02-18",
                      "description": "Certificate valid until"
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        ],
        "title": "DigitalCovidCertificate",
        "properties": {
          "v": {
            "items": {
              "allOf": [
                {
                  "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "vp",
                    "mp",
                    "ma",
                    "dn",
                    "sd",
                    "dt",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "vp": {
                      "type": "string",
                      "example": "1119349007",
                      "description": "Vaccine"
                    },
                    "mp": {
                      "type": "string",
                      "example": "EU/1/20/1528",
                      "description": "Vaccine Medicinal Product"
                    },
                    "ma": {
                      "type": "string",
                      "example": "ORG-100030215",
                      "description": "Market Authorization Holder"
                    },
                    "dn": {
                      "type": "number",
                      "example": 1,
                      "description": "Dose Number"
                    },
                    "sd": {
                      "type": "number",
                      "example": 2,
                      "description": "Total Series of Doses"
                    },
                    "dt": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Date Administered ISO8601"
                    },
                    "co": {
                      "type": "string",
                      "example": "NZ",
                      "description": "Country of adminisration"
                    },
                    "is": {
                      "type": "string",
                      "example": "Kakapo Health",
                      "description": "Issuer"
                    }
                  }
                }
              ],
              "title": "DigitalCovidCertificateVaccine",
              "required": [
                "ci"
              ],
              "properties": {
                "ci": {
                  "type": "string",
                  "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                  "description": "Certificate Identifier"
                }
              }
            }
          },
          "t": {
            "items": {
              "allOf": [
                {
                  "title": "DigitalCovidCertificateTestWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "tt",
                    "sc",
                    "tr",
                    "co",
                    "is"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "tt": {
                      "type": "string",
                      "example": "LP6464-4",
                      "description": "Type of test"
                    },
                    "nm": {
                      "type": "string",
                      "example": "Roche LightCycler qPCR",
                      "description": "NAA Test Name"
                    },
                    "ma": {
                      "type": "string",
                      "description": "RAT Test name and manufacturer"
                    },
                    "sc": {
                      "type": "string",
                      "description": "Date/Time of Sample Collection",
                      "format": "date-time"
                    },
                    "tr": {
                      "type": "string",
                      "description": "Test result"
                    },
                    "tc": {
                      "type": "string",
                      "description": " Testing Centre"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    }
                  }
                }
              ],
              "title": "DigitalCovidCertificateTest",
              "required": [
                "ci"
              ],
              "properties": {
                "ci": {
                  "type": "string",
                  "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                  "description": "Certificate Identifier"
                }
              }
            }
          },
          "r": {
            "items": {
              "allOf": [
                {
                  "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                  "type": "object",
                  "required": [
                    "tg",
                    "fr",
                    "co",
                    "is",
                    "df",
                    "du"
                  ],
                  "properties": {
                    "tg": {
                      "type": "string",
                      "example": "840539006",
                      "description": "Disease Targeted"
                    },
                    "fr": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Complete date of first positive NAA test result"
                    },
                    "co": {
                      "type": "string",
                      "description": "Country of test"
                    },
                    "is": {
                      "type": "string",
                      "description": "Certificate Issuer"
                    },
                    "df": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-02-18",
                      "description": "Certificate valid from"
                    },
                    "du": {
                      "type": "string",
                      "format": "date",
                      "example": "2022-02-18",
                      "description": "Certificate valid until"
                    }
                  }
                }
              ],
              "title": "DigitalCovidCertificateRecovery",
              "required": [
                "ci"
              ],
              "properties": {
                "ci": {
                  "type": "string",
                  "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                  "description": "Certificate Identifier"
                }
              }
            }
          }
        }
      },
      "VerifyDCCMetadataResponse": {
        "title": "VerifyDCCMetadataResponse",
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "example": "date-time"
          },
          "issuedAt": {
            "type": "string",
            "example": "date-time"
          },
          "trustedDocumentSignerId": {
            "type": "string",
            "format": "uuid"
          },
          "certificateId": {
            "description": "Certificate identifier, format as per UVCI",
            "type": "string",
            "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
          }
        }
      },
      "VerifyDCCResponse": {
        "title": "VerifyDCCResponse",
        "type": "object",
        "required": [
          "verified"
        ],
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "payload": {
            "allOf": [
              {
                "title": "DigitalCovidCertificateWithoutCertificateId",
                "type": "object",
                "required": [
                  "ver",
                  "nam",
                  "dob"
                ],
                "properties": {
                  "ver": {
                    "type": "string",
                    "enum": [
                      "1.3.0"
                    ],
                    "description": "Schema version of the DCC payload to use, only latest released version is supported"
                  },
                  "nam": {
                    "title": "DigitalCovidCertificateName",
                    "type": "object",
                    "required": [
                      "fnt"
                    ],
                    "properties": {
                      "fn": {
                        "type": "string",
                        "example": "Musterfrau-Gößinger",
                        "description": "Surname"
                      },
                      "fnt": {
                        "type": "string",
                        "example": "MUSTERFRAU<GOESSINGER",
                        "description": "Standardized Surname"
                      },
                      "gn": {
                        "type": "string",
                        "example": "Gabriele",
                        "description": "Forename"
                      },
                      "gnt": {
                        "type": "string",
                        "example": "GABRIELE",
                        "description": "Standardized Forename"
                      }
                    }
                  },
                  "dob": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of Birth",
                    "example": "1979-04-14"
                  },
                  "v": {
                    "type": "array",
                    "description": "Vaccination Group",
                    "items": {
                      "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "vp",
                        "mp",
                        "ma",
                        "dn",
                        "sd",
                        "dt",
                        "co",
                        "is"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "vp": {
                          "type": "string",
                          "example": "1119349007",
                          "description": "Vaccine"
                        },
                        "mp": {
                          "type": "string",
                          "example": "EU/1/20/1528",
                          "description": "Vaccine Medicinal Product"
                        },
                        "ma": {
                          "type": "string",
                          "example": "ORG-100030215",
                          "description": "Market Authorization Holder"
                        },
                        "dn": {
                          "type": "number",
                          "example": 1,
                          "description": "Dose Number"
                        },
                        "sd": {
                          "type": "number",
                          "example": 2,
                          "description": "Total Series of Doses"
                        },
                        "dt": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Date Administered ISO8601"
                        },
                        "co": {
                          "type": "string",
                          "example": "NZ",
                          "description": "Country of adminisration"
                        },
                        "is": {
                          "type": "string",
                          "example": "Kakapo Health",
                          "description": "Issuer"
                        }
                      }
                    },
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "t": {
                    "type": "array",
                    "description": "Test Group",
                    "items": {
                      "title": "DigitalCovidCertificateTestWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "tt",
                        "sc",
                        "tr",
                        "co",
                        "is"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "tt": {
                          "type": "string",
                          "example": "LP6464-4",
                          "description": "Type of test"
                        },
                        "nm": {
                          "type": "string",
                          "example": "Roche LightCycler qPCR",
                          "description": "NAA Test Name"
                        },
                        "ma": {
                          "type": "string",
                          "description": "RAT Test name and manufacturer"
                        },
                        "sc": {
                          "type": "string",
                          "description": "Date/Time of Sample Collection",
                          "format": "date-time"
                        },
                        "tr": {
                          "type": "string",
                          "description": "Test result"
                        },
                        "tc": {
                          "type": "string",
                          "description": " Testing Centre"
                        },
                        "co": {
                          "type": "string",
                          "description": "Country of test"
                        },
                        "is": {
                          "type": "string",
                          "description": "Certificate Issuer"
                        }
                      }
                    },
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "r": {
                    "type": "array",
                    "description": "Recovery Group",
                    "items": {
                      "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "fr",
                        "co",
                        "is",
                        "df",
                        "du"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "fr": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Complete date of first positive NAA test result"
                        },
                        "co": {
                          "type": "string",
                          "description": "Country of test"
                        },
                        "is": {
                          "type": "string",
                          "description": "Certificate Issuer"
                        },
                        "df": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Certificate valid from"
                        },
                        "du": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-02-18",
                          "description": "Certificate valid until"
                        }
                      }
                    },
                    "minItems": 1,
                    "maxItems": 1
                  }
                }
              }
            ],
            "title": "DigitalCovidCertificate",
            "properties": {
              "v": {
                "items": {
                  "allOf": [
                    {
                      "title": "DigitalCovidCertificateVaccineWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "vp",
                        "mp",
                        "ma",
                        "dn",
                        "sd",
                        "dt",
                        "co",
                        "is"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "vp": {
                          "type": "string",
                          "example": "1119349007",
                          "description": "Vaccine"
                        },
                        "mp": {
                          "type": "string",
                          "example": "EU/1/20/1528",
                          "description": "Vaccine Medicinal Product"
                        },
                        "ma": {
                          "type": "string",
                          "example": "ORG-100030215",
                          "description": "Market Authorization Holder"
                        },
                        "dn": {
                          "type": "number",
                          "example": 1,
                          "description": "Dose Number"
                        },
                        "sd": {
                          "type": "number",
                          "example": 2,
                          "description": "Total Series of Doses"
                        },
                        "dt": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Date Administered ISO8601"
                        },
                        "co": {
                          "type": "string",
                          "example": "NZ",
                          "description": "Country of adminisration"
                        },
                        "is": {
                          "type": "string",
                          "example": "Kakapo Health",
                          "description": "Issuer"
                        }
                      }
                    }
                  ],
                  "title": "DigitalCovidCertificateVaccine",
                  "required": [
                    "ci"
                  ],
                  "properties": {
                    "ci": {
                      "type": "string",
                      "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                      "description": "Certificate Identifier"
                    }
                  }
                }
              },
              "t": {
                "items": {
                  "allOf": [
                    {
                      "title": "DigitalCovidCertificateTestWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "tt",
                        "sc",
                        "tr",
                        "co",
                        "is"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "tt": {
                          "type": "string",
                          "example": "LP6464-4",
                          "description": "Type of test"
                        },
                        "nm": {
                          "type": "string",
                          "example": "Roche LightCycler qPCR",
                          "description": "NAA Test Name"
                        },
                        "ma": {
                          "type": "string",
                          "description": "RAT Test name and manufacturer"
                        },
                        "sc": {
                          "type": "string",
                          "description": "Date/Time of Sample Collection",
                          "format": "date-time"
                        },
                        "tr": {
                          "type": "string",
                          "description": "Test result"
                        },
                        "tc": {
                          "type": "string",
                          "description": " Testing Centre"
                        },
                        "co": {
                          "type": "string",
                          "description": "Country of test"
                        },
                        "is": {
                          "type": "string",
                          "description": "Certificate Issuer"
                        }
                      }
                    }
                  ],
                  "title": "DigitalCovidCertificateTest",
                  "required": [
                    "ci"
                  ],
                  "properties": {
                    "ci": {
                      "type": "string",
                      "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                      "description": "Certificate Identifier"
                    }
                  }
                }
              },
              "r": {
                "items": {
                  "allOf": [
                    {
                      "title": "DigitalCovidCertificateRecoveryWithoutCertificateId",
                      "type": "object",
                      "required": [
                        "tg",
                        "fr",
                        "co",
                        "is",
                        "df",
                        "du"
                      ],
                      "properties": {
                        "tg": {
                          "type": "string",
                          "example": "840539006",
                          "description": "Disease Targeted"
                        },
                        "fr": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Complete date of first positive NAA test result"
                        },
                        "co": {
                          "type": "string",
                          "description": "Country of test"
                        },
                        "is": {
                          "type": "string",
                          "description": "Certificate Issuer"
                        },
                        "df": {
                          "type": "string",
                          "format": "date",
                          "example": "2021-02-18",
                          "description": "Certificate valid from"
                        },
                        "du": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-02-18",
                          "description": "Certificate valid until"
                        }
                      }
                    }
                  ],
                  "title": "DigitalCovidCertificateRecovery",
                  "required": [
                    "ci"
                  ],
                  "properties": {
                    "ci": {
                      "type": "string",
                      "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C",
                      "description": "Certificate Identifier"
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "title": "VerifyDCCMetadataResponse",
            "type": "object",
            "properties": {
              "expiry": {
                "type": "string",
                "example": "date-time"
              },
              "issuedAt": {
                "type": "string",
                "example": "date-time"
              },
              "trustedDocumentSignerId": {
                "type": "string",
                "format": "uuid"
              },
              "certificateId": {
                "description": "Certificate identifier, format as per UVCI",
                "type": "string",
                "example": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
              }
            }
          },
          "error": {
            "type": "object",
            "required": [
              "type",
              "message"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          }
        }
      },
      "GenerateQRCodeRequest": {
        "title": "GenerateQRCodeRequest",
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "string",
            "description": "Base45 encoded DCC",
            "example": "HC1:6BFT70I90T9WTWGSLKC 4W59BFIZO1XM4$FOFBBT30FS0QE8$R8$X8X$9W*0QE8VE73+K5.J*70X+9D97TK0F90$PC5$CUZCY$5Y$5TPCBEC7ZKW.CWOCW3ELPCG/DWOC/0A JC0/DKI949DMPCG/DOUC11A.+9GVC*JC1A6IA74W5Y96TF6KECTHG4KCD3DX47B46IL6646H*6Z/E5JD%96IA7B46646VX6Q$D.UDRYA 96NF6L/5SW6Y57B$D% D3IA4W5646946846.96XJC$+D3KC.SCXJCCWENF6OF63W5KF60A6WJCT3EX+9%JCUQE8H8YNAZ6AM347%EKWEMEDWJC0FDU56:KEPH7M/ESDD746IG77TA$96T476:6/Q6M*8CR63Y8R46WX8F46VL6/G8SF6DR64S8+96-9A268658EDUXINC5QUE7WYBZCJ/OIYJ7-+BH03L%4/.LY017XRHCUX4DW1N/UK72LO/5S8FEUP*OFT U-/9JUI-+FMRN+YH9CC/01HZDUMS81"
          }
        }
      },
      "NZCPPayload": {
        "title": "NZCPPayload",
        "type": "object",
        "description": "NZCPPayload",
        "properties": {
          "givenName": {
            "type": "string",
            "example": "Patrick John"
          },
          "familyName": {
            "type": "string",
            "example": "Smith"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "example": "1990-06-01"
          }
        },
        "required": [
          "givenName",
          "dob"
        ]
      },
      "VerifyNZCPMetadataResponse": {
        "title": "VerifyNZCPMetadataResponse",
        "type": "object",
        "description": "Metadata response from NZCP verify",
        "properties": {
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "example": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98"
          },
          "issuer": {
            "type": "string",
            "example": "did:web:example.com"
          },
          "type": {
            "type": "string",
            "example": "PublicCovidPass"
          }
        }
      },
      "VerifyNZCPResponse": {
        "title": "VerifyNZCPResponse",
        "type": "object",
        "description": "VerifyNZCPResponse",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "payload": {
            "title": "NZCPPayload",
            "type": "object",
            "description": "NZCPPayload",
            "properties": {
              "givenName": {
                "type": "string",
                "example": "Patrick John"
              },
              "familyName": {
                "type": "string",
                "example": "Smith"
              },
              "dob": {
                "type": "string",
                "format": "date",
                "example": "1990-06-01"
              }
            },
            "required": [
              "givenName",
              "dob"
            ]
          },
          "metadata": {
            "title": "VerifyNZCPMetadataResponse",
            "type": "object",
            "description": "Metadata response from NZCP verify",
            "properties": {
              "expiry": {
                "type": "string",
                "format": "date-time"
              },
              "notBefore": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "string",
                "example": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98"
              },
              "issuer": {
                "type": "string",
                "example": "did:web:example.com"
              },
              "type": {
                "type": "string",
                "example": "PublicCovidPass"
              }
            }
          },
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            },
            "required": [
              "type",
              "message"
            ]
          }
        },
        "required": [
          "verified"
        ]
      }
    },
    "parameters": {
      "limit": {
        "schema": {
          "type": "number",
          "example": 2,
          "maximum": 1000,
          "minimum": 1,
          "default": 100
        },
        "in": "query",
        "name": "limit",
        "description": "Range size of the list, default 100"
      },
      "cursor": {
        "schema": {
          "type": "string",
          "example": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
        },
        "in": "query",
        "name": "cursor",
        "description": "Starting point for the list"
      }
    },
    "examples": {
      "DigitalCovidCertificateDocumentSignerUpdate": {
        "value": {
          "certificatePem": "-----BEGIN CERTIFICATE-----\\r\\nMIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV\\r\\nBAMeCgBNAGEAdAB0AHIwHhcNMjEwOTE2MDMyNDM4WhcNMjMwOTE2MDMyNDM4WjAg\\r\\nMR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq\\r\\nhkjOPQMBBwNCAAQJJy6qRSK7P7m15b+zckhLGCfkrh4VcldVP44q3SDAxhWKxETa\\r\\n9Gw5JDjQi8AM8LPbAR7/wM4pS9UkQvuKbkM0o0gwRjASBgNVHRMBAf8ECDAGAQH/\\r\\nAgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQECBgsrBgEEAY43j2UBAQYLKwYBBAGO\\r\\nN49lAQMwCgYIKoZIzj0EAwIDRwAwRAIgHs8ZpdsdcQSAjN5sN+4JR0fCUilD+N25\\r\\nC1w+VYiRiDICIHxfjxu99xhQe74cY9OdS19k1iwM99g8ivWuNPHZvoVv\\r\\n-----END CERTIFICATE-----\\r\\n"
        }
      },
      "DigitalCovidCertificateTrustedDocumentSignerImport": {
        "value": {
          "certificatePem": "-----BEGIN CERTIFICATE-----\\r\\nMIIBdjCCAR2gAwIBAgIBATAKBggqhkjOPQQDAjAgMR4wCQYDVQQGEwJOWjARBgNV\\r\\nBAMeCgBNAGEAdAB0AHIwHhcNMjEwOTE2MDMyNDM4WhcNMjMwOTE2MDMyNDM4WjAg\\r\\nMR4wCQYDVQQGEwJOWjARBgNVBAMeCgBNAGEAdAB0AHIwWTATBgcqhkjOPQIBBggq\\r\\nhkjOPQMBBwNCAAQJJy6qRSK7P7m15b+zckhLGCfkrh4VcldVP44q3SDAxhWKxETa\\r\\n9Gw5JDjQi8AM8LPbAR7/wM4pS9UkQvuKbkM0o0gwRjASBgNVHRMBAf8ECDAGAQH/\\r\\nAgEDMDAGA1UdJQQpMCcGCysGAQQBjjePZQECBgsrBgEEAY43j2UBAQYLKwYBBAGO\\r\\nN49lAQMwCgYIKoZIzj0EAwIDRwAwRAIgHs8ZpdsdcQSAjN5sN+4JR0fCUilD+N25\\r\\nC1w+VYiRiDICIHxfjxu99xhQe74cY9OdS19k1iwM99g8ivWuNPHZvoVv\\r\\n-----END CERTIFICATE-----\\r\\n"
        }
      },
      "DigitalCovidCertificateTrustedDocumentSignerUpdate": {
        "value": {
          "public": true
        }
      },
      "DigitalCovidCertificateVaccineCertificateRequest": {
        "value": {
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "v": [
              {
                "tg": "840539006",
                "vp": "1119349007",
                "mp": "EU/1/20/1528",
                "ma": "ORG-100030215",
                "dn": 1,
                "sd": 2,
                "dt": "2021-02-18",
                "co": "NZ",
                "is": "Kakapo Health, NZ"
              }
            ]
          },
          "metadata": {
            "exampleEternalId": "123"
          }
        }
      },
      "DigitalCovidCertificateTestCertificateRequest": {
        "value": {
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "t": [
              {
                "tg": "840539006",
                "tt": "LP6464-4",
                "nm": "Roche LightCycler qPCR",
                "sc": "2021-02-20T12:34:56Z",
                "tr": "260415000",
                "tc": "Testing center 1",
                "co": "NZ",
                "is": "Kakapo Health, NZ"
              }
            ]
          },
          "metadata": {
            "exampleExternalId": "123"
          }
        }
      },
      "DigitalCovidCertificateRecoveryCertificateRequest": {
        "value": {
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "r": [
              {
                "tg": "840539006",
                "fr": "2021-02-20",
                "co": "NZ",
                "is": "Kakapo Health, NZ",
                "df": "2021-02-20",
                "du": "2022-02-20"
              }
            ]
          },
          "metadata": {
            "exampleExternalId": "123"
          }
        }
      },
      "DigitalCovidCertificateVaccineCertificateVerifyResponse": {
        "value": {
          "verified": true,
          "metadata": {
            "expiry": "2022-02-20T12:34:56Z",
            "issuedAt": "2021-02-20T12:34:56Z",
            "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
          },
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "v": [
              {
                "tg": "840539006",
                "vp": "1119349007",
                "mp": "EU/1/20/1528",
                "ma": "ORG-100030215",
                "dn": 1,
                "sd": 2,
                "dt": "2021-02-18",
                "co": "NZ",
                "is": "Kakapo Health, NZ",
                "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
              }
            ]
          }
        }
      },
      "DigitalCovidCertificateTestCertificateVerifyResponse": {
        "value": {
          "verified": true,
          "metadata": {
            "expiry": "2022-02-20T12:34:56Z",
            "issuedAt": "2021-02-20T12:34:56Z",
            "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
          },
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "t": [
              {
                "tg": "840539006",
                "tt": "LP6464-4",
                "nm": "Roche LightCycler qPCR",
                "sc": "2021-02-20T12:34:56Z",
                "tr": "260415000",
                "tc": "Testing centre 1",
                "co": "NZ",
                "is": "Kakapo Health, NZ",
                "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
              }
            ]
          }
        }
      },
      "DigitalCovidCertificateRecoveryCertificateVerifyResponse": {
        "value": {
          "verified": true,
          "metadata": {
            "expiry": "2022-02-20T12:34:56Z",
            "issuedAt": "2021-02-20T12:34:56Z",
            "trustedDocumentSignerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "certificateId": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
          },
          "payload": {
            "ver": "1.3.0",
            "nam": {
              "fn": "Musterfrau-Gößinger",
              "fnt": "MUSTERFRAU<GOESSINGER",
              "gn": "Gabriele",
              "gnt": "GABRIELE"
            },
            "dob": "1998-02-26",
            "r": [
              {
                "tg": "840539006",
                "fr": "2021-02-20",
                "co": "NZ",
                "is": "Kakapo Health, NZ",
                "df": "2021-02-20",
                "du": "2022-02-20",
                "ci": "UVCI:01:NZ:3F1C753A5BE94462BE85FEDD0A57B48C"
              }
            ]
          }
        }
      },
      "DigitalCovidCertificateVerifyFalseResponse": {
        "value": {
          "verified": false,
          "error": {
            "type": "DocumentSignerNotTrustedError",
            "message": "Document Signer not trusted"
          }
        }
      },
      "NzcpSuccessfullyVerified": {
        "value": {
          "verified": true,
          "payload": {
            "givenName": "Jack",
            "familyName": "Sparrow",
            "dob": "1960-04-16"
          },
          "metadata": {
            "notBefore": "2021-11-02T20:05:30.000Z",
            "expiry": "2031-11-02T20:05:30.000Z",
            "issuer": "did:web:nzcp.covid19.health.nz",
            "type": "PublicCovidPass",
            "id": "urn:uuid:60a4f54d-4e30-4332-be33-ad78b1eafa4b"
          }
        }
      },
      "NzcpIssuerNotTrustedError": {
        "value": {
          "verified": false,
          "error": {
            "type": "NzcpIssuerNotTrusted",
            "message": "NZCP not issued by a trusted issuer",
            "details": {
              "iss": "did:web:example.com"
            }
          }
        }
      },
      "NzcpExpiredError": {
        "value": {
          "verified": false,
          "payload": {
            "givenName": "Patrick John",
            "familyName": "Smith",
            "dob": "1990-06-01"
          },
          "error": {
            "type": "NzcpExpired",
            "message": "NZCP is expired, current time is greater than expiry",
            "details": {
              "expiry": "2021-10-20T12:34:56.000Z",
              "currentDate": "2021-12-20T12:34:56.000Z"
            }
          },
          "metadata": {
            "expiry": "2021-10-20T12:34:56.000Z",
            "notBefore": "2021-02-20T12:34:56.000Z",
            "id": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98",
            "issuer": "did:web:example.com",
            "type": "PublicCovidPass"
          }
        }
      },
      "NzcpNotActiveError": {
        "value": {
          "verified": false,
          "payload": {
            "givenName": "Patrick John",
            "familyName": "Smith",
            "dob": "1990-06-01"
          },
          "error": {
            "type": "NzcpNotActive",
            "message": "NZCP not active, notBefore is greater than current time",
            "details": {
              "notBefore": "2021-02-20T12:34:56.000Z",
              "currentDate": "2021-01-20T12:34:56.000Z"
            }
          },
          "metadata": {
            "expiry": "2021-10-20T12:34:56.000Z",
            "notBefore": "2021-02-20T12:34:56.000Z",
            "id": "urn:uuid:850a1de1-f890-4be5-b105-d721e5f3bc98",
            "issuer": "did:web:example.com",
            "type": "PublicCovidPass"
          }
        }
      },
      "SignatureVerificationError": {
        "value": {
          "verified": false,
          "error": {
            "type": "SignatureVerificationError",
            "message": "COSE signature verification failed"
          }
        }
      },
      "InvalidDidMethod": {
        "value": {
          "verified": false,
          "error": {
            "type": "InvalidDidMethod",
            "message": "Invalid DID method ion"
          }
        }
      },
      "JsonSchemaValidationError": {
        "value": {
          "verified": false,
          "error": {
            "type": "JsonSchemaValidationError",
            "message": "JSON schema validation failed on decoded NZCP",
            "details": {
              "errors": null,
              "payload": {
                "@context": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://health.govt.nz/credentials/cpnz"
                ],
                "credentialSubject": {
                  "givenName": "Patrick John",
                  "familyName": "Smith",
                  "dob": "1990-06-01"
                },
                "type": [
                  "VerifiableCredential",
                  "PublicCovidPass"
                ],
                "version": "1.0.0"
              }
            }
          }
        }
      },
      "FailedToResolveDidDocumentError": {
        "value": {
          "verified": false,
          "error": {
            "type": "FailedToResolveDidDocumentError",
            "message": "Failed to resolve DID document"
          }
        }
      },
      "InvalidPublicKeyError": {
        "value": {
          "verified": false,
          "error": {
            "type": "InvalidPublicKeyError",
            "message": "Invalid public key",
            "details": {
              "didDocumentPublicKey": "did:web:example.com#key-1"
            }
          }
        }
      },
      "PayloadNotStringError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "1",
              "msg": "must be a string",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "PayloadMissingError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "",
              "msg": "cannot be an empty string",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "Base32DecodeError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "NZCP:/1/!@#$%^&*()",
              "msg": "Failed to decode base32 payload",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "MissingPrefixError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "UNKNOWN_PREFIX:/1/INVALID",
              "msg": "Unknown prefix, expected payload to start with 'NZCP:'",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "CborDecodeError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "NZCP:/1/INVALID",
              "msg": "Failed to decode COSE payload",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "NzcpPayloadError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "invalid payload",
              "msg": "Payload must contain prefix, version and base32 payload",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "VersionUnsupportedError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "NZCP:/99/INVALID",
              "msg": "Unsupported payload version '1'",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "NzcpCwtPayloadError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "NZCP:/1/INVALID_CWT_PAYLOAD",
              "msg": "Failed to extract NZCP CWT payload",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      },
      "InvalidPdfError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "msg": "Failed to parse PDF",
              "location": "body"
            }
          ]
        }
      },
      "InvalidImageError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "msg": "Failed to parse Image",
              "location": "body"
            }
          ]
        }
      },
      "MissingQrCodeError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "msg": "Failed to detect QR code",
              "location": "body"
            }
          ]
        }
      },
      "UnknownError": {
        "value": {
          "code": "BadRequest",
          "message": "Validation Error",
          "details": [
            {
              "value": "NZCP:/1/UNKNOWN_PAYLOAD",
              "msg": "Unexpected error",
              "param": "payload",
              "location": "body"
            }
          ]
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://{tenant-subdomain}.vii.mattr.global",
      "variables": {
        "tenant-subdomain": {
          "default": "YOUR_TENANT_SUBDOMAIN",
          "description": "The subdomain assigned and issued when the tenant was established"
        }
      }
    }
  ]
}